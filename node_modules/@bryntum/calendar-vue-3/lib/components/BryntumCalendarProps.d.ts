import type { AgendaViewConfig, AlignSpec, AssignmentModel, AssignmentModelConfig, AssignmentStore, AssignmentStoreConfig, Base, ButtonConfig, CalendarDatePickerConfig, CalendarDrag, CalendarDragConfig, CalendarListeners, ContainerConfig, ContainerItemConfig, ContainerLayoutConfig, CrudManagerConfig, DatePickerConfig, DayResourceViewConfig, DayViewConfig, EventBuffer, EventBufferConfig, EventCopyPaste, EventCopyPasteConfig, EventEdit, EventEditConfig, EventListConfig, EventMenu, EventMenuConfig, EventModel, EventModelConfig, EventStore, EventStoreConfig, EventTooltip, EventTooltipConfig, ExcelExporter, ExcelExporterConfig, ExternalEventSource, ExternalEventSourceConfig, KeyMapConfig, LoadOnDemand, LoadOnDemandConfig, Mask, MaskConfig, MenuItemConfig, MonthViewConfig, PagingToolbarConfig, PanelCollapserConfig, PanelCollapserOverlayConfig, PanelHeader, Print, PrintConfig, ProjectModel, ProjectModelConfig, Rectangle, RecurrenceConfirmationPopup, RecurrenceConfirmationPopupConfig, ResourceFilterConfig, ResourceModel, ResourceModelConfig, ResourceStore, ResourceStoreConfig, ResourceTimeRangeModel, ResourceTimeRangeModelConfig, ResourceTimeRangeStore, ResourceTimeRangeStoreConfig, ResourceViewConfig, ScheduleMenu, ScheduleMenuConfig, ScheduleTooltip, ScheduleTooltipConfig, SchedulerCrudManager, Scroller, ScrollerConfig, StateProvider, TabConfig, TextFieldConfig, TimeRangeModel, TimeRangeModelConfig, TimeRangeStore, TimeRangeStoreConfig, TimeRanges, TimeRangesConfig, ToolConfig, ToolbarConfig, ToolbarItems, TooltipConfig, WeekExpander, WeekExpanderConfig, WeekViewConfig, Widget, YearViewConfig } from '@bryntum/calendar';
export declare type BryntumCalendarProps = {
    /**
     * An optional CSS class name to add to calendar date cells which encapsulate the calendar's
     * active [date](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#property-date).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-activeDateCls)
     */
    activeDateCls?: string;
    /**
     * Element (or element id) to adopt as this Widget's encapsulating element. The widget's
     * content will be placed inside this element.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-adopt)
     */
    adopt?: HTMLElement | string;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-align)
     */
    align?: AlignSpec | string;
    /**
     * When this widget is a child of a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container), it will by default be participating in a
     * flexbox layout. This config allows you to set this widget's
     * [align-self](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self) style.
     */
    alignSelf?: string;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating) and being shown through [showBy](#Core/widget/Widget#function-showBy).*
     * `true` to show a connector arrow pointing to the align target.
     */
    anchor?: Boolean;
    /**
     * Element (or the id of an element) to append this widget's element to. Can be configured, or set once at
     * runtime. To access the element of a rendered widget, see [element](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-element).
     */
    appendTo?: HTMLElement | string;
    /**
     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject
     * into an element which will be linked using the `aria-describedby` attribute.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-ariaDescription)
     */
    ariaDescription?: string;
    /**
     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject as
     * the `aria-label` attribute.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-ariaLabel)
     */
    ariaLabel?: string;
    /**
     * The `aria-live` value for this widget.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-ariaLive)
     * @deprecated Will be removed in 7.0
     */
    ariaLive?: string;
    /**
     * Inline assignments, will be loaded into the [assignmentStore](https://bryntum.com/products/calendar/docs/api/Calendar/mixin/CalendarStores#property-assignmentStore).
     */
    assignments?: AssignmentModel[] | AssignmentModelConfig[];
    /**
     * The [AssignmentStore](https://bryntum.com/products/calendar/docs/api/Scheduler/data/AssignmentStore) or a reconfiguring object for a store which will hold assignments linking resources to events.
     */
    assignmentStore?: AssignmentStore | AssignmentStoreConfig;
    /**
     * If this config is set, then the `gesture` configured (which defaults to `dblclick`) creates a
     * new event at the mouse or touch event's time point.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-autoCreate)
     */
    autoCreate?: {
        gesture?: string;
        newName?: Function | string;
        step?: string;
        duration?: string;
        startHour?: number | string;
    } | string | Boolean;
    /**
     * A Config object representing the configuration of a [Toolbar](https://bryntum.com/products/calendar/docs/api/Core/widget/Toolbar),
     * or array of config objects representing the child items of a Toolbar. Another way to add a bbar is to use [strips](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-strips).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-bbar)
     */
    bbar?: (ContainerItemConfig | string)[] | ToolbarConfig | PagingToolbarConfig | null;
    /**
     * Custom CSS classes to add to the panel's body element.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-bodyCls)
     */
    bodyCls?: string | object;
    /**
     * An object where property names with a truthy value indicate which events should bubble up the ownership
     * hierarchy when triggered.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-bubbleEvents)
     */
    bubbleEvents?: object;
    /**
     * Set to `false` to not call onXXX method names (e.g. `onShow`, `onClick`), as an easy way to listen for events.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-callOnFunctions)
     */
    callOnFunctions?: Boolean;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * Set to `true` to centre the Widget in browser viewport space.
     */
    centered?: Boolean;
    /**
     * Custom CSS classes to add to element.
     * May be specified as a space separated string, or as an object in which property names
     * with truthy values are used as the class names:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-cls)
     */
    cls?: string | object;
    /**
     * Controls whether the panel is collapsed (the body of the panel is hidden while only the header is
     * visible). Only valid if the panel is [collapsible](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-collapsible).
     */
    collapsed?: Boolean;
    /**
     * This config enables collapsibility for the panel. See [collapsed](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-collapsed).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-collapsible)
     */
    collapsible?: Boolean | PanelCollapserConfig | PanelCollapserOverlayConfig;
    config?: object;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating) or [positioned](#Core/widget/Widget#config-positioned).*
     * Element, Widget or Rectangle to which this Widget is constrained.
     */
    constrainTo?: HTMLElement | Widget | Rectangle;
    /**
     * Custom CSS classes to add to the [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement).
     * May be specified as a space separated string, or as an object in which property names
     * with truthy values are used as the class names:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-contentElementCls)
     */
    contentElementCls?: string | object;
    /**
     * Event which is used to show context menus via the context menu features
     * [EventMenu](https://bryntum.com/products/calendar/docs/api/Calendar/feature/EventMenu) and [ScheduleMenu](#Calendar/feature/ScheduleMenu).
     * Available options are: 'contextmenu', 'click', 'dblclick'.
     */
    contextMenuTriggerEvent?: 'contextmenu' | 'click' | 'dblclick';
    /**
     * Supply a [CrudManager](https://bryntum.com/products/calendar/docs/api/Scheduler/data/CrudManager) instance or a config object if you want to use
     * CrudManager for handling data.
     */
    crudManager?: CrudManagerConfig | SchedulerCrudManager;
    /**
     * Class that should be used to instantiate a CrudManager in case it's provided as a simple object to
     * [crudManager](https://bryntum.com/products/calendar/docs/api/Calendar/mixin/CalendarStores#config-crudManager) config.
     */
    crudManagerClass?: SchedulerCrudManager;
    /**
     * Object to apply to elements dataset (each key will be used as a data-attribute on the element)
     */
    dataset?: Record<string, string>;
    /**
     * The date which the Calendar, its [sidebar](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#property-sidebar)'s date picker, and
     * its active view should encapsulate upon creation.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-date)
     */
    date?: Date | string;
    /**
     * A [DateHelper](https://bryntum.com/products/calendar/docs/api/Core/helper/DateHelper) format string to use to create date output for
     * view descriptions.
     */
    dateFormat?: string;
    /**
     * An optional config object to configure the [CalendarDatePicker](https://bryntum.com/products/calendar/docs/api/Calendar/widget/CalendarDatePicker) which is
     * shown in the [sidebar](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#property-sidebar) next to the calendar views.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-datePicker)
     * @param {boolean,'count','dots'} datePicker.showEvents Displays the presence of events in each cell. values may be:  * `false` - Do not show events in cells. * `true` - Show a themeable bullet to indicate the presence of events for a date. * `'count'` - Show a themeable badge containing the event count for a date. * '`dots'` - Show small event-coloured bullets (to a maximum of three) below the date.
     * @param {boolean} datePicker.collapsible `true` to enable collapse into a header.
     * @param {string} datePicker.title The text to place in a header above the picker.
     * @param {boolean} datePicker.editMonth `true` to enable setting the date using the controls in the DatePicker header.
     * @param {boolean,'range'} multiSelect The DatePicker can select [multiple dates](https://bryntum.com/products/calendar/docs/api/Core/widget/DatePicker#config-multiSelect) in two modes:  * `true` to mean many discontiguous dates may be selected. * `'range'` to mean that a start date and end date may be selected.  If set up to multi select, views which are not fixed to a date duration will obey the date selection by using a [dateFilter](https://bryntum.com/products/calendar/docs/api/Calendar/widget/DayView#property-dateFilter) to skip days which are not selected. These include:  * AgendaView      (mode type `'agenda'`) * DayViews        (view type `'dayview'`) which you add to the modes - The default `day` and `week` modes have a fixed duration. * ResourceView    (view type `'resourceview'`) * DayResourceView (view type `'dayresourceview'`)  The `MonthView`, and the `WeekView` and the built-in single day `DayView` <strong>mode</strong> all have fixed duration and will not participate in this. If you select a discontiguous range, then the views which are amenable to being controlled in this way will switch their range to encompass what you have selected. For example, if you select the first to the last days of a month, the view's [range](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/DateRangeOwner#property-range) will be set to `'1 month'`. This choice will be maintained, and by navigating using the next and previous tbar buttons, the views will move by exactly one month. If your set of selected dates is enclosed within a two week block, then the [range](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/DateRangeOwner#property-range) of the views will be set to `{ unit : 'week', magnitude : 2 }`. If you select the 1st, 3th and 5th of the month, and those days are all on one week row, the [range](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/DateRangeOwner#property-range) of the views will be set to `{ unit : 'week', magnitude : 1 }`. For selection ranges other than exactly one month, navigation in time will be in increments of one week for intuitive navigation up and down the date picker. When navigating in time, the selected block of dates moves and *follows the time navigation* so that there are always dates in view, even if they are empty.
     */
    datePicker?: CalendarDatePickerConfig | Boolean | null;
    /**
     * The name of the property to set when a single value is to be applied to this Widget. Such as when used
     * in a grid WidgetColumn, this is the property to which the column's `field` is applied.
     */
    defaultBindProperty?: string;
    /**
     * The calendar ([Resource](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ResourceModel)), (or its `id`) to use as the
     * default calendar for new events created using [dblclick](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-autoCreate)
     * or [drag-create](https://bryntum.com/products/calendar/docs/api/Calendar/feature/CalendarDrag), or [dragging in](#Calendar/feature/ExternalEventSource).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-defaultCalendar)
     */
    defaultCalendar?: string | ResourceModel;
    /**
     * A [query](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#function-query) selector function which can identify the descendant widget to which
     * focus should be directed by default.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-defaultFocus)
     * @param {Core.widget.Widget} widget Widget passed to method
     * @returns {boolean} truthy value if widget is the default one
     */
    defaultFocus?: ((widget: Widget) => Boolean) | string;
    /**
     * A config object containing default settings to apply to all child widgets.
     */
    defaults?: ContainerItemConfig;
    /**
     * Configure as `false` to preserve selection when clicking the empty schedule area.
     */
    deselectAllOnScheduleClick?: Boolean;
    /**
     * Configure as `true` to deselect a selected event upon click.
     */
    deselectOnClick?: Boolean;
    /**
     * Configure as `true` to destroy the Project and stores when `this` is destroyed.
     */
    destroyStores?: Boolean;
    /**
     * Disable or enable the widget. It is similar to [readOnly](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-readOnly) except a disabled widget
     * cannot be focused, uses a different rendition (usually greyish) and does not allow selecting its value.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-disabled)
     */
    disabled?: Boolean | 'inert';
    /**
     * Controls the placement of this widget when it is added to a [panel's ](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel)
     * [strips collection](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-strips). Typical values for this config are `'top'`,
     * `'bottom'`, `'left'`, or `'right'`, which cause the widget to be placed on that side of the panel's
     * body. Such widgets are called "edge strips".
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-dock)
     */
    dock?: 'top' | 'bottom' | 'left' | 'right' | 'start' | 'end' | 'header' | 'pre-header' | object;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * Set to `true` to be able to drag a widget freely on the page. Or set to an object with a ´handleSelector´
     * property which controls when a drag should start.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-draggable)
     */
    draggable?: Boolean | {
        handleSelector?: string;
    };
    /**
     * Make this Panel a docked drawer which slides out from one side of the browser viewport by default.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-drawer)
     * @param {'start','left','end','right','top','bottom'} side The side of the viewport to dock the drawer to.  * `'start'` means the `inline-start` side. * `'end'` means the `inline-end` side.
     * @param {string,number} size The size of the drawer in its collapsible axis.
     * @param {boolean} inline If using the [appendTo](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-appendTo) config to place the drawer inside a host widget, set may be set to `true` to make the drawer inline within that host. Note that, if using this, the layout of the host element must have `flex-direction` set appropriately.
     */
    drawer?: Boolean | {
        side?: 'start' | 'left' | 'end' | 'right' | 'top' | 'bottom';
        size?: string | number;
        inline?: Boolean;
    };
    /**
     * An object specifying attributes to assign to the root element of this widget.
     * Set `null` value to attribute to remove it.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-elementAttributes)
     */
    elementAttributes?: Record<string, string | null>;
    /**
     * Allow using [Delete] and [Backspace] to remove events/assignments
     */
    enableDeleteKey?: Boolean;
    /**
     * Enables events being recurring and also adds extra recurrence UI fields in the built-in event editor.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-enableRecurringEvents)
     */
    enableRecurringEvents?: Boolean | {
        defaultAction?: 'single' | 'future';
    };
    /**
     * Set to `true` to listen for CTRL-Z (CMD-Z on Mac OS) keyboard event and trigger undo (redo when SHIFT is pressed).
     * Only applicable when using a [StateTrackingManager](https://bryntum.com/products/calendar/docs/api/Core/data/stm/StateTrackingManager).
     */
    enableUndoRedoKeys?: Boolean;
    /**
     * Inline events, will be loaded into the [eventStore](https://bryntum.com/products/calendar/docs/api/Calendar/mixin/CalendarStores#property-eventStore).
     */
    events?: EventModel[] | EventModelConfig[];
    /**
     * Configure as `true`, or set property to `true` to disable event selection.
     */
    eventSelectionDisabled?: Boolean;
    /**
     * The [EventStore](https://bryntum.com/products/calendar/docs/api/Scheduler/data/EventStore) or a reconfiguring object for a store which will hold
     * the events to be rendered into the Calendar.
     */
    eventStore?: EventStore | EventStoreConfig;
    extraData?: any;
    /**
     * If this is set to `true`, then when determining which assigned resource of a multi assigned event
     * to use to create the event UI, the first resource which is still selected in the
     * [resourceFilter](https://bryntum.com/products/calendar/docs/api/Calendar/widget/Sidebar#property-resourceFilter) is used.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-filterEventResources)
     */
    filterEventResources?: Boolean;
    /**
     * When this widget is a child of a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container), it will by default be participating in a
     * flexbox layout. This config allows you to set this widget's
     * [flex](https://developer.mozilla.org/en-US/docs/Web/CSS/flex) style.
     * This may be configured as a single number or a `&lt;flex-grow&gt; &lt;flex-shrink&gt; &lt;flex-basis&gt;` format string.
     * numeric-only values are interpreted as the `flex-grow` value.
     */
    flex?: number | string;
    /**
     * Set to `true` to move the widget out of the document flow and position it
     * absolutely in browser viewport space.
     */
    floating?: Boolean;
    /**
     * Config object of a footer. May contain a `dock`, `html` and a `cls` property. A footer is not a widget,
     * but rather plain HTML that follows the last element of the panel's body and [strips](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-strips).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-footer)
     */
    footer?: {
        dock?: 'top' | 'right' | 'bottom' | 'left' | 'start' | 'end';
        html?: string;
        cls?: string;
    } | string;
    /**
     * A config [object](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#typedef-PanelHeader) for the panel's header or a string in place of a `title`.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-header)
     */
    header?: string | Boolean | PanelHeader;
    /**
     * Widget's height, used to set element style.height. Either specify a valid height string or a number, which
     * will get 'px' appended. We recommend using CSS as the primary way to control height, but in some cases
     * this config is convenient.
     */
    height?: string | number;
    /**
     * Configure with true to make widget initially hidden.
     */
    hidden?: Boolean;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-hideAnimation)
     */
    hideAnimation?: Boolean | object;
    /**
     * Configure as `true` to hide [nonWorkingDays](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-nonWorkingDays) for each calendar view
     */
    hideNonWorkingDays?: Boolean;
    /**
     * Specify `true` to make this container hide when it has no visible children (Either empty
     * or all children hidden).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-hideWhenEmpty)
     */
    hideWhenEmpty?: Boolean;
    /**
     * Configure this as `true` to make picking a date in the [sidebar](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-sidebar)'s
     * date picker highlight the date cell in the active view.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-highlightDate)
     * @param {Date} date Cell date
     * @returns {boolean} Returns `true` to make picking a date in a date picker
     */
    highlightDate?: Boolean | ((date: Date) => Boolean);
    /**
     * Configure as `true`, or set property to `true` to highlight dependent events as well when selecting an event.
     */
    highlightPredecessors?: Boolean;
    /**
     * Configure as `true`, or set property to `true` to highlight dependent events as well when selecting an event.
     */
    highlightSuccessors?: Boolean;
    /**
     * Widget id, if not specified one will be generated. Also used for lookups through Widget.getById
     */
    id?: string;
    /**
     * Determines if the widgets read-only state should be controlled by its parent.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-ignoreParentReadOnly)
     */
    ignoreParentReadOnly?: Boolean;
    /**
     * Set to `true` to show the "Weekends" toggle button of the mode selector. Alternatively, this config
     * can be a [Button](https://bryntum.com/products/calendar/docs/api/Core/widget/Button) config object to configure the button.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-includeWeekendsButton)
     */
    includeWeekendsButton?: Boolean | ButtonConfig;
    /**
     * Element (or element id) to insert this widget before. If provided, [appendTo](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-appendTo) config is ignored.
     */
    insertBefore?: HTMLElement | string;
    /**
     * Element (or element id) to append this widget element to, as a first child. If provided, [appendTo](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-appendTo) config is ignored.
     */
    insertFirst?: HTMLElement | string;
    /**
     * A template method (empty by default) allowing you to control if an event can be selected or not.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-isEventSelectable)
     * @param {Scheduler.model.EventModel} event The event record
     * @returns {boolean} true if event can be selected, otherwise false
     */
    isEventSelectable?: (event: EventModel) => Boolean;
    /**
     * An optional CSS class to add to child items of this container.
     */
    itemCls?: string;
    /**
     * An object containing typed child widget config objects or Widgets. May also be specified
     * as an array.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-items)
     */
    items?: Record<string, ContainerItemConfig | MenuItemConfig | Boolean | null> | (ContainerItemConfig | MenuItemConfig | Widget)[];
    /**
     * The default key shortcuts for the Calendar.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-keyMap)
     */
    keyMap?: Record<string, KeyMapConfig>;
    /**
     * The short name of a helper class which manages rendering and styling of child items.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-layout)
     */
    layout?: string | ContainerLayoutConfig;
    /**
     * The CSS style properties to apply to the [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-layoutStyle)
     */
    layoutStyle?: object;
    /**
     * An array of [child item](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#config-items) *config objects* which is to be converted into
     * instances only when this Container is rendered, rather than eagerly at construct time.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-lazyItems)
     */
    lazyItems?: Record<string, ContainerItemConfig> | ContainerItemConfig[] | Widget[];
    /**
     * The listener set for this object.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-listeners)
     */
    listeners?: CalendarListeners;
    /**
     * A [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) config object, or a message to be shown when a store is performing a remote
     * operation, or Crud Manager is loading data from the sever. Set to `null` to disable default load mask.
     */
    loadMask?: string | MaskConfig | null;
    /**
     * A [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) config object to adjust the [maskDefaults](#Core/widget/Widget#config-maskDefaults)
     * when data is loading. The message and optional configuration from the
     * [loadMask](https://bryntum.com/products/calendar/docs/api/Core/mixin/LoadMaskable#config-loadMask) config take priority over these options, just as they do
     * for `maskDefaults`, respectively.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-loadMaskDefaults)
     */
    loadMaskDefaults?: MaskConfig;
    /**
     * A [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) config object to adjust the [maskDefaults](#Core/widget/Widget#config-maskDefaults)
     * when an error occurs loading data.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-loadMaskError)
     */
    loadMaskError?: MaskConfig | Mask | Boolean;
    /**
     * A class translations of which are used for translating this entity.
     * This is often used when translations of an item are defined on its container class.
     * For example:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-localeClass)
     */
    localeClass?: typeof Base;
    /**
     * Set to `false` to disable localization of this object.
     */
    localizable?: Boolean;
    /**
     * List of properties which values should be translated automatically upon a locale applying.
     * In case there is a need to localize not typical value (not a String value or a field with re-defined setter/getter),
     * you could use 'localeKey' meta configuration.
     * Example:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-localizableProperties)
     */
    localizableProperties?: string[];
    /**
     * This flag controls whether Scheduler should preserve its selection of events when loading a new dataset
     * (if selected event ids are included in the newly loaded dataset).
     */
    maintainSelectionOnDatasetChange?: Boolean;
    /**
     * Widget's margin. This may be configured as a single number or a `TRBL` format string.
     * numeric-only values are interpreted as pixels.
     */
    margin?: number | string;
    /**
     * This config object contains the defaults for the [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) created for the
     * [masked](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-masked) config. Any properties specified in the `masked` config will override these
     * values.
     */
    maskDefaults?: MaskConfig;
    /**
     * Set to `true` to apply the default mask to the widget. Alternatively, this can be the mask message or a
     * [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) config object.
     */
    masked?: Boolean | string | MaskConfig;
    /**
     * The maximum date to which the `endDate` of any child view may be navigated.
     */
    maxDate?: Date | string;
    /**
     * The element's maxHeight. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [height](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-height), *reading* the value will return the numeric value in pixels.
     */
    maxHeight?: string | number;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-maximizeOnMobile)
     */
    maximizeOnMobile?: number | string;
    /**
     * The elements maxWidth. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [width](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.
     */
    maxWidth?: string | number;
    /**
     * The minimum date to which the `startDate` of any child view may be navigated.
     */
    minDate?: Date | string;
    /**
     * The element's minHeight. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [height](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-height), *reading* the value will return the numeric value in pixels.
     */
    minHeight?: string | number;
    /**
     * The elements minWidth. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [width](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.
     */
    minWidth?: string | number;
    /**
     * Which of the built-in [modes](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-modes) should be the initially active view.
     */
    mode?: 'agenda' | 'year' | 'month' | 'week' | 'day' | 'list' | 'resource' | 'dayresource' | string;
    /**
     * An object to use to configure common properties for all [modes](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-modes) prior to their construction.
     */
    modeDefaults?: object;
    /**
     * Configures the view modes which are to be available in this Calendar.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-modes)
     */
    modes?: {
        [mode: string]: ContainerItemConfig | Boolean | null | undefined;
        agenda?: AgendaViewConfig | Boolean | null;
        year?: YearViewConfig | Boolean | null;
        month?: MonthViewConfig | Boolean | null;
        week?: WeekViewConfig | Boolean | null;
        day?: DayViewConfig | Boolean | null;
        list?: EventListConfig | Boolean | null;
        resource?: ResourceViewConfig | Boolean | null;
        dayresourceview?: DayResourceViewConfig | Boolean | null;
    };
    /**
     * When this is configured as `true` a [ResizeObserver](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)
     * is used to monitor this element for size changes caused by either style manipulation, or by CSS
     * layout.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-monitorResize)
     */
    monitorResize?: Boolean;
    /**
     * Configure as `true` to allow `CTRL+click` to select multiple events in the scheduler.
     */
    multiEventSelect?: Boolean;
    /**
     * An object containing default config objects which may be referenced by name in the [items](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#config-items)
     * config. For example, a specialized [Menu](https://bryntum.com/products/calendar/docs/api/Core/widget/Menu) subclass may have a `namedItems` default
     * value defined like this:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-namedItems)
     */
    namedItems?: Record<string, ContainerItemConfig>;
    /**
     * Indicates where the Next/Previous/Today buttons should be placed.
     */
    navigatorPlacement?: 'toolbar' | 'sidebar';
    /**
     * Non-working days as an object where keys are day indices, 0-6 (Sunday-Saturday), and the value is `true`.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-nonWorkingDays)
     */
    nonWorkingDays?: Record<number, Boolean>;
    /**
     * By default, the [sidebar](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#property-sidebar) expands and collapses taking width from the
     * calendar UI. Configure `overlaySidebar` as `true` to have it start collapsed, and then
     * <strong>overlay</strong> the calendar UI when the expand/collapse button is toggled.
     */
    overlaySidebar?: Boolean;
    /**
     * The owning Widget of this Widget. If this Widget is directly contained (that is, it is one of the
     * [items](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#property-items) of a Container), this config will be ignored. In this case
     * the owner is <strong>always</strong> the encapsulating Container.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-owner)
     */
    owner?: Widget;
    /**
     * Set to `true` when a widget is rendered into another widget's [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement), but must
     * not participate in the standard layout of that widget, and must be positioned relatively to that
     * widget's [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-positioned)
     */
    positioned?: Boolean;
    /**
     * Prevent tooltip from being displayed on touch devices. Useful for example for buttons that display a
     * menu on click etc, since the tooltip would be displayed at the same time.
     */
    preventTooltipOnTouch?: Boolean;
    /**
     * A [ProjectModel](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ProjectModel) instance or a config object. The project holds all Scheduler data.
     * Can be omitted in favor of individual store configs or [crudManager](https://bryntum.com/products/calendar/docs/api/Scheduler/view/mixin/SchedulerStores#config-crudManager) config.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-project)
     */
    project?: ProjectModel | ProjectModelConfig | object;
    /**
     * Configure as `true` to make the calendar read-only, by disabling any UIs for modifying data.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-readOnly)
     */
    readOnly?: Boolean;
    /**
     * The confirmation dialog shown when a recurring event is edited.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-recurrenceConfirmationPopup)
     */
    recurrenceConfirmationPopup?: RecurrenceConfirmationPopupConfig | RecurrenceConfirmationPopup;
    relayStoreEvents?: Boolean;
    /**
     * Path to load resource images from. Used by the resource headers in ResourceView and by
     * [showResourceAvatars](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/CalendarMixin#config-showResourceAvatars) in event-displaying
     * modes.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-resourceImagePath)
     */
    resourceImagePath?: string;
    /**
     * Inline resources, will be loaded into the [resourceStore](https://bryntum.com/products/calendar/docs/api/Calendar/mixin/CalendarStores#property-resourceStore).
     */
    resources?: ResourceModel[] | ResourceModelConfig[];
    /**
     * The [ResourceStore](https://bryntum.com/products/calendar/docs/api/Scheduler/data/ResourceStore) or a reconfiguring object for a store which will hold the resources to be rendered into the Calendar.
     */
    resourceStore?: ResourceStore | ResourceStoreConfig;
    /**
     * Inline resource time ranges, will be loaded into [resourceTimeRangeStore](https://bryntum.com/products/calendar/docs/api/Calendar/mixin/CalendarStores#property-resourceTimeRangeStore).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-resourceTimeRanges)
     */
    resourceTimeRanges?: ResourceTimeRangeModel[] | ResourceTimeRangeModelConfig[];
    /**
     * The [ResourceTimeRangeStore](https://bryntum.com/products/calendar/docs/api/Scheduler/data/ResourceTimeRangeStore) or a reconfiguring object for a store which will hold resource time ranges.
     * These may be used by the [TimeRanges](https://bryntum.com/products/calendar/docs/api/Calendar/feature/TimeRanges) feature.
     */
    resourceTimeRangeStore?: ResourceTimeRangeStore | ResourceTimeRangeStoreConfig;
    /**
     * Specifies the various responsive state objects keyed by their name. Each key (except `'*'`, see below) in
     * this object is a state name (see [responsiveState](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Responsive#config-responsiveState)) and its corresponding value is the
     * associated [ResponsiveState](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Responsive#typedef-ResponsiveState) object.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-responsive)
     */
    responsive?: object;
    /**
     * Set to `true` to mark this instance as the default [responsiveTarget](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Responsive#config-responsiveTarget) for descendants that do
     * not specify an explicit [responsiveTarget](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Responsive#config-responsiveTarget) of their own.
     */
    responsiveRoot?: Boolean;
    /**
     * The name of the active state of the [responsive](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Responsive#config-responsive) config. This is assigned internally
     * and should not be assigned directly.
     */
    responsiveState?: string;
    /**
     * The widget whose size and other properties drive this object's responsive behavior. If this config is not
     * specified, the closest ancestor that specified [responsiveRoot=true](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Responsive#config-responsiveRoot) will be
     * used. If there is no such ancestor, then the instance using this mixin is used.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-responsiveTarget)
     */
    responsiveTarget?: string | Widget;
    /**
     * Configure as `true` to have the component display a translucent ripple when its
     * [focusElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-focusElement), or [element](#Core/widget/Widget#property-element) is tapped <em>if the
     * current theme supports ripples</em>. Out of the box, only the Material theme supports ripples.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-ripple)
     */
    ripple?: Boolean | {
        delegate?: string;
        color?: string;
        radius?: number;
        clip?: string;
    };
    /**
     * If you are rendering this widget to a shadow root inside a web component, set this config to the shadowRoot. If not inside a web component, set it to `document.body`
     */
    rootElement?: ShadowRoot | HTMLElement;
    /**
     * This may be configured as `true` to make the widget's element use the `direction:rtl` style.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-rtl)
     */
    rtl?: Boolean;
    /**
     * Specifies whether (and optionally in which axes) a Widget may scroll. `true` means this widget may scroll
     * in both axes. May be an object containing boolean `overflowX` and `overflowY` properties which are
     * applied to CSS style properties `overflowX` and `overflowY`. If they are boolean, they are translated to
     * CSS overflow properties thus:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-scrollable)
     */
    scrollable?: Boolean | ScrollerConfig | Scroller;
    /**
     * Defines what to do if document is scrolled while Widget is visible (only relevant when floating is set to `true`).
     * Valid values: ´null´: do nothing, ´hide´: hide the widget or ´realign´: realign to the target if possible.
     */
    scrollAction?: 'hide' | 'realign' | null;
    /**
     * Set to `false` to not select the resource of the event when clicking an event bar.
     */
    selectResourceOnEventNavigate?: Boolean;
    /**
     * Set to `false` to not select the row/resource when clicking the empty area in a time axis cell.
     */
    selectResourceOnScheduleClick?: Boolean;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-showAnimation)
     */
    showAnimation?: Boolean | object;
    /**
     * Set to `false` to hide recurring fields in event editor, even if the
     * [Recurring Events](https://bryntum.com/products/calendar/docs/api/Scheduler/view/mixin/RecurringEvents#config-enableRecurringEvents) is `true`
     * and a recurring event is being edited.
     */
    showRecurringUI?: Boolean;
    /**
     * Set to `false` to not show the tooltip when this widget is [disabled](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-disabled)
     */
    showTooltipWhenDisabled?: Boolean;
    /**
     * An optional config object to configure the [Sidebar](https://bryntum.com/products/calendar/docs/api/Calendar/widget/Sidebar) which is
     * shown next to the calendar views specified by the [modes](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-modes).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-sidebar)
     * @param {'left','right'} side Which [side](https://bryntum.com/products/calendar/docs/api/Calendar/widget/Sidebar#config-side) to dock to.
     * @param {boolean} collapsed May be initially [collapsed](https://bryntum.com/products/calendar/docs/api/Calendar/widget/Sidebar#config-collapsed).
     * @param {Record<string, ContainerItemConfig>} items Reconfigure or add to the sidebar UI.
     * @param {ContainerItemConfig} items.custom Settings specific to custom item.
     * @param {DatePickerConfig} items.datePicker The [DatePicker](https://bryntum.com/products/calendar/docs/api/Core/widget/DatePicker) may be reconfigured using an object, or configured away using `null`. Its default [weight](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-weight) is 100.
     * @param {TextFieldConfig} items.eventFilter The eventFilter is a [TextField](https://bryntum.com/products/calendar/docs/api/Core/widget/TextField) which may be used to filter the events by matched name. It may be reconfigured using an object, or configured away using `null`. Its default [weight](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-weight) is 150.
     * @param {ResourceFilterConfig} items.resourceFilter The [ResourceFilter](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ResourceFilter) may be reconfigured using an object, or configured away using `null`. Its default [weight](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-weight) is 200.
     */
    sidebar?: {
        side?: 'left' | 'right';
        collapsed?: Boolean;
        items: {
            [mode: string]: ContainerItemConfig | null | undefined;
            datePicker?: DatePickerConfig;
            eventFilter?: TextFieldConfig;
            resourceFilter?: ResourceFilterConfig;
        };
    } | Boolean;
    /**
     * This value can be one of the following:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-stateful)
     */
    stateful?: Boolean | object | string[];
    /**
     * The events that, when fired by this component, should trigger it to save its state by calling
     * [saveState](https://bryntum.com/products/calendar/docs/api/Core/mixin/State#function-saveState).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-statefulEvents)
     */
    statefulEvents?: object | string[];
    /**
     * The key to use when saving this object's state in the [stateProvider](https://bryntum.com/products/calendar/docs/api/Core/mixin/State#config-stateProvider). If this config is
     * not assigned, and [stateful](https://bryntum.com/products/calendar/docs/api/Core/mixin/State#config-stateful) is not set to `false`, the [id](#Core/widget/Widget#config-id)
     * (if explicitly specified) will be used as the `stateId`.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-stateId)
     */
    stateId?: string;
    /**
     * The `StateProvider` to use to save and restore this object's [state](https://bryntum.com/products/calendar/docs/api/Core/mixin/State#property-state). By default, `state`
     * will be saved using the [default state provider](https://bryntum.com/products/calendar/docs/api/Core/state/StateProvider#property-instance-static).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-stateProvider)
     */
    stateProvider?: StateProvider;
    /**
     * Specify `true` to match fields by their `name` property only when assigning a [record](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#config-record),
     * without falling back to `ref`.
     */
    strictRecordMapping?: Boolean;
    /**
     * An object containing widgets keyed by name. By default (when no `type` is given), strips are
     * [toolbars](https://bryntum.com/products/calendar/docs/api/Core/widget/Toolbar). If you want to pass an array, you can use
     * the toolbar's [items](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#config-items).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-strips)
     */
    strips?: Record<string, ContainerItemConfig>;
    /**
     * A [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) config object, or a message to be shown when Crud Manager
     * is persisting changes on the server. Set to `null` to disable default sync mask.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-syncMask)
     */
    syncMask?: string | MaskConfig | null;
    /**
     * A configuration for the [tab](https://bryntum.com/products/calendar/docs/api/Core/widget/Tab) created for this widget when it is placed in a
     * [TabPanel](https://bryntum.com/products/calendar/docs/api/Core/widget/TabPanel). For example, this config can be used to control the icon of the `tab` for
     * this widget:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-tab)
     */
    tab?: Boolean | TabConfig;
    /**
     * When this container is used as a tab in a TabPanel, these items are added to the
     * [TabBar](https://bryntum.com/products/calendar/docs/api/Core/widget/TabBar) when this container is the active tab.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-tabBarItems)
     */
    tabBarItems?: ToolbarItems[] | Widget[];
    /**
     * The tag name of this Widget's root element
     */
    tag?: string;
    /**
     * A config object containing definitions of the toolbar of the Calendar.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-tbar)
     */
    tbar?: (ContainerItemConfig | string)[] | ToolbarConfig | PagingToolbarConfig | null;
    /**
     * Text alignment: 'left', 'center' or 'right'. Also accepts direction neutral 'start' and 'end'.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-textAlign)
     */
    textAlign?: 'left' | 'center' | 'right' | 'start' | 'end';
    /**
     * Inline time ranges, will be loaded into the [timeRangeStore](https://bryntum.com/products/calendar/docs/api/Calendar/mixin/CalendarStores#property-timeRangeStore).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-timeRanges)
     */
    timeRanges?: TimeRangeModel[] | TimeRangeModelConfig[];
    /**
     * The [TimeRangeStore](https://bryntum.com/products/calendar/docs/api/Calendar/data/TimeRangeStore) or a reconfiguring object for a store which will hold time ranges.
     * These may be used by the [TimeRanges](https://bryntum.com/products/calendar/docs/api/Calendar/feature/TimeRanges) feature.
     */
    timeRangeStore?: TimeRangeStore | TimeRangeStoreConfig;
    /**
     * Set to a time zone or a UTC offset. This will set the project's
     * [timeZone](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ProjectModel#config-timeZone) config accordingly. As this config is only a referer,
     * please see project's config [documentation](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ProjectModel#config-timeZone) for more
     * information.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-timeZone)
     */
    timeZone?: string | number;
    /**
     * A title to display in the header or owning TabPanel. Causes creation and docking of a header
     * to the top if no header is configured.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-title)
     */
    title?: string;
    /**
     * The [tools](https://bryntum.com/products/calendar/docs/api/Core/widget/Tool) to add either before or after the `title` in the Panel header. Each
     * property name is the reference by which an instantiated tool may be retrieved from the live
     * `[tools](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Toolable#property-tools)` property.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-tools)
     */
    tools?: Record<string, ToolConfig> | null;
    /**
     * Tooltip for the widget, either as a string or as a Tooltip config object.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-tooltip)
     */
    tooltip?: string | TooltipConfig | null;
    /**
     * By default, tabbing within a Panel is not contained, ie you can TAB out of the Panel
     * forwards or backwards.
     * Configure this as `true` to disallow tabbing out of the Panel, and make tabbing circular within this Panel.
     */
    trapFocus?: Boolean;
    /**
     * Configure as `true` to trigger `selectionChange` when removing a selected event/assignment.
     */
    triggerSelectionChangeOnRemove?: Boolean;
    type?: 'calendar';
    /**
     * Custom CSS class name suffixes to apply to the elements rendered by this widget. This may be specified
     * as a space separated string, an array of strings, or as an object in which property names with truthy
     * values are used as the class names.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-ui)
     */
    ui?: 'plain' | 'toolbar' | string | object;
    /**
     * By default, the day of week and week of month of the event's start date are used to create
     * helpful contextual recurrence types when editing a non-recurring event record and choosing
     * an initial recurrence type.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-useContextualRecurrenceRules)
     */
    useContextualRecurrenceRules?: Boolean;
    /**
     * Configuration options to change how the subordinate [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container) which contains
     * the calendar's child views is created.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-viewContainer)
     */
    viewContainer?: ContainerConfig;
    /**
     * The week start day to be used throughout this Calendar, 0 meaning Sunday, 6 meaning Saturday.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-weekStartDay)
     */
    weekStartDay?: number;
    /**
     * A widgets weight determines its position among siblings when added to a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container).
     * Higher weights go further down.
     */
    weight?: number;
    /**
     * Widget's width, used to set element style.width. Either specify a valid width string or a number, which
     * will get 'px' appended. We recommend using CSS as the primary way to control width, but in some cases
     * this config is convenient.
     */
    width?: string | number;
    /**
     * The x position for the widget.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-x)
     */
    x?: number;
    /**
     * The y position for the widget.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/view/Calendar#config-y)
     */
    y?: number;
    /**
     * This feature provides drag-based event creation and modification for Calendars. When enabled (which is the default
     * for calendars), the user can do the following via the mouse or touch screen:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/feature/CalendarDrag)
     */
    dragFeature?: object | Boolean | string | CalendarDrag | CalendarDragConfig;
    /**
     * A Feature that allows showing additional time before &amp; after an event, to visualize things like travel time - or the time you
     * need to prepare a room for a meeting + clean it up after.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/feature/EventBuffer)
     */
    eventBufferFeature?: object | Boolean | string | EventBuffer | EventBufferConfig;
    /**
     * Allow using [Ctrl/CMD + C/X/V] to copy/cut-and-paste events.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/feature/EventCopyPaste)
     */
    eventCopyPasteFeature?: object | Boolean | string | EventCopyPaste | EventCopyPasteConfig;
    /**
     * Feature that displays a popup containing fields for editing event data.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/feature/EventEdit)
     */
    eventEditFeature?: object | Boolean | string | EventEdit | EventEditConfig;
    /**
     * A feature which shows a context menu when right-clicking events in the calendar.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/feature/EventMenu)
     */
    eventMenuFeature?: object | Boolean | string | EventMenu | EventMenuConfig;
    /**
     * A feature which displays a [tooltip](https://bryntum.com/products/calendar/docs/api/Calendar/feature/EventTooltip#config-tooltip) containing extra information. The tooltip can
     * be triggered by clicking or hovering an event bar element (see [showOn](https://bryntum.com/products/calendar/docs/api/Calendar/feature/EventTooltip#config-showOn)).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/feature/EventTooltip)
     */
    eventTooltipFeature?: object | Boolean | string | EventTooltip | EventTooltipConfig;
    /**
     * <strong>NOTE</strong>: This class requires a 3rd party library to operate.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/feature/experimental/ExcelExporter)
     */
    excelExporterFeature?: object | Boolean | string | ExcelExporter | ExcelExporterConfig;
    /**
     * A Calendar feature which allows new events to be dragged into the Calendar from an external source.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/feature/ExternalEventSource)
     */
    externalEventSourceFeature?: object | Boolean | string | ExternalEventSource | ExternalEventSourceConfig;
    /**
     * Loads the host Calendar's [CrudManager](https://bryntum.com/products/calendar/docs/api/Scheduler/view/mixin/SchedulerStores#config-crudManager) on demand
     * as the date range required to produce the UI changes.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/feature/LoadOnDemand)
     */
    loadOnDemandFeature?: object | Boolean | string | LoadOnDemand | LoadOnDemandConfig;
    /**
     * This feature enables printing of the current Calendar mode.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/feature/print/Print)
     */
    printFeature?: object | Boolean | string | Print | PrintConfig;
    /**
     * A feature which adds a context menu to the unoccupied parts of calendar views.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/feature/ScheduleMenu)
     */
    scheduleMenuFeature?: object | Boolean | string | ScheduleMenu | ScheduleMenuConfig;
    /**
     * A feature that displays a tooltip containing the time at the mouse position when hovering empty parts of the schedule:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/feature/ScheduleTooltip)
     */
    scheduleTooltipFeature?: object | Boolean | string | ScheduleTooltip | ScheduleTooltipConfig;
    /**
     * This feature provides an easy way to highlight ranges of time in a calendar's day and week views. Each time range is
     * represented using the [TimeRangeModel](https://bryntum.com/products/calendar/docs/api/Calendar/model/TimeRangeModel).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/feature/TimeRanges)
     */
    timeRangesFeature?: object | Boolean | string | TimeRanges | TimeRangesConfig;
    /**
     * A Feature which, when present, adds a week row expansion tool to week rows in
     * [MonthView](https://bryntum.com/products/calendar/docs/api/Calendar/widget/MonthView)s so that a row which contains overflowing cells
     * can be expanded to show all events with no overflow.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/feature/WeekExpander)
     */
    weekExpanderFeature?: object | Boolean | string | WeekExpander | WeekExpanderConfig;
};
