import type { AgendaViewListeners, AjaxStore, AjaxStoreConfig, BryntumScrollOptions, Button, ButtonConfig, CalendarMixin, CellCopyPaste, CellCopyPasteConfig, CellEdit, CellEditConfig, CellMenu, CellMenuConfig, CellTooltip, CellTooltipConfig, ColumnAutoWidth, ColumnAutoWidthConfig, ColumnDragToolbar, ColumnDragToolbarConfig, ColumnPicker, ColumnPickerConfig, ColumnRename, ColumnRenameConfig, ColumnReorder, ColumnReorderConfig, ColumnResize, ColumnResizeConfig, ContainerItemConfig, DayCell, DomConfig, DurationConfig, EventBar, EventModel, FileDrop, FileDropConfig, FillHandle, FillHandleConfig, Filter, FilterBar, FilterBarConfig, FilterConfig, FormulaProviderConfig, GridExcelExporter, GridExcelExporterConfig, GridGroupSummary, GridGroupSummaryConfig, GridLockRows, GridLockRowsConfig, GridPdfExport, GridPdfExportConfig, GridPrint, GridPrintConfig, GridRowReorder, GridRowReorderConfig, GridRowResize, GridRowResizeConfig, GridSelectionMode, GridSplit, GridSplitConfig, GridSummary, GridSummaryConfig, Group, GroupConfig, HeaderMenu, HeaderMenuConfig, KeyMapConfig, Mask, MaskConfig, MenuItemConfig, MergeCells, MergeCellsConfig, Model, ModelConfig, PagingToolbarConfig, PanelCollapserConfig, PanelCollapserOverlayConfig, PanelHeader, PreserveScrollOptions, QuickFind, QuickFindConfig, RangeMenuConfig, RegionResize, RegionResizeConfig, ResourceModel, RowCopyPaste, RowCopyPasteConfig, RowEdit, RowEditConfig, RowExpander, RowExpanderConfig, ScrollManager, ScrollManagerConfig, Scroller, ScrollerConfig, Search, SearchConfig, Sort, SortConfig, StateProvider, StickyCells, StickyCellsConfig, Store, StoreConfig, Stripe, StripeConfig, SubGridConfig, TabConfig, ToolConfig, ToolbarConfig, ToolbarItems, Tree, TreeConfig, TreeGroup, TreeGroupConfig, Widget } from '@bryntum/calendar';
export declare type BryntumAgendaViewProps = {
    /**
     * A key to use to activate this view.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-activationKey)
     */
    activationKey?: string;
    /**
     * Element (or element id) to adopt as this Widget's encapsulating element. The widget's
     * content will be placed inside this element.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-adopt)
     */
    adopt?: HTMLElement | string;
    /**
     * When this widget is a child of a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container), it will by default be participating in a
     * flexbox layout. This config allows you to set this widget's
     * [align-self](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self) style.
     */
    alignSelf?: string;
    /**
     * Configure this as `false` to disable drag-creating events in this view.
     */
    allowDragCreate?: Boolean;
    /**
     * Configure this as `false` to disable drag-moving events in this view.
     */
    allowDragMove?: Boolean;
    /**
     * Configure this as `false` to disable drag-resizing events in this view.
     */
    allowDragResize?: Boolean;
    /**
     * If no dates in the view's configured date range contain events, then by default, no date cells are rendered.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-alwaysShowCurrentDate)
     */
    alwaysShowCurrentDate?: Boolean;
    /**
     * Set to `true` to animate row removals caused by filtering.
     */
    animateFilterRemovals?: Boolean;
    /**
     * Set to `false` to prevent remove row animation and remove the delay related to that.
     */
    animateRemovingRows?: Boolean;
    /**
     * By default, when navigating through time, the next time
     * block will be animated in from the appropriate direction.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-animateTimeShift)
     */
    animateTimeShift?: Boolean;
    /**
     * When the [Tree](https://bryntum.com/products/calendar/docs/api/Grid/feature/Tree) feature is in use and the Store is a tree store, this
     * config may be set to `true` to visually animate branch node expand and collapse operations.
     * *This is not supported in Scheduler and Gantt*
     */
    animateTreeNodeToggle?: Boolean;
    /**
     * Element (or the id of an element) to append this widget's element to. Can be configured, or set once at
     * runtime. To access the element of a rendered widget, see [element](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-element).
     */
    appendTo?: HTMLElement | string;
    /**
     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject
     * into an element which will be linked using the `aria-describedby` attribute.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-ariaDescription)
     */
    ariaDescription?: string;
    /**
     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject as
     * the `aria-label` attribute.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-ariaLabel)
     */
    ariaLabel?: string;
    /**
     * The `aria-live` value for this widget.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-ariaLive)
     * @deprecated Will be removed in 7.0
     */
    ariaLive?: string;
    /**
     * If this config is set, then the `gesture` configured (which defaults to `dblclick`) creates a
     * new event at the mouse or touch event's time point.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-autoCreate)
     */
    autoCreate?: {
        gesture?: string;
        newName?: Function | string;
        step?: string;
        snapType?: 'round' | 'ceil' | 'floor';
        duration?: string;
        startHour?: number;
    } | string | Boolean;
    /**
     * Automatically set grids height to fit all rows (no scrolling in the grid). In general you should avoid
     * using `autoHeight: true`, since it will bypass Grids virtual rendering and render all rows at once, which
     * in a larger grid is really bad for performance.
     */
    autoHeight?: Boolean;
    /**
     * A Config object representing the configuration of a [Toolbar](https://bryntum.com/products/calendar/docs/api/Core/widget/Toolbar),
     * or array of config objects representing the child items of a Toolbar. Another way to add a bbar is to use [strips](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-strips).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-bbar)
     */
    bbar?: (ContainerItemConfig | string)[] | ToolbarConfig | PagingToolbarConfig | null;
    /**
     * Custom CSS classes to add to the panel's body element.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-bodyCls)
     */
    bodyCls?: string | object;
    /**
     * An object where property names with a truthy value indicate which events should bubble up the ownership
     * hierarchy when triggered.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-bubbleEvents)
     */
    bubbleEvents?: object;
    /**
     * Set to `false` to not call onXXX method names (e.g. `onShow`, `onClick`), as an easy way to listen for events.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-callOnFunctions)
     */
    callOnFunctions?: Boolean;
    /**
     * Set to `false` to crop text in grid cells without ellipsis (...). When enabled, cells containing pure
     * use `display : block`, instead of `display : flex` to allow ellipsis to work.
     * <strong>NOTE</strong> Only supported in browsers that support `:has()` CSS selector
     */
    cellEllipsis?: Boolean;
    /**
     * Custom CSS classes to add to element.
     * May be specified as a space separated string, or as an object in which property names
     * with truthy values are used as the class names:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-cls)
     */
    cls?: string | object;
    /**
     * Controls whether the panel is collapsed (the body of the panel is hidden while only the header is
     * visible). Only valid if the panel is [collapsible](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-collapsible).
     */
    collapsed?: Boolean;
    /**
     * This config enables collapsibility for the panel. See [collapsed](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-collapsed).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-collapsible)
     */
    collapsible?: Boolean | PanelCollapserConfig | PanelCollapserOverlayConfig;
    /**
     * Set to `false` to not show column lines. End result might be overruled by/differ between themes.
     */
    columnLines?: Boolean;
    /**
     * Column definitions.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-columns)
     */
    columns?: object | object[];
    config?: object;
    /**
     * Custom CSS classes to add to the [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement).
     * May be specified as a space separated string, or as an object in which property names
     * with truthy values are used as the class names:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-contentElementCls)
     */
    contentElementCls?: string | object;
    /**
     * Event which is used to show context menus.
     * Available options are: 'contextmenu', 'click', 'dblclick'.
     */
    contextMenuTriggerEvent?: 'contextmenu' | 'click' | 'dblclick';
    /**
     * Convenient shortcut to set data in grids store both during initialization and at runtime. Can also be
     * used to retrieve data at runtime, although we do recommend interacting with Grids store instead using
     * the [store](https://bryntum.com/products/calendar/docs/api/Grid/view/GridBase#property-store) property.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-data)
     */
    data?: object[] | Model[] | ModelConfig[];
    /**
     * Object to apply to elements dataset (each key will be used as a data-attribute on the element)
     */
    dataset?: Record<string, string>;
    /**
     * The date to orient this view's [range](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/DateRangeOwner#config-range) around.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-date)
     */
    date?: Date;
    /**
     * A callback function, or the name of a function in the ownership hierarchy which an
     * application may provide to filter out agenda rows for individual dates.
     * @param {DayCell} context Information about the day rows to be created.
     * @returns {boolean} Return `false` to not display a rows for the passed date.
     */
    dateFilter?: ((context: DayCell) => Boolean) | string;
    /**
     * A [DateHelper](https://bryntum.com/products/calendar/docs/api/Core/helper/DateHelper) format string to use to create date output for view descriptions.
     */
    dateFormat?: string;
    /**
     * A string used to separate start and end dates in the [descriptionFormat](https://bryntum.com/products/calendar/docs/api/Scheduler/view/mixin/Describable#config-descriptionFormat).
     */
    dateSeparator?: string;
    /**
     * Region to which columns are added when they have none specified
     */
    defaultRegion?: string;
    /**
     * Options to add into scroll options when the [scrollTo](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/CalendarMixin#function-scrollTo) method is called.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-defaultScrollOptions)
     */
    defaultScrollOptions?: BryntumScrollOptions;
    /**
     * The date format used by the default [descriptionRenderer](https://bryntum.com/products/calendar/docs/api/Scheduler/view/mixin/Describable#config-descriptionRenderer) for rendering the view's description.
     * If this value is `null`, the [dateFormat](https://bryntum.com/products/calendar/docs/api/Scheduler/view/mixin/Describable#config-dateFormat) (and potentially [dateSeparator](#Scheduler/view/mixin/Describable#config-dateSeparator)) will
     * be used.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-descriptionFormat)
     */
    descriptionFormat?: string | string[] | Boolean[];
    /**
     * A function that provides the textual description for this view. If provided, this function overrides the
     * [descriptionFormat](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/CalendarMixin#config-descriptionFormat).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-descriptionRenderer)
     * @param {Core.widget.Widget} view The active view in case the function is in another scope.
     * @returns {string} Description string
     */
    descriptionRenderer?: (view: Widget) => string;
    /**
     * Set to `true` to destroy the store when the grid is destroyed.
     */
    destroyStore?: Boolean;
    /**
     * Disable or enable the widget. It is similar to [readOnly](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-readOnly) except a disabled widget
     * cannot be focused, uses a different rendition (usually greyish) and does not allow selecting its value.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-disabled)
     */
    disabled?: Boolean | 'inert';
    /**
     * Set to `true` to not get a warning when calling [getState](https://bryntum.com/products/calendar/docs/api/Grid/view/GridBase#function-getState) when there is a column
     * configured without an `id`. But the recommended action is to always configure columns with an `id` when
     * using states.
     */
    disableGridColumnIdWarning?: Boolean;
    /**
     * Set to `true` to not get a warning when using another base class than GridRowModel for your grid data. If
     * you do, and would like to use the full feature set of the grid then include the fields from GridRowModel
     * in your model definition.
     */
    disableGridRowModelWarning?: Boolean;
    /**
     * Controls the placement of this widget when it is added to a [panel's ](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel)
     * [strips collection](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-strips). Typical values for this config are `'top'`,
     * `'bottom'`, `'left'`, or `'right'`, which cause the widget to be placed on that side of the panel's
     * body. Such widgets are called "edge strips".
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-dock)
     */
    dock?: 'top' | 'bottom' | 'left' | 'right' | 'start' | 'end' | 'header' | 'pre-header' | object;
    /**
     * The [durationUnit](https://bryntum.com/products/calendar/docs/api/Scheduler/model/EventModel#field-durationUnit) to use when drag-creating events
     * in this view.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-dragUnit)
     */
    dragUnit?: string;
    /**
     * Make this Panel a docked drawer which slides out from one side of the browser viewport by default.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-drawer)
     * @param {'start','left','end','right','top','bottom'} side The side of the viewport to dock the drawer to.  * `'start'` means the `inline-start` side. * `'end'` means the `inline-end` side.
     * @param {string,number} size The size of the drawer in its collapsible axis.
     * @param {boolean} inline If using the [appendTo](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-appendTo) config to place the drawer inside a host widget, set may be set to `true` to make the drawer inline within that host. Note that, if using this, the layout of the host element must have `flex-direction` set appropriately.
     */
    drawer?: Boolean | {
        side?: 'start' | 'left' | 'end' | 'right' | 'top' | 'bottom';
        size?: string | number;
        inline?: Boolean;
    };
    /**
     * An object specifying attributes to assign to the root element of this widget.
     * Set `null` value to attribute to remove it.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-elementAttributes)
     */
    elementAttributes?: Record<string, string | null>;
    /**
     * Text or HTML, or a [DomConfig](https://bryntum.com/products/calendar/docs/api/Core/helper/DomHelper#typedef-DomConfig) block to display when there is no data to display in the grid
     */
    emptyText?: string | DomConfig;
    /**
     * Configure this as `true` to allow elements within cells to be styled as `position: sticky`.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-enableSticky)
     */
    enableSticky?: Boolean;
    /**
     * Set to `true` to allow text selection in the grid cells. Note, this cannot be used simultaneously with the
     * `RowReorder` feature.
     */
    enableTextSelection?: Boolean;
    /**
     * Set to `true` to listen for CTRL-Z (CMD-Z on Mac OS) keyboard event and trigger undo (redo when SHIFT is
     * pressed). Only applicable when using a [StateTrackingManager](https://bryntum.com/products/calendar/docs/api/Core/data/stm/StateTrackingManager).
     */
    enableUndoRedoKeys?: Boolean;
    /**
     * The end date (Time component is zeroed) of this view. Note that in terms of full days,
     * this is exclusive, ie: 2020-01-012 to 2020-01-08 is *seven* days. The end is 00:00:00 on
     * the 8th.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-endDate)
     */
    endDate?: Date;
    /**
     * A function, or the name of a function in the ownership hierarchy to filter which events
     * are collected into the day cell data blocks.
     * Return `true` to include the passed event, or a *falsy* value to exclude the event.
     * @param {Scheduler.model.EventModel} event the passed event
     * @returns {boolean}
     */
    eventFilter?: ((event: EventModel) => Boolean) | string;
    /**
     * A function, or the name of a function in the ownership hierarchy which you
     * can specify to customize event DOM content.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-eventHeaderRenderer)
     * @param {object} detail An object that contains data about the event being rendered
     * @param {Calendar.widget.mixin.CalendarMixin} detail.view The view rendering the event
     * @param {Scheduler.model.EventModel} detail.eventRecord The event record
     * @param {Scheduler.model.ResourceModel} detail.resourceRecord The event record
     * @param {object} detail.renderData A data object containing properties that will be used to create the event element
     * @param {object} detail.renderData.style The style property is an object containing style properties for the event element
     * @param {object} detail.renderData.cls The cls property is an object whose property names will be added to the event element if the property value is truthy
     * @param {object} detail.renderData.iconStyle The iconStyle property is an object containing style properties for the icon element if an icon element is to be used
     * @param {object} detail.renderData.iconCls The iconCls property is an object whose property names will be added to the icon element. Initially set from the event record's [iconCls](https://bryntum.com/products/calendar/docs/api/Scheduler/model/EventModel#field-iconCls). Can be mutated by the renderer. If null, or no properties are set, no icon will be rendered
     * @param {string} detail.renderData.eventColor Color to be applied to the event
     * @param {object} detail.renderData.dataset An object which produces the `dataset` of the resulting event bar
     * @param {boolean} detail.renderData.solidBar This is valid for views which create event bars. This is set to `true` by default for all day and interday events so that these appear as a solid block of background color. An eventRenderer may mutate this flag to change in what manner the event bar is coloured - as a solid bar of colour, or using the foreground colour (text and icons) such as the MonthView, the CalendarRow (all day events in a DayView), and OverflowPopups
     * @param {string} detail.renderData.bodyColor When used in a [DayView](https://bryntum.com/products/calendar/docs/api/Calendar/widget/DayView), this color is applied to the body of the event element. Note that this must be light enough that the text colour (From the SASS variable `$dayview-event-color`) is visible
     * @param {boolean} detail.showBullet If there is no `iconCls`, and the event is not recurring, then by default a "bullet" circular icon is shown if the view's [showBullet](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/CalendarMixin#config-showBullet) if set. Setting this property in an event renderer overrides this behaviour.
     * @returns {DomConfig,DomConfig[],string,void}
     */
    eventHeaderRenderer?: ((detail: {
        view: typeof CalendarMixin;
        eventRecord: EventModel;
        resourceRecord: ResourceModel;
        renderData: {
            style: object;
            cls: object;
            iconStyle: object;
            iconCls: object;
            eventColor: string;
            dataset: object;
            solidBar: Boolean;
            bodyColor: string;
        };
        showBullet: Boolean;
    }) => DomConfig | DomConfig[] | string | void) | string;
    /**
     * The height of event bars if this view creates event bars.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-eventHeight)
     */
    eventHeight?: number | string;
    /**
     * A [DateHelper](https://bryntum.com/products/calendar/docs/api/Core/helper/DateHelper) format string used to format the time displayed
     * next to event bars in the custom columns which [EventList](https://bryntum.com/products/calendar/docs/api/Calendar/widget/EventList)
     * based views use - [EventList](https://bryntum.com/products/calendar/docs/api/Calendar/widget/EventList) and [AgendaView](#Calendar/widget/AgendaView).
     */
    eventListTimeFormat?: string;
    /**
     * A function, or the name of a function in the ownership hierarchy which you
     * can specify to customize event DOM content.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-eventRenderer)
     * @param {object} detail An object that contains data about the event being rendered
     * @param {Calendar.widget.mixin.CalendarMixin} detail.view The view rendering the event
     * @param {Scheduler.model.EventModel} detail.eventRecord The event record
     * @param {Scheduler.model.ResourceModel} detail.resourceRecord The event record
     * @param {object} detail.renderData A data object containing properties that will be used to create the event element
     * @param {object} detail.renderData.style The style property is an object containing style properties for the event element
     * @param {object} detail.renderData.cls The cls property is an object whose property names will be added to the event element if the property value is truthy
     * @param {object} detail.renderData.iconStyle The iconStyle property is an object containing style properties for the icon element if an icon element is to be used
     * @param {object} detail.renderData.iconCls The iconCls property is an object whose property names will be added to the icon element. Initially set from the event record's [iconCls](https://bryntum.com/products/calendar/docs/api/Scheduler/model/EventModel#field-iconCls). Can be mutated by the renderer. If null, or no properties are set, no icon will be rendered
     * @param {string} detail.renderData.eventColor Color to be applied to the event
     * @param {object} detail.renderData.dataset An object which produces the `dataset` of the resulting event bar
     * @param {boolean} detail.renderData.solidBar This is valid for views which create event bars. This is set to `true` by default for all day and interday events so that these appear as a solid block of background color. An eventRenderer may mutate this flag to change in what manner the event bar is coloured - as a solid bar of colour, or using the foreground colour (text and icons) such as the MonthView, the CalendarRow (all day events in a DayView), and OverflowPopups
     * @param {string} detail.renderData.bodyColor When used in a [DayView](https://bryntum.com/products/calendar/docs/api/Calendar/widget/DayView), this color is applied to the body of the event element. Note that this must be light enough that the text colour (From the SASS variable `$dayview-event-color`) is visible
     * @param {boolean} detail.renderData.showBullet If there is no `iconCls`, and the event is not recurring, then by default a "bullet" circular icon is shown if the view's [showBullet](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/CalendarMixin#config-showBullet) if set. Setting this property in an event renderer overrides this behaviour.
     * @returns {DomConfig,DomConfig[],string,void}
     */
    eventRenderer?: ((detail: {
        view: typeof CalendarMixin;
        eventRecord: EventModel;
        resourceRecord: ResourceModel;
        renderData: {
            style: object;
            cls: object;
            iconStyle: object;
            iconCls: object;
            eventColor: string;
            dataset: object;
            solidBar: Boolean;
            bodyColor: string;
            showBullet: Boolean;
        };
    }) => DomConfig | DomConfig[] | string | void) | string;
    /**
     * The spacing between event bars in the default rendering of a day cell.
     */
    eventRowSpacing?: number | string;
    /**
     * A function which compares events which some views use to decide upon rendering order.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-eventSorter)
     * @param {Scheduler.model.EventModel,EventBar} lhs The left side value to conpare
     * @param {Scheduler.model.EventModel,EventBar} rhs The right side value to conpare
     * @returns {number}
     */
    eventSorter?: (lhs: EventModel | EventBar, rhs: EventModel | EventBar) => number;
    /**
     * A function, or name of a function in the ownership hierarchy which is used to create
     * the time output next to event bars in an agenda cell.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-eventTimeRenderer)
     * @param {Scheduler.model.EventModel} eventRecord The event record for which to create a time string.
     * @param {Date} date The date of the cell in which the event is being rendered.
     * @returns {string,DomConfig,DomConfig[]}
     */
    eventTimeRenderer?: ((eventRecord: EventModel, date: Date) => string | DomConfig | DomConfig[]) | string;
    /**
     * By default, the end date of an all day event is displayed in the UI as
     * the last calendar date on which the event falls. For most end users, this is the
     * expected value.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-extendAllDayEndDay)
     */
    extendAllDayEndDay?: Boolean;
    extraData?: any;
    /**
     * Set to `true` to stretch the last column in a grid with all fixed width columns
     * to fill extra available space if the grid's width is wider than the sum of all
     * configured column widths.
     */
    fillLastColumn?: Boolean;
    /**
     * If this is set to `true`, then when determining which assigned resource of a multi assigned event
     * to use to create the event UI, the first resource which is still selected in the
     * [resourceFilter](https://bryntum.com/products/calendar/docs/api/Calendar/widget/Sidebar#property-resourceFilter) is used.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-filterEventResources)
     */
    filterEventResources?: Boolean;
    /**
     * Use fixed row height. Setting this to `true` will configure the underlying RowManager to use fixed row
     * height, which sacrifices the ability to use rows with variable height to gain a fraction better
     * performance.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-fixedRowHeight)
     */
    fixedRowHeight?: Boolean;
    /**
     * When this widget is a child of a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container), it will by default be participating in a
     * flexbox layout. This config allows you to set this widget's
     * [flex](https://developer.mozilla.org/en-US/docs/Web/CSS/flex) style.
     * This may be configured as a single number or a `&lt;flex-grow&gt; &lt;flex-shrink&gt; &lt;flex-basis&gt;` format string.
     * numeric-only values are interpreted as the `flex-grow` value.
     */
    flex?: number | string;
    /**
     * Config object of a footer. May contain a `dock`, `html` and a `cls` property. A footer is not a widget,
     * but rather plain HTML that follows the last element of the panel's body and [strips](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-strips).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-footer)
     */
    footer?: {
        dock?: 'top' | 'right' | 'bottom' | 'left' | 'start' | 'end';
        html?: string;
        cls?: string;
    } | string;
    /**
     * An object which names formula prefixes which will be applied to all columns configured with
     * `formula : true`.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-formulaProviders)
     */
    formulaProviders?: Record<string, FormulaProviderConfig>;
    /**
     * Refresh entire row when a record changes (`true`) or, if possible, only the cells affected (`false`).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-fullRowRefresh)
     */
    fullRowRefresh?: Boolean;
    /**
     * A Function (or name of a function in the ownership hierarchy) which returns the
     * [resource record](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ResourceModel) to use to create the UI for an event.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-getPrimaryResource)
     * @param {Scheduler.model.EventModel} eventRecord The event from which to extract the primary resource.
     * @returns {Scheduler.model.ResourceModel} The resource to be used to render the event.
     */
    getPrimaryResource?: ((eventRecord: EventModel) => ResourceModel) | string;
    /**
     * A function called for each row to determine its height. It is passed a [record](https://bryntum.com/products/calendar/docs/api/Core/data/Model) and
     * expected to return the desired height of that records row. If the function returns a falsy value, Grids
     * configured [rowHeight](https://bryntum.com/products/calendar/docs/api/Grid/view/GridBase#config-rowHeight) is used.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-getRowHeight)
     * @param {Core.data.Model} getRowHeight.record Record to determine row height for
     * @returns {number} Desired row height
     */
    getRowHeight?: (getRowHeight: {
        record: Model;
    }) => number;
    /**
     * A config [object](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#typedef-PanelHeader) for the panel's header or a string in place of a `title`.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-header)
     */
    header?: string | Boolean | PanelHeader;
    /**
     * Widget's height, used to set element style.height. Either specify a valid height string or a number, which
     * will get 'px' appended. We recommend using CSS as the primary way to control height, but in some cases
     * this config is convenient.
     */
    height?: string | number;
    /**
     * Configure with true to make widget initially hidden.
     */
    hidden?: Boolean;
    /**
     * By default, long running events are repeated in all rows that the event covers.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-hideEventOverflow)
     */
    hideEventOverflow?: Boolean;
    /**
     * Set to `true` to hide the footer elements
     */
    hideFooters?: Boolean;
    /**
     * Specify `false` to display column headers
     */
    hideHeaders?: Boolean;
    /**
     * Set to `true` to hide the Grid's horizontal scrollbar(s)
     */
    hideHorizontalScrollbar?: Boolean;
    /**
     * Configure as `true` to hide [nonWorkingDays](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/CalendarMixin#config-nonWorkingDays)
     */
    hideNonWorkingDays?: Boolean;
    /**
     * A CSS class to add to hovered row elements
     */
    hoverCls?: string;
    /**
     * Widget id, if not specified one will be generated. Also used for lookups through Widget.getById
     */
    id?: string;
    /**
     * Determines if the widgets read-only state should be controlled by its parent.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-ignoreParentReadOnly)
     */
    ignoreParentReadOnly?: Boolean;
    /**
     * Element (or element id) to insert this widget before. If provided, [appendTo](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-appendTo) config is ignored.
     */
    insertBefore?: HTMLElement | string;
    /**
     * Element (or element id) to append this widget element to, as a first child. If provided, [appendTo](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-appendTo) config is ignored.
     */
    insertFirst?: HTMLElement | string;
    /**
     * See [Keyboard shortcuts](https://bryntum.com/products/calendar/docs/api/Grid/view/Grid#keyboard-shortcuts) for details
     */
    keyMap?: Record<string, KeyMapConfig>;
    /**
     * The listener set for this object.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-listeners)
     */
    listeners?: AgendaViewListeners;
    /**
     * A [RangeMenu](https://bryntum.com/products/calendar/docs/api/Calendar/widget/RangeMenu) configuration block which configures the range choosing menu provided which
     * by default selects one of the following:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-listRangeMenu)
     */
    listRangeMenu?: RangeMenuConfig | null;
    /**
     * A [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) config object, or a message to be shown when a store is performing a remote
     * operation, or Crud Manager is loading data from the sever. Set to `null` to disable default load mask.
     */
    loadMask?: string | MaskConfig | null;
    /**
     * A [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) config object to adjust the [maskDefaults](#Core/widget/Widget#config-maskDefaults)
     * when data is loading. The message and optional configuration from the
     * [loadMask](https://bryntum.com/products/calendar/docs/api/Core/mixin/LoadMaskable#config-loadMask) config take priority over these options, just as they do
     * for `maskDefaults`, respectively.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-loadMaskDefaults)
     */
    loadMaskDefaults?: MaskConfig;
    /**
     * A [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) config object to adjust the [maskDefaults](#Core/widget/Widget#config-maskDefaults)
     * when an error occurs loading data.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-loadMaskError)
     */
    loadMaskError?: MaskConfig | Mask | Boolean;
    /**
     * Set to `false` to disable localization of this object.
     */
    localizable?: Boolean;
    /**
     * Time in ms until a longpress is triggered
     */
    longPressTime?: number;
    /**
     * Widget's margin. This may be configured as a single number or a `TRBL` format string.
     * numeric-only values are interpreted as pixels.
     */
    margin?: number | string;
    /**
     * Grids change the `maskDefaults` to cover only their `body` element.
     */
    maskDefaults?: MaskConfig;
    /**
     * Set to `true` to apply the default mask to the widget. Alternatively, this can be the mask message or a
     * [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) config object.
     */
    masked?: Boolean | string | MaskConfig;
    /**
     * The maximum date to which the `endDate` of this view may be navigated.
     */
    maxDate?: Date | string;
    /**
     * The element's maxHeight. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [height](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-height), *reading* the value will return the numeric value in pixels.
     */
    maxHeight?: string | number;
    /**
     * The elements maxWidth. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [width](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.
     */
    maxWidth?: string | number;
    /**
     * The minimum date to which the `startDate` of this view may be navigated.
     */
    minDate?: Date | string;
    /**
     * Grid's `min-height`. Defaults to `10em` to be sure that the Grid always has a height wherever it is
     * inserted.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-minHeight)
     */
    minHeight?: string | number;
    /**
     * The elements minWidth. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [width](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.
     */
    minWidth?: string | number;
    /**
     * Grid monitors window resize by default.
     */
    monitorResize?: Boolean;
    /**
     * Non-working days as an object where keys are day indices, 0-6 (Sunday-Saturday), and the value is `true`.
     * Defaults to [nonWorkingDays](https://bryntum.com/products/calendar/docs/api/Core/helper/DateHelper#property-nonWorkingDays-static).
     */
    nonWorkingDays?: Record<number, Boolean>;
    /**
     * This view lines up the textual content of event bars by shifting event bars of
     * events which start before the bar's cell leftwards by the arrow width.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-offsetStartsBeforeEvents)
     */
    offsetStartsBeforeEvents?: Boolean;
    /**
     * The owning Widget of this Widget. If this Widget is directly contained (that is, it is one of the
     * [items](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#property-items) of a Container), this config will be ignored. In this case
     * the owner is <strong>always</strong> the encapsulating Container.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-owner)
     */
    owner?: Widget;
    /**
     * The class name to add to events which have an end date in the past. Defaults to `'b-past-event'`.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-pastEventCls)
     */
    pastEventCls?: string;
    /**
     * Specify plugins (an array of classes) in config
     */
    plugins?: Function[];
    /**
     * True to preserve focused cell after loading new data
     */
    preserveFocusOnDatasetChange?: Boolean;
    /**
     * Preserve the grid's vertical scroll position when changesets are applied, as in the case of remote
     * changes, or when stores are configured with [syncDataOnLoad](https://bryntum.com/products/calendar/docs/api/Core/data/Store#config-syncDataOnLoad).
     */
    preserveScroll?: PreserveScrollOptions | Boolean;
    /**
     * Specify `true` to preserve vertical scroll position after store actions that trigger a `refresh` event,
     * such as loading new data and filtering.
     */
    preserveScrollOnDatasetChange?: Boolean;
    /**
     * Prevent tooltip from being displayed on touch devices. Useful for example for buttons that display a
     * menu on click etc, since the tooltip would be displayed at the same time.
     */
    preventTooltipOnTouch?: Boolean;
    /**
     * The time range around the [date](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/DateRangeOwner#config-date) to display events for.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-range)
     */
    range?: string | DurationConfig;
    /**
     * Set to `true` to make the grid read-only, by disabling any UIs for modifying data.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-readOnly)
     */
    readOnly?: Boolean;
    relayStoreEvents?: Boolean;
    /**
     * Configure this property to allow the widget/component to be resized. Pressing <kbd>Shift</kbd> while resizing will
     * constrain the aspect ratio.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-resizable)
     */
    resizable?: Boolean | {
        minWidth?: number;
        maxWidth?: number;
        minHeight?: number;
        maxHeight?: number;
        handles?: object;
    };
    /**
     * Set to `false` to only measure cell contents when double-clicking the edge between column headers.
     */
    resizeToFitIncludesHeader?: Boolean;
    /**
     * Path to load resource images from. Used by the [showResourceAvatars](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/CalendarMixin#config-showResourceAvatars) config
     * to create URLs using the resource's
     * [image](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ResourceModel#field-image) or
     * [imageUrl](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ResourceModel#field-imageUrl) fields:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-resourceImagePath)
     */
    resourceImagePath?: string;
    /**
     * Specifies the various responsive state objects keyed by their name. Each key (except `'*'`, see below) in
     * this object is a state name (see [responsiveState](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Responsive#config-responsiveState)) and its corresponding value is the
     * associated [ResponsiveState](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Responsive#typedef-ResponsiveState) object.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-responsive)
     */
    responsive?: object;
    /**
     * "Break points" for which responsive config to use for columns and css.
     */
    responsiveLevels?: Record<string, number | string>;
    /**
     * Set to `true` to mark this instance as the default [responsiveTarget](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Responsive#config-responsiveTarget) for descendants that do
     * not specify an explicit [responsiveTarget](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Responsive#config-responsiveTarget) of their own.
     */
    responsiveRoot?: Boolean;
    /**
     * The name of the active state of the [responsive](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Responsive#config-responsive) config. This is assigned internally
     * and should not be assigned directly.
     */
    responsiveState?: string;
    /**
     * The widget whose size and other properties drive this object's responsive behavior. If this config is not
     * specified, the closest ancestor that specified [responsiveRoot=true](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Responsive#config-responsiveRoot) will be
     * used. If there is no such ancestor, then the instance using this mixin is used.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-responsiveTarget)
     */
    responsiveTarget?: string | Widget;
    /**
     * Configure as `true` to have the component display a translucent ripple when its
     * [focusElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-focusElement), or [element](#Core/widget/Widget#property-element) is tapped <em>if the
     * current theme supports ripples</em>. Out of the box, only the Material theme supports ripples.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-ripple)
     */
    ripple?: Boolean | {
        delegate?: string;
        color?: string;
        radius?: number;
        clip?: string;
    };
    /**
     * If you are rendering this widget to a shadow root inside a web component, set this config to the shadowRoot. If not inside a web component, set it to `document.body`
     */
    rootElement?: ShadowRoot | HTMLElement;
    /**
     * Row height in pixels. This allows the default height for rows to be controlled. Note that it may be
     * overriden by specifying a [rowHeight](https://bryntum.com/products/calendar/docs/api/Grid/data/GridRowModel#field-rowHeight) on a per record basis, or from
     * a column [renderer](https://bryntum.com/products/calendar/docs/api/Grid/column/Column#config-renderer).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-rowHeight)
     */
    rowHeight?: number;
    /**
     * Set to `false` to not show row lines. End result might be overruled by/differ between themes.
     */
    rowLines?: Boolean;
    /**
     * This may be configured as `true` to make the widget's element use the `direction:rtl` style.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-rtl)
     */
    rtl?: Boolean;
    /**
     * Configures whether the grid is scrollable in the `Y` axis. This is used to configure a [Scroller](https://bryntum.com/products/calendar/docs/api/Core/helper/util/Scroller).
     * See the [scrollerClass](https://bryntum.com/products/calendar/docs/api/Grid/view/GridBase#config-scrollerClass) config option.
     */
    scrollable?: Boolean | ScrollerConfig | Scroller;
    /**
     * The class to instantiate to use as the [scrollable](https://bryntum.com/products/calendar/docs/api/Grid/view/GridBase#config-scrollable). Defaults to [Scroller](#Core/helper/util/Scroller).
     */
    scrollerClass?: typeof Scroller;
    /**
     * Configuration values for the [ScrollManager](https://bryntum.com/products/calendar/docs/api/Core/util/ScrollManager) class on initialization. Returns the
     * [ScrollManager](https://bryntum.com/products/calendar/docs/api/Core/util/ScrollManager) at runtime.
     */
    scrollManager?: ScrollManagerConfig | ScrollManager;
    /**
     * Selection configuration settings, change these properties to control how selection works and what can be
     * selected.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-selectionMode)
     */
    selectionMode?: GridSelectionMode;
    /**
     * A button configuration object to use for the automatically created mode selector button for this mode.
     */
    selectorButton?: ButtonConfig;
    /**
     * A menu item configuration object to use for the automatically created mode selector menu item for this mode.
     */
    selectorMenuItem?: MenuItemConfig;
    /**
     * The "Settings" button which is a floating button which offers the Agenda [range selection menu](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#property-listRangeMenu)
     */
    settingsButton?: ButtonConfig | Button;
    /**
     * The time range to move by when [next](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/DateRangeOwner#function-next) or [previous](#Calendar/widget/mixin/DateRangeOwner#function-previous) is called.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-shiftIncrement)
     */
    shiftIncrement?: string | DurationConfig;
    /**
     * A [DateHelper](https://bryntum.com/products/calendar/docs/api/Core/helper/DateHelper) format string to use to create date output for
     * abbreviated view descriptions.
     */
    shortDateFormat?: string;
    /**
     * A [DateHelper](https://bryntum.com/products/calendar/docs/api/Core/helper/DateHelper) format string to use to create date and time output for
     * abbreviated view descriptions.
     */
    shortDateTimeFormat?: string;
    /**
     * The class name to add to events which have duration less than or equal to
     * [shortEventDuration](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/CalendarMixin#config-shortEventDuration).
     */
    shortEventCls?: string;
    /**
     * The duration at which below and equal to this value, an event's encapsulating element gets
     * the [shortEventCls](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/CalendarMixin#config-shortEventCls) added to it so that small event bars can have style rearrangements.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-shortEventDuration)
     */
    shortEventDuration?: string | number;
    /**
     * <strong>Not applicable in a `DayView`</strong>
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-showBullet)
     * @param {boolean} bar This is `false` by default. Set this to `true` in modes where a solid event bar should show a bullet icon
     * @param {boolean} noBar This is `true` by default. Events with no background colour, use this to show the event's defined `eventColor`
     */
    showBullet?: Boolean | {
        bar?: Boolean;
        noBar?: Boolean;
    };
    /**
     * Configure as `true` to have the grid show a red "changed" tag in cells whose
     * field value has changed and not yet been committed.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-showDirty)
     */
    showDirty?: Boolean | {
        duringEdit?: Boolean;
    };
    /**
     * By default, only cells for days which contain events are shown.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-showEmptyDates)
     */
    showEmptyDates?: Boolean;
    /**
     * Configure as `true` to show avatars of the assigned resources (calendars) at the
     * start of the event bar.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-showResourceAvatars)
     */
    showResourceAvatars?: Boolean | string;
    /**
     * Set to `true` to stack multi-day events within each cell in the order of their start time.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-stackMultiDayEvents)
     */
    stackMultiDayEvents?: Boolean;
    /**
     * The start date (Time component is zeroed) of this view.
     */
    startDate?: Date;
    /**
     * This value can be one of the following:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-stateful)
     */
    stateful?: Boolean | object | string[];
    /**
     * The events that, when fired by this component, should trigger it to save its state by calling
     * [saveState](https://bryntum.com/products/calendar/docs/api/Core/mixin/State#function-saveState).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-statefulEvents)
     */
    statefulEvents?: object | string[];
    /**
     * The key to use when saving this object's state in the [stateProvider](https://bryntum.com/products/calendar/docs/api/Core/mixin/State#config-stateProvider). If this config is
     * not assigned, and [stateful](https://bryntum.com/products/calendar/docs/api/Core/mixin/State#config-stateful) is not set to `false`, the [id](#Core/widget/Widget#config-id)
     * (if explicitly specified) will be used as the `stateId`.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-stateId)
     */
    stateId?: string;
    /**
     * The `StateProvider` to use to save and restore this object's [state](https://bryntum.com/products/calendar/docs/api/Core/mixin/State#property-state). By default, `state`
     * will be saved using the [default state provider](https://bryntum.com/products/calendar/docs/api/Core/state/StateProvider#property-instance-static).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-stateProvider)
     */
    stateProvider?: StateProvider;
    /**
     * The properties of this settings object controls how grid is restored from state data.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-stateSettings)
     */
    stateSettings?: {
        restoreUnconfiguredColumns?: Boolean;
    };
    /**
     * Store that holds records to display in the grid, or a store config object. If the configuration contains
     * a `readUrl`, an `AjaxStore` will be created.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-store)
     */
    store?: Store | StoreConfig | AjaxStore | AjaxStoreConfig;
    /**
     * An object containing widgets keyed by name. By default (when no `type` is given), strips are
     * [toolbars](https://bryntum.com/products/calendar/docs/api/Core/widget/Toolbar). If you want to pass an array, you can use
     * the toolbar's [items](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#config-items).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-strips)
     */
    strips?: Record<string, ContainerItemConfig>;
    /**
     * An object containing sub grid configuration objects keyed by a `region` property.
     * By default, grid has a 'locked' region (if configured with locked columns) and a 'normal' region.
     * The 'normal' region defaults to use `flex: 1`.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-subGridConfigs)
     */
    subGridConfigs?: Record<string, SubGridConfig>;
    /**
     * The converse of [syncViewDate](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/CalendarMixin#property-syncViewDate)
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-syncCalendarDate)
     */
    syncCalendarDate?: Boolean;
    /**
     * A [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) config object, or a message to be shown when Crud Manager
     * is persisting changes on the server. Set to `null` to disable default sync mask.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-syncMask)
     */
    syncMask?: string | MaskConfig | null;
    /**
     * The converse of [syncCalendarDate](https://bryntum.com/products/calendar/docs/api/Calendar/widget/mixin/CalendarMixin#property-syncCalendarDate)
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-syncViewDate)
     */
    syncViewDate?: Boolean;
    /**
     * A configuration for the [tab](https://bryntum.com/products/calendar/docs/api/Core/widget/Tab) created for this widget when it is placed in a
     * [TabPanel](https://bryntum.com/products/calendar/docs/api/Core/widget/TabPanel). For example, this config can be used to control the icon of the `tab` for
     * this widget:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-tab)
     */
    tab?: Boolean | TabConfig;
    /**
     * When this container is used as a tab in a TabPanel, these items are added to the
     * [TabBar](https://bryntum.com/products/calendar/docs/api/Core/widget/TabBar) when this container is the active tab.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-tabBarItems)
     */
    tabBarItems?: ToolbarItems[] | Widget[];
    /**
     * A Config object representing the configuration of a [Toolbar](https://bryntum.com/products/calendar/docs/api/Core/widget/Toolbar),
     * or array of config objects representing the child items of a Toolbar.
     * This creates a toolbar docked to the top of the panel immediately below the header.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-tbar)
     */
    tbar?: (ContainerItemConfig | string)[] | ToolbarConfig | PagingToolbarConfig | null;
    /**
     * A [DateHelper](https://bryntum.com/products/calendar/docs/api/Core/helper/DateHelper) format string used to format the time displayed in events
     */
    timeFormat?: string;
    /**
     * A title to display in the header or owning TabPanel. Causes creation and docking of a header
     * to the top if no header is configured.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-title)
     */
    title?: string;
    /**
     * The [tools](https://bryntum.com/products/calendar/docs/api/Core/widget/Tool) to add either before or after the `title` in the Panel header. Each
     * property name is the reference by which an instantiated tool may be retrieved from the live
     * `[tools](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Toolable#property-tools)` property.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-tools)
     */
    tools?: Record<string, ToolConfig> | null;
    /**
     * Animation transition duration in milliseconds.
     */
    transitionDuration?: number;
    type?: 'agendaview' | 'agenda';
    /**
     * Custom CSS class name suffixes to apply to the elements rendered by this widget. This may be specified
     * as a space separated string, an array of strings, or as an object in which property names with truthy
     * values are used as the class names.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/widget/AgendaView#config-ui)
     */
    ui?: 'plain' | 'toolbar' | string | object;
    /**
     * The week start day, 0 meaning Sunday, 6 meaning Saturday.
     * Defaults to [weekStartDay](https://bryntum.com/products/calendar/docs/api/Core/helper/DateHelper#property-weekStartDay-static).
     */
    weekStartDay?: number;
    /**
     * A widgets weight determines its position among siblings when added to a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container).
     * Higher weights go further down.
     */
    weight?: number;
    /**
     * Widget's width, used to set element style.width. Either specify a valid width string or a number, which
     * will get 'px' appended. We recommend using CSS as the primary way to control width, but in some cases
     * this config is convenient.
     */
    width?: string | number;
    /**
     * Allows using `[Ctrl/CMD + C]`, `[Ctrl/CMD + X]` and `[Ctrl/CMD + V]` to cut, copy and paste cell or cell ranges. Also
     * makes cut, copy and paste actions available via the cell context menu.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/CellCopyPaste)
     */
    cellCopyPasteFeature?: object | Boolean | string | CellCopyPaste | CellCopyPasteConfig;
    /**
     * Adding this feature to the grid and other Bryntum products which are based on the Grid (i.e. Scheduler, SchedulerPro, and Gantt)
     * enables cell editing. Any subclass of [Field](https://bryntum.com/products/calendar/docs/api/Core/widget/Field) can be used
     * as editor for the [Column](https://bryntum.com/products/calendar/docs/api/Grid/column/Column). The most popular are:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/CellEdit)
     */
    cellEditFeature?: object | Boolean | string | CellEdit | CellEditConfig;
    /**
     * Right click to display context menu for cells.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/CellMenu)
     */
    cellMenuFeature?: object | Boolean | string | CellMenu | CellMenuConfig;
    /**
     * Displays a tooltip when hovering cells.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/CellTooltip)
     */
    cellTooltipFeature?: object | Boolean | string | CellTooltip | CellTooltipConfig;
    /**
     * Enables the [autoWidth](https://bryntum.com/products/calendar/docs/api/Grid/column/Column#config-autoWidth) config for a grid's columns.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/ColumnAutoWidth)
     */
    columnAutoWidthFeature?: object | Boolean | string | ColumnAutoWidth | ColumnAutoWidthConfig;
    /**
     * Displays a toolbar while dragging column headers. Drop on a button in the toolbar to activate a certain function,
     * for example to group by that column. This feature simplifies certain operations on touch devices.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/ColumnDragToolbar)
     */
    columnDragToolbarFeature?: object | Boolean | string | ColumnDragToolbar | ColumnDragToolbarConfig;
    /**
     * Displays a column picker (to show/hide columns) in the header context menu. Columns can be displayed in sub menus
     * by region or tag. Grouped headers are displayed as menu hierarchies.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/ColumnPicker)
     */
    columnPickerFeature?: object | Boolean | string | ColumnPicker | ColumnPickerConfig;
    /**
     * Allows user to rename columns by either right-clicking column header or using keyboard shortcuts when column header
     * is focused.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/ColumnRename)
     */
    columnRenameFeature?: object | Boolean | string | ColumnRename | ColumnRenameConfig;
    /**
     * Allows user to reorder columns by dragging headers. To get notified about column reorder listen to `change` event
     * on [columns](https://bryntum.com/products/calendar/docs/api/Grid/data/ColumnStore) store.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/ColumnReorder)
     */
    columnReorderFeature?: object | Boolean | string | ColumnReorder | ColumnReorderConfig;
    /**
     * Enables user to resize columns by dragging a handle on the right hand side of the header. To get notified about column
     * resize listen to `change` event on [columns](https://bryntum.com/products/calendar/docs/api/Grid/data/ColumnStore) store.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/ColumnResize)
     */
    columnResizeFeature?: object | Boolean | string | ColumnResize | ColumnResizeConfig;
    /**
     * A feature that allows exporting Grid data to Excel or CSV without involving the server. It uses
     * [TableExporter](https://bryntum.com/products/calendar/docs/api/Grid/util/TableExporter) class as data provider, 3rd party provider to generate XLS files, and
     * [Microsoft XML specification](https://msdn.microsoft.com/en-us/library/office/documentformat.openxml.spreadsheet.aspx).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/experimental/ExcelExporter)
     */
    excelExporterFeature?: object | Boolean | string | GridExcelExporter | GridExcelExporterConfig;
    /**
     * An experimental feature that lets users drop files on a Widget. The widget fires an event when a file is dropped onto it.
     * In the event, you get access to the raw files as strings, that were parsed by calling `readAsBinaryString`.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/experimental/FileDrop)
     */
    fileDropFeature?: object | Boolean | string | FileDrop | FileDropConfig;
    /**
     * This feature adds a fill handle to a Grid range selection, which when dragged, fills the cells being dragged over
     * with values based on the values in the original selected range. This is similar to functionality normally seen in
     * various spreadsheet applications.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/FillHandle)
     */
    fillHandleFeature?: object | Boolean | string | FillHandle | FillHandleConfig;
    /**
     * Feature that allows filtering of the grid by settings filters on columns. The actual filtering is done by the store.
     * For info on programmatically handling filters, see [StoreFilter](https://bryntum.com/products/calendar/docs/api/Core/data/mixin/StoreFilter).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/Filter)
     */
    filterFeature?: object | Boolean | string | Filter | FilterConfig;
    /**
     * Feature that allows filtering of the grid by entering filters on column headers.
     * The actual filtering is done by the store.
     * For info on programmatically handling filters, see [StoreFilter](https://bryntum.com/products/calendar/docs/api/Core/data/mixin/StoreFilter).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/FilterBar)
     */
    filterBarFeature?: object | Boolean | string | FilterBar | FilterBarConfig;
    /**
     * Enables rendering and handling of row groups. The actual grouping is done in the store, but triggered by `[shift]` +
     * clicking headers or by using two finger tap (one on header, one anywhere on grid). Use `[shift]` + `[alt]` + click to
     * remove a column grouper.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/Group)
     */
    groupFeature?: object | Boolean | string | Group | GroupConfig;
    /**
     * Displays a summary row as a group footer in a grouped grid. Uses the same configuration options on columns as
     * [Summary](https://bryntum.com/products/calendar/docs/api/Grid/feature/Summary).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/GroupSummary)
     */
    groupSummaryFeature?: object | Boolean | string | GridGroupSummary | GridGroupSummaryConfig;
    /**
     * Right click column header or focus it and press SPACE key to show the context menu for headers.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/HeaderMenu)
     */
    headerMenuFeature?: object | Boolean | string | HeaderMenu | HeaderMenuConfig;
    /**
     * This feature allows records which satisfy a certain condition to be locked at the top of the grid.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/LockRows)
     */
    lockRowsFeature?: object | Boolean | string | GridLockRows | GridLockRowsConfig;
    /**
     * This feature merges cells that have the same value in sorted (or [optionally](https://bryntum.com/products/calendar/docs/api/Grid/feature/MergeCells#config-sortedOnly) any) columns
     * configured to [mergeCells](https://bryntum.com/products/calendar/docs/api/Grid/column/Column#config-mergeCells).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/MergeCells)
     */
    mergeCellsFeature?: object | Boolean | string | MergeCells | MergeCellsConfig;
    /**
     * Generates PDF/PNG files from the Grid component.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/export/PdfExport)
     */
    pdfExportFeature?: object | Boolean | string | GridPdfExport | GridPdfExportConfig;
    /**
     * Allows printing Grid contents using browser print dialog.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/export/GridPrint)
     */
    printFeature?: object | Boolean | string | GridPrint | GridPrintConfig;
    /**
     * Feature that allows the user to search in a column by focusing a cell and typing. Navigate between hits using the
     * keyboard, [f3] or [ctrl]/[cmd] + [g] moves to next, also pressing [shift] moves to previous.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/QuickFind)
     */
    quickFindFeature?: object | Boolean | string | QuickFind | QuickFindConfig;
    /**
     * Makes the splitter between grid [sections](https://bryntum.com/products/calendar/docs/api/Grid/view/SubGrid) draggable, to let users resize, and
     * collapse/expand the sections.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/RegionResize)
     */
    regionResizeFeature?: object | Boolean | string | RegionResize | RegionResizeConfig;
    /**
     * Allow using [Ctrl/CMD + C/X] and [Ctrl/CMD + V] to copy/cut-and-paste rows. Also makes cut, copy and paste actions
     * available via the cell context menu.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/RowCopyPaste)
     */
    rowCopyPasteFeature?: object | Boolean | string | RowCopyPaste | RowCopyPasteConfig;
    /**
     * This feature allows editing of entire rows in a grid in a docked panel which by default slides out from the right.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/RowEdit)
     */
    rowEditFeature?: object | Boolean | string | RowEdit | RowEditConfig;
    /**
     * Enables expanding of Grid rows by either row click or double click, or by adding a separate Grid column which renders
     * a button that expands or collapses the row.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/RowExpander)
     */
    rowExpanderFeature?: object | Boolean | string | RowExpander | RowExpanderConfig;
    /**
     * Allows user to reorder rows by dragging them. To get notified about row reorder listen to `change` event
     * on the grid [store](https://bryntum.com/products/calendar/docs/api/Core/data/Store).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/RowReorder)
     */
    rowReorderFeature?: object | Boolean | string | GridRowReorder | GridRowReorderConfig;
    /**
     * Enables user to change row height by dragging the bottom row border. After a resize operation, the [rowHeight](https://bryntum.com/products/calendar/docs/api/Grid/data/GridRowModel#field-rowHeight)
     * field of the record is updated (when [applyToAllRows](https://bryntum.com/products/calendar/docs/api/Grid/feature/RowResize#config-applyToAllRows) is `false`).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/RowResize)
     */
    rowResizeFeature?: object | Boolean | string | GridRowResize | GridRowResizeConfig;
    /**
     * <div class="external-example " data-file="Grid/feature/Search.js"></div>
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/Search)
     */
    searchFeature?: object | Boolean | string | Search | SearchConfig;
    /**
     * Allows sorting of grid by clicking (or tapping) headers, also displays which columns grid is sorted by (numbered if
     * using multisort). Use modifier keys for multisorting: [Ctrl/CMD + click] to add sorter, [Ctrl/CMD + Alt + click] to remove sorter.
     * The actual sorting is done by the store, see [Store.sort()](https://bryntum.com/products/calendar/docs/api/Core/data/mixin/StoreSort#function-sort).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/Sort)
     */
    sortFeature?: object | Boolean | string | Sort | SortConfig;
    /**
     * This feature allows splitting the Grid into multiple views, either by using the cell context menu, or
     * programmatically by calling [split()](https://bryntum.com/products/calendar/docs/api/Grid/feature/Split#function-split).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/Split)
     */
    splitFeature?: object | Boolean | string | GridSplit | GridSplitConfig;
    /**
     * A feature which pins configurable content from a grid row to the top of the grid
     * while the row scrolls off the top but is still visible.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/StickyCells)
     */
    stickyCellsFeature?: object | Boolean | string | StickyCells | StickyCellsConfig;
    /**
     * Stripes rows by adding alternating CSS classes to all row elements (`b-even` and `b-odd`).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/Stripe)
     */
    stripeFeature?: object | Boolean | string | Stripe | StripeConfig;
    /**
     * Displays a summary row in the grid footer.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/Summary)
     */
    summaryFeature?: object | Boolean | string | GridSummary | GridSummaryConfig;
    /**
     * Feature that makes the grid work more like a tree. Included by default in [TreeGrid](https://bryntum.com/products/calendar/docs/api/Grid/view/TreeGrid). Requires
     * exactly one [TreeColumn](https://bryntum.com/products/calendar/docs/api/Grid/column/TreeColumn) among grids columns. That column will have its renderer replaced with a
     * tree renderer that adds padding and icon to give the appearance of a tree. The original renderer is preserved and
     * also called.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/Tree)
     */
    treeFeature?: object | Boolean | string | Tree | TreeConfig;
    /**
     * A feature that allows transforming a flat dataset (or the leaves of a hierarchical) into a tree by specifying a
     * record field per parent level. Parents are generated based on each leaf's value for those fields.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Grid/feature/TreeGroup)
     */
    treeGroupFeature?: object | Boolean | string | TreeGroup | TreeGroupConfig;
};
