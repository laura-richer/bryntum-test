import { defineComponent as m, ref as d, provide as f, onMounted as C, getCurrentInstance as E, toRaw as b, watch as S, onBeforeUnmount as M, createElementBlock as c, openBlock as r, createElementVNode as D, Fragment as y, renderList as R, createBlock as u, Teleport as k, resolveDynamicComponent as w, mergeProps as x, toHandlers as B } from "vue";
import { Calendar as F } from "@bryntum/calendar";
import { WrapperHelper as n } from "../helper/WrapperHelper.js";
const O = {
  ref: "teleportsHolder",
  style: { display: "none" }
}, N = /* @__PURE__ */ m({
  __name: "BryntumCalendar",
  props: {
    activeDateCls: {},
    adopt: {},
    align: {},
    alignSelf: {},
    anchor: {},
    appendTo: {},
    ariaDescription: {},
    ariaLabel: {},
    ariaLive: {},
    assignments: {},
    assignmentStore: {},
    autoCreate: {},
    bbar: {},
    bodyCls: {},
    bubbleEvents: {},
    callOnFunctions: {},
    centered: {},
    cls: {},
    collapsed: {},
    collapsible: {},
    config: {},
    constrainTo: {},
    contentElementCls: {},
    contextMenuTriggerEvent: {},
    crudManager: {},
    crudManagerClass: {},
    dataset: {},
    date: {},
    dateFormat: {},
    datePicker: {},
    defaultBindProperty: {},
    defaultCalendar: {},
    defaultFocus: { type: [Function, String] },
    defaults: {},
    deselectAllOnScheduleClick: {},
    deselectOnClick: {},
    destroyStores: {},
    disabled: {},
    dock: {},
    draggable: {},
    drawer: {},
    elementAttributes: {},
    enableDeleteKey: {},
    enableRecurringEvents: {},
    enableUndoRedoKeys: {},
    events: {},
    eventSelectionDisabled: {},
    eventStore: {},
    extraData: {},
    filterEventResources: {},
    flex: {},
    floating: {},
    footer: {},
    header: {},
    height: {},
    hidden: {},
    hideAnimation: {},
    hideNonWorkingDays: {},
    hideWhenEmpty: {},
    highlightDate: { type: Function },
    highlightPredecessors: {},
    highlightSuccessors: {},
    id: {},
    ignoreParentReadOnly: {},
    includeWeekendsButton: {},
    insertBefore: {},
    insertFirst: {},
    isEventSelectable: { type: Function },
    itemCls: {},
    items: {},
    keyMap: {},
    layout: {},
    layoutStyle: {},
    lazyItems: {},
    listeners: {},
    loadMask: {},
    loadMaskDefaults: {},
    loadMaskError: {},
    localeClass: {},
    localizable: {},
    localizableProperties: {},
    maintainSelectionOnDatasetChange: {},
    margin: {},
    maskDefaults: {},
    masked: {},
    maxDate: {},
    maxHeight: {},
    maximizeOnMobile: {},
    maxWidth: {},
    minDate: {},
    minHeight: {},
    minWidth: {},
    mode: {},
    modeDefaults: {},
    modes: {},
    monitorResize: {},
    multiEventSelect: {},
    namedItems: {},
    navigatorPlacement: {},
    nonWorkingDays: {},
    overlaySidebar: {},
    owner: {},
    positioned: {},
    preventTooltipOnTouch: {},
    project: {},
    readOnly: {},
    recurrenceConfirmationPopup: {},
    relayStoreEvents: {},
    resourceImagePath: {},
    resources: {},
    resourceStore: {},
    resourceTimeRanges: {},
    resourceTimeRangeStore: {},
    responsive: {},
    responsiveRoot: {},
    responsiveState: {},
    responsiveTarget: {},
    ripple: {},
    rootElement: {},
    rtl: {},
    scrollable: {},
    scrollAction: {},
    selectResourceOnEventNavigate: {},
    selectResourceOnScheduleClick: {},
    showAnimation: {},
    showRecurringUI: {},
    showTooltipWhenDisabled: {},
    sidebar: {},
    stateful: {},
    statefulEvents: {},
    stateId: {},
    stateProvider: {},
    strictRecordMapping: {},
    strips: {},
    syncMask: {},
    tab: {},
    tabBarItems: {},
    tag: {},
    tbar: {},
    textAlign: {},
    timeRanges: {},
    timeRangeStore: {},
    timeZone: {},
    title: {},
    tools: {},
    tooltip: {},
    trapFocus: {},
    triggerSelectionChangeOnRemove: {},
    type: {},
    ui: {},
    useContextualRecurrenceRules: {},
    viewContainer: {},
    weekStartDay: {},
    weight: {},
    width: {},
    x: {},
    y: {},
    dragFeature: {},
    eventBufferFeature: {},
    eventCopyPasteFeature: {},
    eventEditFeature: {},
    eventMenuFeature: {},
    eventTooltipFeature: {},
    excelExporterFeature: {},
    externalEventSourceFeature: {},
    loadOnDemandFeature: {},
    printFeature: {},
    scheduleMenuFeature: {},
    scheduleTooltipFeature: {},
    timeRangesFeature: {},
    weekExpanderFeature: {}
  },
  emits: ["activeItemChange", "afterEventEdit", "afterEventSave", "beforeActiveItemChange", "beforeAssignmentDelete", "beforeAssignmentSelectionChange", "beforeAutoCreate", "beforeCopy", "beforeCreateMode", "beforeCSVExport", "beforeDestroy", "beforeDragCreate", "beforeDragCreateEnd", "beforeDragMove", "beforeDragMoveEnd", "beforeDragResize", "beforeDragResizeEnd", "beforeDropExternal", "beforeEventDelete", "beforeEventEdit", "beforeEventEditShow", "beforeEventSave", "beforeEventSelectionChange", "beforeExcelExport", "beforeHide", "beforePaste", "beforePrint", "beforeResponsiveStateChange", "beforeSetRecord", "beforeShow", "beforeStateApply", "beforeStateSave", "catchAll", "cellOverflowClick", "collapse", "contextMenuItem", "contextMenuToggleItem", "copy", "currentTimelineUpdate", "dataChange", "dateChange", "dateRangeChange", "dateRangeLoad", "dateRangeRequested", "dayCellPopulated", "dayNumberClick", "destroy", "dirtyStateChange", "dragCreateEnd", "dragMoveEnd", "dragMoveExternal", "dragResizeEnd", "dropExternal", "emptyCellClick", "eventAutoCreated", "eventClick", "eventContextMenu", "eventDblClick", "eventEditBeforeSetRecord", "eventKeyDown", "eventMenuBeforeShow", "eventMenuItem", "eventMenuShow", "eventMouseDown", "eventMouseEnter", "eventMouseLeave", "eventMouseOut", "eventMouseOver", "eventMouseUp", "eventPropagate", "expand", "focusIn", "focusOut", "hide", "loadOnDemandFail", "monthNameClick", "navigate", "paint", "paste", "pasteNotAllowed", "readOnly", "recompose", "refresh", "resize", "responsiveStateChange", "scheduleClick", "scheduleContextMenu", "scheduleDblClick", "scheduleMenuBeforeShow", "scheduleMenuItem", "scheduleMenuShow", "scheduleMouseDown", "scheduleMouseOut", "scheduleMouseOver", "scheduleMouseUp", "selectionChange", "show", "sidebarCollapse", "sidebarExpand", "timeRangeHeaderClick", "timeRangeHeaderContextMenu", "timeRangeHeaderDblClick", "toolClick", "viewPaint", "weekNumberClick"],
  setup(P, { expose: g, emit: v }) {
    const p = v, i = {
      instanceClass: F,
      instanceName: "Calendar",
      isView: !0,
      dataStores: {
        assignmentStore: "assignments",
        dependencyStore: "dependencies",
        eventStore: "events",
        resourceStore: "resources",
        resourceTimeRangeStore: "resourceTimeRanges",
        timeRangeStore: "timeRanges"
      },
      projectStores: !0,
      featureNames: [
        "dragFeature",
        "eventBufferFeature",
        "eventCopyPasteFeature",
        "eventEditFeature",
        "eventMenuFeature",
        "eventTooltipFeature",
        "excelExporterFeature",
        "externalEventSourceFeature",
        "loadOnDemandFeature",
        "printFeature",
        "scheduleMenuFeature",
        "scheduleTooltipFeature",
        "timeRangesFeature",
        "weekExpanderFeature"
      ],
      configNames: [
        "adopt",
        "align",
        "anchor",
        "ariaDescription",
        "ariaLabel",
        "assignmentStore",
        "autoCreate",
        "bbar",
        "bodyCls",
        "bubbleEvents",
        "callOnFunctions",
        "centered",
        "collapsible",
        "config",
        "constrainTo",
        "contentElementCls",
        "contextMenuTriggerEvent",
        "crudManagerClass",
        "datePicker",
        "defaultBindProperty",
        "defaultFocus",
        "defaults",
        "deselectOnClick",
        "destroyStores",
        "dock",
        "draggable",
        "drawer",
        "elementAttributes",
        "enableDeleteKey",
        "enableRecurringEvents",
        "enableUndoRedoKeys",
        "eventSelectionDisabled",
        "eventStore",
        "filterEventResources",
        "floating",
        "footer",
        "header",
        "hideAnimation",
        "hideWhenEmpty",
        "highlightDate",
        "highlightPredecessors",
        "highlightSuccessors",
        "ignoreParentReadOnly",
        "includeWeekendsButton",
        "itemCls",
        "lazyItems",
        "listeners",
        "loadMask",
        "loadMaskDefaults",
        "loadMaskError",
        "localeClass",
        "localizable",
        "localizableProperties",
        "maintainSelectionOnDatasetChange",
        "maskDefaults",
        "masked",
        "monitorResize",
        "multiEventSelect",
        "namedItems",
        "navigatorPlacement",
        "overlaySidebar",
        "owner",
        "positioned",
        "preventTooltipOnTouch",
        "relayStoreEvents",
        "resourceImagePath",
        "resourceStore",
        "resourceTimeRangeStore",
        "responsive",
        "responsiveRoot",
        "responsiveState",
        "responsiveTarget",
        "ripple",
        "rootElement",
        "scrollAction",
        "showAnimation",
        "showRecurringUI",
        "showTooltipWhenDisabled",
        "sidebar",
        "stateful",
        "statefulEvents",
        "stateId",
        "stateProvider",
        "strips",
        "syncMask",
        "tab",
        "tabBarItems",
        "tag",
        "tbar",
        "textAlign",
        "timeRangeStore",
        "timeZone",
        "trapFocus",
        "triggerSelectionChangeOnRemove",
        "type",
        "ui",
        "viewContainer",
        "weekStartDay",
        "weight"
      ],
      propertyConfigNames: [
        "activeDateCls",
        "alignSelf",
        "appendTo",
        "ariaLive",
        "assignments",
        "cls",
        "collapsed",
        "crudManager",
        "dataset",
        "date",
        "dateFormat",
        "defaultCalendar",
        "deselectAllOnScheduleClick",
        "disabled",
        "events",
        "extraData",
        "flex",
        "height",
        "hidden",
        "hideNonWorkingDays",
        "id",
        "insertBefore",
        "insertFirst",
        "isEventSelectable",
        "items",
        "keyMap",
        "layout",
        "layoutStyle",
        "margin",
        "maxDate",
        "maxHeight",
        "maximizeOnMobile",
        "maxWidth",
        "minDate",
        "minHeight",
        "minWidth",
        "mode",
        "modeDefaults",
        "modes",
        "nonWorkingDays",
        "onActiveItemChange",
        "onAfterEventEdit",
        "onAfterEventSave",
        "onBeforeActiveItemChange",
        "onBeforeAssignmentDelete",
        "onBeforeAssignmentSelectionChange",
        "onBeforeAutoCreate",
        "onBeforeCopy",
        "onBeforeCreateMode",
        "onBeforeCSVExport",
        "onBeforeDestroy",
        "onBeforeDragCreate",
        "onBeforeDragCreateEnd",
        "onBeforeDragMove",
        "onBeforeDragMoveEnd",
        "onBeforeDragResize",
        "onBeforeDragResizeEnd",
        "onBeforeDropExternal",
        "onBeforeEventDelete",
        "onBeforeEventEdit",
        "onBeforeEventEditShow",
        "onBeforeEventSave",
        "onBeforeEventSelectionChange",
        "onBeforeExcelExport",
        "onBeforeHide",
        "onBeforePaste",
        "onBeforePrint",
        "onBeforeResponsiveStateChange",
        "onBeforeSetRecord",
        "onBeforeShow",
        "onBeforeStateApply",
        "onBeforeStateSave",
        "onCatchAll",
        "onCellOverflowClick",
        "onCollapse",
        "onContextMenuItem",
        "onContextMenuToggleItem",
        "onCopy",
        "onCurrentTimelineUpdate",
        "onDataChange",
        "onDateChange",
        "onDateRangeChange",
        "onDateRangeLoad",
        "onDateRangeRequested",
        "onDayCellPopulated",
        "onDayNumberClick",
        "onDestroy",
        "onDirtyStateChange",
        "onDragCreateEnd",
        "onDragMoveEnd",
        "onDragMoveExternal",
        "onDragResizeEnd",
        "onDropExternal",
        "onEmptyCellClick",
        "onEventAutoCreated",
        "onEventClick",
        "onEventContextMenu",
        "onEventDblClick",
        "onEventEditBeforeSetRecord",
        "onEventKeyDown",
        "onEventMenuBeforeShow",
        "onEventMenuItem",
        "onEventMenuShow",
        "onEventMouseDown",
        "onEventMouseEnter",
        "onEventMouseLeave",
        "onEventMouseOut",
        "onEventMouseOver",
        "onEventMouseUp",
        "onEventPropagate",
        "onExpand",
        "onFocusIn",
        "onFocusOut",
        "onHide",
        "onLoadOnDemandFail",
        "onMonthNameClick",
        "onNavigate",
        "onPaint",
        "onPaste",
        "onPasteNotAllowed",
        "onReadOnly",
        "onRecompose",
        "onRefresh",
        "onResize",
        "onResponsiveStateChange",
        "onScheduleClick",
        "onScheduleContextMenu",
        "onScheduleDblClick",
        "onScheduleMenuBeforeShow",
        "onScheduleMenuItem",
        "onScheduleMenuShow",
        "onScheduleMouseDown",
        "onScheduleMouseOut",
        "onScheduleMouseOver",
        "onScheduleMouseUp",
        "onSelectionChange",
        "onShow",
        "onSidebarCollapse",
        "onSidebarExpand",
        "onTimeRangeHeaderClick",
        "onTimeRangeHeaderContextMenu",
        "onTimeRangeHeaderDblClick",
        "onToolClick",
        "onViewPaint",
        "onWeekNumberClick",
        "project",
        "readOnly",
        "recurrenceConfirmationPopup",
        "resources",
        "resourceTimeRanges",
        "rtl",
        "scrollable",
        "selectResourceOnEventNavigate",
        "selectResourceOnScheduleClick",
        "strictRecordMapping",
        "timeRanges",
        "title",
        "tools",
        "tooltip",
        "useContextualRecurrenceRules",
        "width",
        "x",
        "y"
      ],
      propertyNames: [
        "activeSubView",
        "activeView",
        "anchorSize",
        "focusVisible",
        "hasChanges",
        "isEngineReady",
        "isSettingValues",
        "isValid",
        "parent",
        "record",
        "selectedEvents",
        "state",
        "values",
        "views"
      ],
      eventNames: [
        "activeItemChange",
        "afterEventEdit",
        "afterEventSave",
        "beforeActiveItemChange",
        "beforeAssignmentDelete",
        "beforeAssignmentSelectionChange",
        "beforeAutoCreate",
        "beforeCopy",
        "beforeCreateMode",
        "beforeCSVExport",
        "beforeDestroy",
        "beforeDragCreate",
        "beforeDragCreateEnd",
        "beforeDragMove",
        "beforeDragMoveEnd",
        "beforeDragResize",
        "beforeDragResizeEnd",
        "beforeDropExternal",
        "beforeEventDelete",
        "beforeEventEdit",
        "beforeEventEditShow",
        "beforeEventSave",
        "beforeEventSelectionChange",
        "beforeExcelExport",
        "beforeHide",
        "beforePaste",
        "beforePrint",
        "beforeResponsiveStateChange",
        "beforeSetRecord",
        "beforeShow",
        "beforeStateApply",
        "beforeStateSave",
        "catchAll",
        "cellOverflowClick",
        "collapse",
        "contextMenuItem",
        "contextMenuToggleItem",
        "copy",
        "currentTimelineUpdate",
        "dataChange",
        "dateChange",
        "dateRangeChange",
        "dateRangeLoad",
        "dateRangeRequested",
        "dayCellPopulated",
        "dayNumberClick",
        "destroy",
        "dirtyStateChange",
        "dragCreateEnd",
        "dragMoveEnd",
        "dragMoveExternal",
        "dragResizeEnd",
        "dropExternal",
        "emptyCellClick",
        "eventAutoCreated",
        "eventClick",
        "eventContextMenu",
        "eventDblClick",
        "eventEditBeforeSetRecord",
        "eventKeyDown",
        "eventMenuBeforeShow",
        "eventMenuItem",
        "eventMenuShow",
        "eventMouseDown",
        "eventMouseEnter",
        "eventMouseLeave",
        "eventMouseOut",
        "eventMouseOver",
        "eventMouseUp",
        "eventPropagate",
        "expand",
        "focusIn",
        "focusOut",
        "hide",
        "loadOnDemandFail",
        "monthNameClick",
        "navigate",
        "paint",
        "paste",
        "pasteNotAllowed",
        "readOnly",
        "recompose",
        "refresh",
        "resize",
        "responsiveStateChange",
        "scheduleClick",
        "scheduleContextMenu",
        "scheduleDblClick",
        "scheduleMenuBeforeShow",
        "scheduleMenuItem",
        "scheduleMenuShow",
        "scheduleMouseDown",
        "scheduleMouseOut",
        "scheduleMouseOver",
        "scheduleMouseUp",
        "selectionChange",
        "show",
        "sidebarCollapse",
        "sidebarExpand",
        "timeRangeHeaderClick",
        "timeRangeHeaderContextMenu",
        "timeRangeHeaderDblClick",
        "toolClick",
        "viewPaint",
        "weekNumberClick"
      ]
    }, o = {}, s = d(), l = d(/* @__PURE__ */ new Map());
    return f("teleports", l), C(() => {
      const t = E();
      o.value = n.createWidget({
        me: t,
        widgetData: i,
        emit: p,
        element: s.value,
        processCellContent: n.processCellContent,
        processEventContent: n.processEventContent,
        processWidgetContent: n.processWidgetContent,
        hasFrameworkRenderer: n.hasFrameworkRenderer,
        toRaw: b
      }), n.relayStores(t.data, o.value);
      const a = (e, h) => S(() => t.props[e], h);
      n.watchProps(o.value, i, a);
    }), M(() => {
      var t, a;
      (a = (t = o.value) == null ? void 0 : t.destroy) == null || a.call(t);
    }), g({
      instance: o,
      refElement: s,
      teleports: l
    }), (t, a) => (r(), c("div", {
      ref_key: "refElement",
      ref: s
    }, [
      D("div", O, [
        (r(!0), c(y, null, R(l.value.values(), (e) => (r(), u(k, {
          key: e.key,
          to: e.to
        }, [
          (r(), u(w(e.is), x({
            ref_for: !0,
            ref: e.key,
            "data-key": e.key,
            "data-generation": e.generation
          }, e.bind, { "data-vue": "" }, B(e.on)), null, 16, ["data-key", "data-generation"]))
        ], 8, ["to"]))), 128))
      ], 512)
    ], 512));
  }
});
export {
  N as _
};
//# sourceMappingURL=CUIWBIi_.js.map
