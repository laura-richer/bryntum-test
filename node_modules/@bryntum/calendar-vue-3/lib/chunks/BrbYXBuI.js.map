{"version":3,"file":"BrbYXBuI.js","sources":["../../src/components/BryntumProjectCombo.vue"],"sourcesContent":["<!-- Vue 3 wrapper for Bryntum ProjectCombo -->\n\n<template>\n    <div ref=\"refElement\">\n\n    </div>\n</template>\n\n<script setup lang=\"ts\">\n/* eslint-disable no-undef */\n\nimport { getCurrentInstance, onBeforeUnmount, onMounted, provide, ref, watch, toRaw } from 'vue';\n\nimport type { AlignSpec, Base, ChipViewConfig, CollectionCompareOperator, CollectionFilterConfig, Combo, ComboModel, ContainerItemConfig, DataField, Field, FieldContainer, FieldContainerConfig, FieldTriggerConfig, KeyMapConfig, List, ListConfig, MaskConfig, Model, ProjectComboListeners, Rectangle, SchedulerProjectModel, Store, StoreConfig, TabConfig, TooltipConfig, Widget } from '@bryntum/calendar';\nimport { ProjectCombo } from '@bryntum/calendar';\n\nimport { WrapperHelper } from '../helper/WrapperHelper';\n\ndefineProps<{\n    // Configs\n    /**\n     * Element (or element id) to adopt as this Widget's encapsulating element. The widget's\n     * content will be placed inside this element.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-adopt)\n     */\n    adopt ? : HTMLElement|string\n    /**\n     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-align)\n     */\n    align ? : AlignSpec|string\n    /**\n     * When this widget is a child of a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container), it will by default be participating in a\n     * flexbox layout. This config allows you to set this widget's\n     * [align-self](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self) style.\n     */\n    alignSelf ? : string\n    /**\n     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating) and being shown through [showBy](#Core/widget/Widget#function-showBy).*\n     * `true` to show a connector arrow pointing to the align target.\n     */\n    anchor ? : Boolean\n    /**\n     * Element (or the id of an element) to append this widget's element to. Can be configured, or set once at\n     * runtime. To access the element of a rendered widget, see [element](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-element).\n     */\n    appendTo ? : HTMLElement|string\n    /**\n     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject\n     * into an element which will be linked using the `aria-describedby` attribute.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-ariaDescription)\n     */\n    ariaDescription ? : string\n    /**\n     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject as\n     * the `aria-label` attribute.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-ariaLabel)\n     */\n    ariaLabel ? : string\n    /**\n     * The `aria-live` value for this widget.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-ariaLive)\n     * @deprecated Will be removed in 7.0\n     */\n    ariaLive ? : string\n    /**\n     * Sets the native `autocomplete` property of the underlying input element. For more information, please refer to\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n     */\n    autoComplete ? : string\n    /**\n     * Configure as `true` to have the picker expand upon focus enter.\n     */\n    autoExpand ? : Boolean\n    /**\n     * Specify `true` to auto select field contents on focus\n     */\n    autoSelect ? : Boolean\n    /**\n     * Initial text to show in badge.\n     */\n    badge ? : string\n    /**\n     * An object where property names with a truthy value indicate which events should bubble up the ownership\n     * hierarchy when triggered.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-bubbleEvents)\n     */\n    bubbleEvents ? : object\n    /**\n     * Set to `false` to not call onXXX method names (e.g. `onShow`, `onClick`), as an easy way to listen for events.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-callOnFunctions)\n     */\n    callOnFunctions ? : Boolean\n    /**\n     * Configure as `true` to force case matching when filtering the dropdown list based upon the typed value.\n     */\n    caseSensitive ? : Boolean\n    /**\n     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*\n     * Set to `true` to centre the Widget in browser viewport space.\n     */\n    centered ? : Boolean\n    /**\n     * A config object to configure the [ChipView](https://bryntum.com/products/calendar/docs/api/Core/widget/ChipView) to display the\n     * selected value set when [multiSelect](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-multiSelect) is `true`.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-chipView)\n     */\n    chipView ? : ChipViewConfig\n    /**\n     * Show a trigger to clear field, if this field is not [readOnly](https://bryntum.com/products/calendar/docs/api/Core/widget/Field#config-readOnly). The trigger is available\n     * in the [triggers](https://bryntum.com/products/calendar/docs/api/Core/widget/Field#property-triggers) object under the name `clear`. May also be an object which\n     * configures the `clear` [trigger](https://bryntum.com/products/calendar/docs/api/Core/widget/Field#property-triggers).\n     */\n    clearable ? : Boolean|FieldTriggerConfig\n    /**\n     * `true` to clear value typed to a multiselect combo when picker is collapsed\n     */\n    clearTextOnPickerHide ? : Boolean\n    /**\n     * Specify `false` to not clear value typed to a multiselect combo when an item is selected.\n     */\n    clearTextOnSelection ? : Boolean\n    /**\n     * Set to `true` to clear this field when user empties the input element\n     */\n    clearWhenInputEmpty ? : Boolean\n    /**\n     * Custom CSS classes to add to element.\n     * May be specified as a space separated string, or as an object in which property names\n     * with truthy values are used as the class names:\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-cls)\n     */\n    cls ? : string|object\n    config ? : object\n    /**\n     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating) or [positioned](#Core/widget/Widget#config-positioned).*\n     * Element, Widget or Rectangle to which this Widget is constrained.\n     */\n    constrainTo ? : HTMLElement|Widget|Rectangle\n    /**\n     * The configuration for additional items associated to this field. This is typically used to add contextual\n     * fields related to a [checkbox](https://bryntum.com/products/calendar/docs/api/Core/widget/Checkbox) or [radio button](#Core/widget/Radio). See\n     * these classes for examples of nested fields.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-container)\n     */\n    container ? : Record<string, ContainerItemConfig>|ContainerItemConfig[]|FieldContainerConfig|FieldContainer\n    /**\n     * The config controls how the value of nested items are handled when a parent container gets or sets its\n     * [values](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#property-values).\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-containValues)\n     * @param {Core.widget.Field} field Field instance\n     * @returns {boolean}\n     */\n    containValues ? : Boolean|string|((field: Field) => Boolean)\n    /**\n     * Custom CSS classes to add to the [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement).\n     * May be specified as a space separated string, or as an object in which property names\n     * with truthy values are used as the class names:\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-contentElementCls)\n     */\n    contentElementCls ? : string|object\n    /**\n     * If configured as `true`, this means that when an unmatched string is typed into the\n     * combo's input field, and `ENTER`, or the [multiValueSeparator](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-multiValueSeparator) is typed,\n     * a new record will be created using the typed string as the [displayField](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-displayField).\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-createOnUnmatched)\n     * @param {string} name Record name\n     * @param {Core.widget.Combo} combo Combo instance\n     * @returns {Core.data.Model} New record\n     */\n    createOnUnmatched ? : ((name: string, combo: Combo) => Model)|string|Boolean\n    /**\n     * A [DataField](https://bryntum.com/products/calendar/docs/api/Core/data/field/DataField) which describes a field of a [Model](#Core/data/Model)\n     * that we are editing.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-dataField)\n     */\n    dataField ? : DataField\n    /**\n     * Object to apply to elements dataset (each key will be used as a data-attribute on the element)\n     */\n    dataset ? : Record<string, string>\n    /**\n     * The name of the property to set when a single value is to be applied to this Widget. Such as when used\n     * in a grid WidgetColumn, this is the property to which the column's `field` is applied.\n     */\n    defaultBindProperty ? : string\n    /**\n     * Disable or enable the widget. It is similar to [readOnly](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-readOnly) except a disabled widget\n     * cannot be focused, uses a different rendition (usually greyish) and does not allow selecting its value.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-disabled)\n     */\n    disabled ? : Boolean|'inert'\n    /**\n     * Field used as projects title.\n     */\n    displayField ? : string\n    /**\n     * Template function that can be used to customize the displayed value\n     * @param {Core.data.Model} record The record to provide a textual value for\n     * @param {Core.widget.Combo} combo A reference to this Combo\n     * @returns {string,void}\n     */\n    displayValueRenderer ? : (record: Model|ComboModel, combo: Combo) => string|void\n    /**\n     * Controls the placement of this widget when it is added to a [panel's ](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel)\n     * [strips collection](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-strips). Typical values for this config are `'top'`,\n     * `'bottom'`, `'left'`, or `'right'`, which cause the widget to be placed on that side of the panel's\n     * body. Such widgets are called \"edge strips\".\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-dock)\n     */\n    dock ? : 'top'|'bottom'|'left'|'right'|'start'|'end'|'header'|'pre-header'|object\n    /**\n     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*\n     * Set to `true` to be able to drag a widget freely on the page. Or set to an object with a ´handleSelector´\n     * property which controls when a drag should start.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-draggable)\n     */\n    draggable ? : Boolean|{\n        handleSelector?: string\n    }\n    /**\n     * User can edit text in text field (otherwise only pick from attached picker)\n     */\n    editable ? : Boolean\n    /**\n     * An object specifying attributes to assign to the root element of this widget.\n     * Set `null` value to attribute to remove it.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-elementAttributes)\n     */\n    elementAttributes ? : Record<string, string|null>\n    /**\n     * Text to display in the drop down when there are no items in the underlying store\n     */\n    emptyText ? : string\n    /**\n     * A function which creates an array of values for the [filterParamName](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-filterParamName) to pass\n     * any filters to the server upon load.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-encodeFilterParams)\n     * @param {object[]} filters filters\n     * @returns {object[]} array of values\n     */\n    encodeFilterParams ? : (filters: object[]) => object[]\n    extraData ? : any\n    /**\n     * If `false`, filtering will be triggered once you exceed [minChars](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-minChars). To filter only when\n     * hitting Enter key, set this to `true`;\n     */\n    filterOnEnter ? : Boolean\n    /**\n     * The name of an operator type as implemented in [operator](https://bryntum.com/products/calendar/docs/api/Core/util/CollectionFilter#config-operator)\n     * to use when filtering the dropdown list based upon the typed value.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-filterOperator)\n     */\n    filterOperator ? : CollectionCompareOperator\n    /**\n     * If the dropdown is to be populated with a filtered query to a remote server, specify the\n     * name of the parameter to pass the typed string here. By default, the string is simply sent\n     * as the value of the parameter. For special encoding, configure the combo with [encodeFilterParams](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-encodeFilterParams)\n     */\n    filterParamName ? : string\n    /**\n     * When [multiSelect](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-multiSelect) is `true`, you may configure `filterSelected` as\n     * `true` to hide items in the dropdown when they are added to the selection.\n     * It will appear as if the requested item has \"moved\" into the field's\n     * [ChipView](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-chipView).\n     */\n    filterSelected ? : Boolean\n    /**\n     * When this widget is a child of a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container), it will by default be participating in a\n     * flexbox layout. This config allows you to set this widget's\n     * [flex](https://developer.mozilla.org/en-US/docs/Web/CSS/flex) style.\n     * This may be configured as a single number or a `&lt;flex-grow&gt; &lt;flex-shrink&gt; &lt;flex-basis&gt;` format string.\n     * numeric-only values are interpreted as the `flex-grow` value.\n     */\n    flex ? : number|string\n    /**\n     * Set to `true` to move the widget out of the document flow and position it\n     * absolutely in browser viewport space.\n     */\n    floating ? : Boolean\n    /**\n     * Widget's height, used to set element style.height. Either specify a valid height string or a number, which\n     * will get 'px' appended. We recommend using CSS as the primary way to control height, but in some cases\n     * this config is convenient.\n     */\n    height ? : string|number\n    /**\n     * Configure with true to make widget initially hidden.\n     */\n    hidden ? : Boolean\n    /**\n     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-hideAnimation)\n     */\n    hideAnimation ? : Boolean|object\n    /**\n     * By default, the picker is hidden on selection in single select mode, and\n     * remains to allow more selections when [multiSelect](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-multiSelect) is `true`.\n     * Setting this to a `Boolean` value can override that default.\n     */\n    hidePickerOnSelect ? : Boolean\n    /**\n     * Configure as `true` to hide the expand trigger. This is automatically set to `true` if\n     * remote filtering is enabled by setting the [filterParamName](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-filterParamName) config.\n     */\n    hideTrigger ? : Boolean\n    /**\n     * Specify `true` to highlight field after external value changes\n     */\n    highlightExternalChange ? : Boolean\n    /**\n     * An optional string to display inside the input field as an overlay. This can be useful for displaying\n     * a field's units.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-hint)\n     * @param {object} data A data object\n     * @param {Core.widget.Field} data.source A reference to the field instance\n     * @param {any} data.value The current value of the field\n     * @returns {string}\n     */\n    hint ? : string|((data: { source: Field, value: any }) => string)\n    /**\n     * This config is similar to [hint](https://bryntum.com/products/calendar/docs/api/Core/widget/Field#config-hint) except that this config is used to display HTML content.\n     * Since this can allow malicious content to be executed, be sure not to include user-entered data or to\n     * encode such data (see [encodeHtml](https://bryntum.com/products/calendar/docs/api/Core/helper/StringHelper#function-encodeHtml-static)).\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-hintHtml)\n     * @param {object} data A data object\n     * @param {Core.widget.Field} data.source A reference to the field instance\n     * @param {any} data.value The current value of the field\n     * @returns {string}\n     */\n    hintHtml ? : string|((data: { source: Field, value: any }) => string)\n    /**\n     * Widget id, if not specified one will be generated. Also used for lookups through Widget.getById\n     */\n    id ? : string\n    /**\n     * Determines if the widgets read-only state should be controlled by its parent.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-ignoreParentReadOnly)\n     */\n    ignoreParentReadOnly ? : Boolean\n    /**\n     * Set this config to `true` to always display items horizontally along with this field. This assigns an\n     * [hbox](https://bryntum.com/products/calendar/docs/api/Core/widget/layout/Box) as the [layout](#Core/widget/Container#config-layout) to the\n     * [container](https://bryntum.com/products/calendar/docs/api/Core/widget/Field#config-container).\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-inline)\n     */\n    inline ? : Boolean\n    /**\n     * Configure this as `true` to render the dropdown list as a permanently visible list\n     * in the document flow immediately below the input area instead of as a popup.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-inlinePicker)\n     */\n    inlinePicker ? : Boolean\n    /**\n     * Text alignment for the input field.\n     */\n    inputAlign ? : string\n    /**\n     * Sets custom attributes of the underlying input element. For more information, please refer to\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes)\n     */\n    inputAttributes ? : Record<string, string>\n    /**\n     * If you need to use something else than a default `input` element, as the input element, provide the tag\n     * name here. Please note that this is used for advanced usage only, for example when using WebComponents\n     * (custom elements), and that the configured element must fulfil the same contract as a regular input\n     * element.\n     */\n    inputTag ? : string\n    /**\n     * Sets the `type` attribute of the underlying input element (password, hidden, date, color, etc.).\n     */\n    inputType ? : string\n    /**\n     * The width to apply to the `&lt;input&gt;` element. If a number is specified, `px` will be used.\n     */\n    inputWidth ? : string|number\n    /**\n     * Element (or element id) to insert this widget before. If provided, [appendTo](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-appendTo) config is ignored.\n     */\n    insertBefore ? : HTMLElement|string\n    /**\n     * Element (or element id) to append this widget element to, as a first child. If provided, [appendTo](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-appendTo) config is ignored.\n     */\n    insertFirst ? : HTMLElement|string\n    /**\n     * Rows to display in the dropdown (list items).\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-items)\n     */\n    items ? : object[]|string[]|object\n    /**\n     * An object whose keys are the [key](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key) name\n     * and optional modifier prefixes: `'Ctrl+'`, `'Alt+'`, `'Meta+'`, and `'Shift+'` (case-insensitive). The values\n     * are the name of the instance method to call when the keystroke is received.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-keyMap)\n     */\n    keyMap ? : Record<string, KeyMapConfig>\n    /**\n     * The delay in milliseconds to wait after the last keystroke before triggering a change event.\n     * Set to 0 to not trigger change events from keystrokes (listen for input event instead to have\n     * immediate feedback, change will still be triggered on blur).\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-keyStrokeChangeDelay)\n     */\n    keyStrokeChangeDelay ? : number\n    /**\n     * The delay in milliseconds to wait after the last keystroke before filtering the list.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-keyStrokeFilterDelay)\n     */\n    keyStrokeFilterDelay ? : number\n    /**\n     * Label, prepended to field\n     */\n    label ? : string\n    /**\n     * CSS class name or class names to add to any configured [label](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Labelable#config-label)\n     */\n    labelCls ? : string|object\n    /**\n     * Label position, either 'before' the field or 'above' the field\n     */\n    labelPosition ? : 'before'|'above'\n    /**\n     * The labels to add either before or after the input field.\n     * Each label may have the following properties:\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-labels)\n     */\n    labels ? : object[]\n    /**\n     * The width to apply to the `&lt;label&gt;` element. If a number is specified, `px` will be used.\n     */\n    labelWidth ? : string|number\n    /**\n     * CSS class to add to picker\n     */\n    listCls ? : string\n    /**\n     * The listener set for this object.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-listeners)\n     */\n    listeners ? : ProjectComboListeners\n    /**\n     * Template string used to render the list items in the dropdown list\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-listItemTpl)\n     * @param {Core.data.Model} record The record representing the item being rendered\n     * @returns {string,void}\n     */\n    listItemTpl ? : (record: Model|ComboModel) => string|void\n    /**\n     * A class translations of which are used for translating this entity.\n     * This is often used when translations of an item are defined on its container class.\n     * For example:\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-localeClass)\n     */\n    localeClass ? : typeof Base\n    /**\n     * Set to `false` to disable localization of this object.\n     */\n    localizable ? : Boolean\n    /**\n     * List of properties which values should be translated automatically upon a locale applying.\n     * In case there is a need to localize not typical value (not a String value or a field with re-defined setter/getter),\n     * you could use 'localeKey' meta configuration.\n     * Example:\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-localizableProperties)\n     */\n    localizableProperties ? : string[]\n    /**\n     * Widget's margin. This may be configured as a single number or a `TRBL` format string.\n     * numeric-only values are interpreted as pixels.\n     */\n    margin ? : number|string\n    /**\n     * This config object contains the defaults for the [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) created for the\n     * [masked](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-masked) config. Any properties specified in the `masked` config will override these\n     * values.\n     */\n    maskDefaults ? : MaskConfig\n    /**\n     * Set to `true` to apply the default mask to the widget. Alternatively, this can be the mask message or a\n     * [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) config object.\n     */\n    masked ? : Boolean|string|MaskConfig\n    /**\n     * The element's maxHeight. Can be either a String or a Number (which will have 'px' appended). Note that\n     * like [height](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-height), *reading* the value will return the numeric value in pixels.\n     */\n    maxHeight ? : string|number\n    /**\n     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-maximizeOnMobile)\n     */\n    maximizeOnMobile ? : number|string\n    /**\n     * The max number of characters for the input field\n     */\n    maxLength ? : number\n    /**\n     * The elements maxWidth. Can be either a String or a Number (which will have 'px' appended). Note that\n     * like [width](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.\n     */\n    maxWidth ? : string|number\n    /**\n     * The minimum string length to trigger the filtering, only relevant when [editable](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-editable) is `true`.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-minChars)\n     */\n    minChars ? : number\n    /**\n     * The element's minHeight. Can be either a String or a Number (which will have 'px' appended). Note that\n     * like [height](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-height), *reading* the value will return the numeric value in pixels.\n     */\n    minHeight ? : string|number\n    /**\n     * The min number of characters for the input field\n     */\n    minLength ? : number\n    /**\n     * The elements minWidth. Can be either a String or a Number (which will have 'px' appended). Note that\n     * like [width](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.\n     */\n    minWidth ? : string|number\n    /**\n     * When this is configured as `true` a [ResizeObserver](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)\n     * is used to monitor this element for size changes caused by either style manipulation, or by CSS\n     * layout.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-monitorResize)\n     */\n    monitorResize ? : Boolean\n    /**\n     * Set to `true` to allow selection of multiple values from the dropdown list.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-multiSelect)\n     */\n    multiSelect ? : Boolean\n    /**\n     * A key value which, when typed in a [multiSelect](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-multiSelect) Combo, selects the\n     * currently active item in the picker, and clears the input field ready for another\n     * match to be typed.\n     */\n    multiValueSeparator ? : string\n    /**\n     * Name of the field which is used as a key to get/set values from/to the field.\n     * Used prior to [ref](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-ref) and [id](#Core/widget/Widget#config-id) in\n     * [Container.values](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#property-values).\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-name)\n     */\n    name ? : string\n    /**\n     * This implies that the picker will display an anchor pointer, but also means that the picker will align closer\n     * to the input field so that the pointer pierces the [pickerAlignElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-pickerAlignElement)\n     */\n    overlayAnchor ? : Boolean\n    /**\n     * The owning Widget of this Widget. If this Widget is directly contained (that is, it is one of the\n     * [items](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#property-items) of a Container), this config will be ignored. In this case\n     * the owner is <strong>always</strong> the encapsulating Container.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-owner)\n     */\n    owner ? : Widget\n    /**\n     * Configuration object for the [picker](https://bryntum.com/products/calendar/docs/api/Core/widget/List) on initialization. Returns the\n     * [picker](https://bryntum.com/products/calendar/docs/api/Core/widget/List) instance at runtime.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-picker)\n     */\n    picker ? : ListConfig|List\n    /**\n     * The name of the element property to which the picker should size and align itself.\n     */\n    pickerAlignElement ? : string\n    /**\n     * Width of picker, defaults to this combo's [pickerAlignElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-pickerAlignElement) width\n     */\n    pickerWidth ? : number|string\n    /**\n     * Text to display in empty field.\n     */\n    placeholder ? : string\n    /**\n     * Set to `true` when a widget is rendered into another widget's [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement), but must\n     * not participate in the standard layout of that widget, and must be positioned relatively to that\n     * widget's [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement).\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-positioned)\n     */\n    positioned ? : Boolean\n    /**\n     * Prevent tooltip from being displayed on touch devices. Useful for example for buttons that display a\n     * menu on click etc, since the tooltip would be displayed at the same time.\n     */\n    preventTooltipOnTouch ? : Boolean\n    /**\n     * Optionally a [Filter](https://bryntum.com/products/calendar/docs/api/Core/util/CollectionFilter) config object which the combo should use for\n     * filtering using the typed value.\n     * This may use a `filterBy` property to test its `value` against any field in the passed record.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-primaryFilter)\n     */\n    primaryFilter ? : CollectionFilterConfig\n    /**\n     * Project to reconfigure when picking an item.\n     */\n    project ? : SchedulerProjectModel|object\n    /**\n     * Makes the field unmodifiable by user action. The input area is not editable, and triggers\n     * are unresponsive.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-readOnly)\n     */\n    readOnly ? : Boolean\n    relayStoreEvents ? : Boolean\n    /**\n     * Configure as `true` to indicate that a `null` field value is to be marked as invalid. This will\n     * optionally append a * to the field label if [showRequiredIndicator](https://bryntum.com/products/calendar/docs/api/Core/widget/Field#property-showRequiredIndicator) is set.\n     */\n    required ? : Boolean\n    /**\n     * If this field is not [readOnly](https://bryntum.com/products/calendar/docs/api/Core/widget/Field#config-readOnly), then setting this option means that pressing\n     * the `ESCAPE` key after editing the field will revert the field to the value it had when\n     * the user focused the field. If the field is *not* changed from when focused, the [clearable](https://bryntum.com/products/calendar/docs/api/Core/widget/Field#config-clearable)\n     * behaviour will be activated.\n     */\n    revertOnEscape ? : Boolean\n    /**\n     * Configure as `true` to have the component display a translucent ripple when its\n     * [focusElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-focusElement), or [element](#Core/widget/Widget#property-element) is tapped <em>if the\n     * current theme supports ripples</em>. Out of the box, only the Material theme supports ripples.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-ripple)\n     */\n    ripple ? : Boolean|{\n        delegate?: string\n        color?: string\n        radius?: number\n        clip?: string\n    }\n    /**\n     * If you are rendering this widget to a shadow root inside a web component, set this config to the shadowRoot. If not inside a web component, set it to `document.body`\n     */\n    rootElement ? : ShadowRoot|HTMLElement\n    /**\n     * This may be configured as `true` to make the widget's element use the `direction:rtl` style.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-rtl)\n     */\n    rtl ? : Boolean\n    /**\n     * Defines what to do if document is scrolled while Widget is visible (only relevant when floating is set to `true`).\n     * Valid values: ´null´: do nothing, ´hide´: hide the widget or ´realign´: realign to the target if possible.\n     */\n    scrollAction ? : 'hide'|'realign'|null\n    /**\n     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-showAnimation)\n     */\n    showAnimation ? : Boolean|object\n    /**\n     * `true` to automatically display a * after the label for this field when it is [required](https://bryntum.com/products/calendar/docs/api/Core/widget/Field#property-required).\n     */\n    showRequiredIndicator ? : string\n    /**\n     * Set to `false` to not show the tooltip when this widget is [disabled](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-disabled)\n     */\n    showTooltipWhenDisabled ? : Boolean\n    /**\n     * Set to `true`, completely bypasses validation logic (could be userful if your field is not `editable`\n     * to the user).\n     */\n    skipValidation ? : Boolean\n    /**\n     * Sets the native `spellcheck` property of the underlying input element. For more information, please refer to\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/spellcheck)\n     */\n    spellCheck ? : Boolean\n    /**\n     * Store used to populate items. Also accepts a Store config object\n     */\n    store ? : Store|StoreConfig\n    /**\n     * A configuration for the [tab](https://bryntum.com/products/calendar/docs/api/Core/widget/Tab) created for this widget when it is placed in a\n     * [TabPanel](https://bryntum.com/products/calendar/docs/api/Core/widget/TabPanel). For example, this config can be used to control the icon of the `tab` for\n     * this widget:\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-tab)\n     */\n    tab ? : Boolean|TabConfig\n    /**\n     * The tab index of the input field or fields, or `null` for natural tab order (recommended). Setting to `0`\n     * is equivalent to natural tab order, but is unnecessary for fields since they are naturally tabbable\n     * (i.e., accessible via the TAB key). Setting to `-1` disables tabbability but allows for focus to be set\n     * to the element programmatically.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-tabIndex)\n     */\n    tabIndex ? : number\n    /**\n     * Text alignment: 'left', 'center' or 'right'. Also accepts direction neutral 'start' and 'end'.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-textAlign)\n     */\n    textAlign ? : 'left'|'center'|'right'|'start'|'end'\n    /**\n     * A title to display for the widget. Only in effect when inside a container that uses it (such as TabPanel)\n     */\n    title ? : string\n    /**\n     * Tooltip for the widget, either as a string or as a Tooltip config object.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-tooltip)\n     */\n    tooltip ? : string|TooltipConfig|null\n    /**\n     * How to query the store upon click of the expand trigger. Specify one of these values:\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-triggerAction)\n     */\n    triggerAction ? : 'all'|'last'|null\n    /**\n     * The triggers to add either before or after the input field. Each property name is the reference by which\n     * an instantiated Trigger Widget may be retrieved from the live `triggers` property.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-triggers)\n     */\n    triggers ? : Record<string, FieldTriggerConfig>|Record<string, Widget>\n    type ? : 'projectcombo'\n    /**\n     * Custom CSS class name suffixes to apply to the elements rendered by this widget. This may be specified\n     * as a space separated string, an array of strings, or as an object in which property names with truthy\n     * values are used as the class names.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-ui)\n     */\n    ui ? : string|object\n    /**\n     * `true` to cause the field to be in an invalid state while the typed filter string does not match a record in the store.\n     */\n    validateFilter ? : Boolean\n    /**\n     * Set to `false` to not highlight a field as invalid while typing, to instead show it on ENTER key press\n     * or similar.\n     */\n    validateOnInput ? : Boolean\n    /**\n     * The initial value of this Combo box. In single select mode (default) it's a simple string value, for\n     * [multiSelect](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-multiSelect) mode, it should be an array of record ids.\n     */\n    value ? : string|number|string[]|number[]\n    /**\n     * Field used as projects load url.\n     */\n    valueField ? : string\n    /**\n     * A widgets weight determines its position among siblings when added to a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container).\n     * Higher weights go further down.\n     */\n    weight ? : number\n    /**\n     * Widget's width, used to set element style.width. Either specify a valid width string or a number, which\n     * will get 'px' appended. We recommend using CSS as the primary way to control width, but in some cases\n     * this config is convenient.\n     */\n    width ? : string|number\n    /**\n     * The x position for the widget.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-x)\n     */\n    x ? : number\n    /**\n     * The y position for the widget.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#config-y)\n     */\n    y ? : number\n\n}>();\n\nconst emit = defineEmits<{\n    /**\n     * The default action was performed (an item in the list was selected)\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.widget.Combo} params.event.source The combo\n     * @param {any} params.event.value The [value](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-valueField) of the selected record\n     * @param {Core.data.Model} params.event.record Selected record\n     * @param {Core.data.Model[]} params.event.records Selected records as an array if [multiSelect](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-multiSelect) is `true`\n     * @param {boolean} params.event.userAction `true` if the value change is due to user interaction\n     */\n    (e: 'action', params: ((event: { source: Combo, value: any, record: Model, records: Model[], userAction: boolean }) => void)|string): void\n    /**\n     * Fires before an object is destroyed.\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.Base} params.event.source The Object that is being destroyed.\n     */\n    (e: 'beforeDestroy', params: ((event: { source: Base }) => void)|string): void\n    /**\n     * Triggered before a widget is hidden. Return `false` to prevent the action.\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.widget.Widget} params.event.source The widget being hidden.\n     */\n    (e: 'beforeHide', params: ((event: { source: Widget }) => Promise<boolean>|boolean|void)|string): Promise<boolean>|boolean|void\n    /**\n     * Triggered before a widget is shown. Return `false` to prevent the action.\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.widget.Widget,any} params.event.source The widget being shown\n     */\n    (e: 'beforeShow', params: ((event: { source: Widget|any }) => Promise<boolean>|boolean|void)|string): Promise<boolean>|boolean|void\n    /**\n     * Fires when any other event is fired from the object.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#event-catchAll)\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {{[key: string]: any, type: string}} params.event.event The Object that contains event details\n     * @param {string} params.event.event.type The type of the event which is caught by the listener\n     */\n    (e: 'catchAll', params: ((event: {[key: string]: any, type: string}) => void)|string): void\n    /**\n     * Fired when this field's value changes.\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.widget.Field,any} params.event.source This Field\n     * @param {string,number,boolean,any} params.event.value This field's value\n     * @param {string,number,boolean,any} params.event.oldValue This field's previous value\n     * @param {boolean} params.event.valid True if this field is in a valid state\n     * @param {Event} params.event.event The triggering DOM event if any\n     * @param {boolean} params.event.userAction Triggered by user taking an action (`true`) or by setting a value (`false`)\n     * @param {boolean} params.event.checked\n     */\n    (e: 'change', params: ((event: { source: Field|any, value: string|number|boolean|any, oldValue: string|number|boolean|any, valid: boolean, event: Event, userAction: boolean, checked: boolean }) => void)|string): void\n    /**\n     * Fired when this field is [cleared](https://bryntum.com/products/calendar/docs/api/Core/widget/Field#function-clear).\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#event-clear)\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.widget.Field,any} params.event.source This Field\n     */\n    (e: 'clear', params: ((event: { source: Field|any }) => void)|string): void\n    /**\n     * Fires when an object is destroyed.\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.Base} params.event.source The Object that is being destroyed.\n     */\n    (e: 'destroy', params: ((event: { source: Base }) => void)|string): void\n    /**\n     * Fired when focus enters this Widget.\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.widget.Widget} params.event.source This Widget\n     * @param {HTMLElement} params.event.fromElement The element which lost focus.\n     * @param {HTMLElement} params.event.toElement The element which gained focus.\n     * @param {Core.widget.Widget} params.event.fromWidget The widget which lost focus.\n     * @param {Core.widget.Widget} params.event.toWidget The widget which gained focus.\n     * @param {boolean} params.event.backwards `true` if the `toElement` is before the `fromElement` in document order.\n     */\n    (e: 'focusIn', params: ((event: { source: Widget, fromElement: HTMLElement, toElement: HTMLElement, fromWidget: Widget, toWidget: Widget, backwards: boolean }) => void)|string): void\n    /**\n     * Fired when focus exits this Widget's ownership tree. This is different from a `blur` event.\n     * focus moving from within this Widget's ownership tree, even if there are floating widgets\n     * will not trigger this event. This is when focus exits this widget completely.\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.widget.Widget} params.event.source This Widget\n     * @param {HTMLElement} params.event.fromElement The element which lost focus.\n     * @param {HTMLElement} params.event.toElement The element which gained focus.\n     * @param {Core.widget.Widget} params.event.fromWidget The widget which lost focus.\n     * @param {Core.widget.Widget} params.event.toWidget The widget which gained focus.\n     * @param {boolean} params.event.backwards `true` if the `toElement` is before the `fromElement` in document order.\n     */\n    (e: 'focusOut', params: ((event: { source: Widget, fromElement: HTMLElement, toElement: HTMLElement, fromWidget: Widget, toWidget: Widget, backwards: boolean }) => void)|string): void\n    /**\n     * Triggered after a widget was hidden\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.widget.Widget} params.event.source The widget\n     */\n    (e: 'hide', params: ((event: { source: Widget }) => void)|string): void\n    /**\n     * User typed into the field. Please note that the value attached to this event is the raw input field value and\n     * not the combos value\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.widget.Combo} params.event.source The combo.\n     * @param {string} params.event.value Raw input value\n     * @param {Event} params.event.event The triggering DOM event if any.\n     */\n    (e: 'input', params: ((event: { source: Combo, value: string, event: Event }) => void)|string): void\n    /**\n     * Triggered when a widget which had been in a non-visible state for any reason\n     * achieves visibility.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ProjectCombo#event-paint)\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.widget.Widget} params.event.source The widget being painted.\n     * @param {boolean} params.event.firstPaint `true` if this is the first paint.\n     */\n    (e: 'paint', params: ((event: { source: Widget, firstPaint: boolean }) => void)|string): void\n    /**\n     * Fired when a Widget's read only state is toggled\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {boolean} params.event.readOnly Read only or not\n     */\n    (e: 'readOnly', params: ((event: { readOnly: boolean }) => void)|string): void\n    /**\n     * This event is fired after a widget's elements have been synchronized due to a direct or indirect call\n     * to [recompose](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#function-recompose), if this results in some change to the widget's rendered DOM elements.\n     */\n    (e: 'recompose', params: (() => void)|string): void\n    /**\n     * Fired when the encapsulating element of a Widget resizes *only when [monitorResize](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-monitorResize) is `true`*.\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.widget.Widget} params.event.source This Widget\n     * @param {number} params.event.width The new width\n     * @param {number} params.event.height The new height\n     * @param {number} params.event.oldWidth The old width\n     * @param {number} params.event.oldHeight The old height\n     */\n    (e: 'resize', params: ((event: { source: Widget, width: number, height: number, oldWidth: number, oldHeight: number }) => void)|string): void\n    /**\n     * An item in the list was selected\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.widget.Combo} params.event.source The combo\n     * @param {Core.data.Model} params.event.record Selected record\n     * @param {Core.data.Model[]} params.event.records Selected records as an array if [multiSelect](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-multiSelect) is `true`\n     * @param {boolean} params.event.userAction `true` if the value change is due to user interaction\n     */\n    (e: 'select', params: ((event: { source: Combo, record: Model, records: Model[], userAction: boolean }) => void)|string): void\n    /**\n     * Triggered after a widget is shown.\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.widget.Widget} params.event.source The widget\n     */\n    (e: 'show', params: ((event: { source: Widget }) => void)|string): void\n    /**\n     * User clicked one of this field's [triggers](https://bryntum.com/products/calendar/docs/api/Core/widget/Field#property-triggers)\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Core.widget.Field,any} params.event.source This field\n     * @param {Core.widget.Widget} params.event.trigger The trigger activated by click or touch tap.\n     */\n    (e: 'trigger', params: ((event: { source: Field|any, trigger: Widget }) => void)|string): void\n}>();\n\nconst widgetData = {\n    instanceClass : ProjectCombo,\n    instanceName  : 'ProjectCombo',\n\n    configNames   : [\n        'adopt',\n        'align',\n        'anchor',\n        'ariaDescription',\n        'ariaLabel',\n        'autoComplete',\n        'autoExpand',\n        'autoSelect',\n        'bubbleEvents',\n        'callOnFunctions',\n        'caseSensitive',\n        'centered',\n        'chipView',\n        'clearable',\n        'clearTextOnPickerHide',\n        'clearTextOnSelection',\n        'clearWhenInputEmpty',\n        'config',\n        'constrainTo',\n        'container',\n        'containValues',\n        'contentElementCls',\n        'createOnUnmatched',\n        'dataField',\n        'defaultBindProperty',\n        'displayField',\n        'displayValueRenderer',\n        'dock',\n        'draggable',\n        'elementAttributes',\n        'emptyText',\n        'encodeFilterParams',\n        'filterOnEnter',\n        'filterParamName',\n        'filterSelected',\n        'floating',\n        'hideAnimation',\n        'hidePickerOnSelect',\n        'hideTrigger',\n        'highlightExternalChange',\n        'hint',\n        'hintHtml',\n        'ignoreParentReadOnly',\n        'inline',\n        'inlinePicker',\n        'inputAlign',\n        'inputAttributes',\n        'inputTag',\n        'inputType',\n        'inputWidth',\n        'items',\n        'keyStrokeChangeDelay',\n        'keyStrokeFilterDelay',\n        'labelCls',\n        'labelPosition',\n        'labels',\n        'labelWidth',\n        'listCls',\n        'listeners',\n        'listItemTpl',\n        'localeClass',\n        'localizable',\n        'localizableProperties',\n        'maskDefaults',\n        'masked',\n        'maxLength',\n        'minChars',\n        'minLength',\n        'monitorResize',\n        'multiValueSeparator',\n        'name',\n        'overlayAnchor',\n        'owner',\n        'pickerAlignElement',\n        'pickerWidth',\n        'positioned',\n        'preventTooltipOnTouch',\n        'primaryFilter',\n        'project',\n        'relayStoreEvents',\n        'revertOnEscape',\n        'ripple',\n        'rootElement',\n        'scrollAction',\n        'showAnimation',\n        'showTooltipWhenDisabled',\n        'skipValidation',\n        'spellCheck',\n        'tab',\n        'tabIndex',\n        'textAlign',\n        'title',\n        'triggerAction',\n        'type',\n        'ui',\n        'validateFilter',\n        'validateOnInput',\n        'valueField',\n        'weight'\n    ],\n    propertyConfigNames : [\n        'alignSelf',\n        'appendTo',\n        'ariaLive',\n        'badge',\n        'cls',\n        'dataset',\n        'disabled',\n        'editable',\n        'extraData',\n        'filterOperator',\n        'flex',\n        'height',\n        'hidden',\n        'id',\n        'insertBefore',\n        'insertFirst',\n        'keyMap',\n        'label',\n        'margin',\n        'maxHeight',\n        'maximizeOnMobile',\n        'maxWidth',\n        'minHeight',\n        'minWidth',\n        'multiSelect',\n        'onAction',\n        'onBeforeDestroy',\n        'onBeforeHide',\n        'onBeforeShow',\n        'onCatchAll',\n        'onChange',\n        'onClear',\n        'onDestroy',\n        'onFocusIn',\n        'onFocusOut',\n        'onHide',\n        'onInput',\n        'onPaint',\n        'onReadOnly',\n        'onRecompose',\n        'onResize',\n        'onSelect',\n        'onShow',\n        'onTrigger',\n        'picker',\n        'placeholder',\n        'readOnly',\n        'required',\n        'rtl',\n        'showRequiredIndicator',\n        'store',\n        'tooltip',\n        'triggers',\n        'value',\n        'width',\n        'x',\n        'y'\n    ],\n    propertyNames : [\n        'anchorSize',\n        'content',\n        'focusVisible',\n        'formula',\n        'html',\n        'input',\n        'parent',\n        'scrollable'\n    ],\n    eventNames : [\n        'action',\n        'beforeDestroy',\n        'beforeHide',\n        'beforeShow',\n        'catchAll',\n        'change',\n        'clear',\n        'destroy',\n        'focusIn',\n        'focusOut',\n        'hide',\n        'input',\n        'paint',\n        'readOnly',\n        'recompose',\n        'resize',\n        'select',\n        'show',\n        'trigger'\n    ]\n};\n\nconst instance: {\n    value?: ProjectCombo\n} = {};\n\nconst refElement = ref<HTMLDivElement>()!;\n// Storage for teleports (in-cell Vue component instances) automatically renderer by template\nconst teleports = ref(new Map());\n\n// Provide teleports for processCellContent\nprovide('teleports', teleports);\n\nonMounted(() => {\n\n    const me = getCurrentInstance()!;\n\n    instance.value = WrapperHelper.createWidget<typeof ProjectCombo>({\n        me,\n        widgetData,\n        emit,\n        element : refElement.value!,\n        toRaw\n    });\n\n    const watcher = (prop: string, callback: any) => watch(() => me.props[prop], callback);\n    WrapperHelper.watchProps(instance.value, widgetData, watcher);\n});\n\nonBeforeUnmount(() => {\n    // @ts-ignore\n    instance.value?.destroy?.();\n});\n\ndefineExpose({\n    instance,\n    refElement,\n    teleports\n});\n\n</script>\n"],"names":["emit","__emit","widgetData","ProjectCombo","instance","refElement","ref","teleports","provide","onMounted","me","getCurrentInstance","WrapperHelper","toRaw","watcher","prop","callback","watch","onBeforeUnmount","_b","_a","__expose"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAizBA,UAAMA,IAAOC,GAkMPC,IAAa;AAAA,MACf,eAAgBC;AAAA,MAChB,cAAgB;AAAA,MAEhB,aAAgqBAAsB;AAAA,QACleAAgB;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,YAAa;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA;AAAA,IAER,GAEMC,IAEF,CAAC,GAECC,IAAaC,EAAoB,GAEjCC,IAAYD,EAAQ,oBAAA,KAAK;AAG/B,WAAAE,EAAQ,aAAaD,CAAS,GAE9BE,EAAU,MAAM;AAEZ,YAAMC,IAAKC,EAAmB;AAErB,MAAAP,EAAA,QAAQQ,EAAc,aAAkC;AAAA,QAC7D,IAAAF;AAAA,QACA,YAAAR;AAAA,QACA,MAAAF;AAAA,QACA,SAAUK,EAAW;AAAA,QACrB,OAAAQ;AAAA,MAAA,CACH;AAEK,YAAAC,IAAU,CAACC,GAAcC,MAAkBC,EAAM,MAAMP,EAAG,MAAMK,CAAI,GAAGC,CAAQ;AACrF,MAAAJ,EAAc,WAAWR,EAAS,OAAOF,GAAYY,CAAO;AAAA,IAAA,CAC/D,GAEDI,EAAgB,MAAM;;AAElB,OAAAC,KAAAC,IAAAhB,EAAS,UAAT,gBAAAgB,EAAgB,YAAhB,QAAAD,EAAA,KAAAC;AAAA,IAA0B,CAC7B,GAEYC,EAAA;AAAA,MACT,UAAAjB;AAAA,MACA,YAAAC;AAAA,MACA,WAAAE;AAAA,IAAA,CACH;;;;;;"}