import type { AlignSpec, Base, CollectionFilterConfig, Container, ContainerItemConfig, ContainerLayoutConfig, DomConfig, FieldFilterPicker, FieldFilterPickerConfig, FieldFilterPickerGroupListeners, FieldOption, KeyMapConfig, MaskConfig, MenuItemConfig, Model, Rectangle, Scroller, ScrollerConfig, Store, TabConfig, ToolbarItems, TooltipConfig, VueConfig, Widget } from '@bryntum/calendar';
import { FieldFilterPickerGroup } from '@bryntum/calendar';
declare const _default: import("vue").DefineComponent<__VLS_TypePropsToRuntimeProps<{
    /**
     * Sets the text displayed in the 'add filter' button if one is present.
     */
    addFilterButtonText?: string | undefined;
    /**
     * Element (or element id) to adopt as this Widget's encapsulating element. The widget's
     * content will be placed inside this element.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-adopt)
     */
    adopt?: string | HTMLElement | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-align)
     */
    align?: string | AlignSpec | undefined;
    /**
     * When this widget is a child of a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container), it will by default be participating in a
     * flexbox layout. This config allows you to set this widget's
     * [align-self](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self) style.
     */
    alignSelf?: string | undefined;
    /**
     * Optional array of field names that are allowed as selectable properties for filters.
     * This should be a subset of the field names found in the [store](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-store). When supplied,
     * only the named fields will be shown in the property selector combo.
     */
    allowedFieldNames?: string[] | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating) and being shown through [showBy](#Core/widget/Widget#function-showBy).*
     * `true` to show a connector arrow pointing to the align target.
     */
    anchor?: Boolean | undefined;
    /**
     * Element (or the id of an element) to append this widget's element to. Can be configured, or set once at
     * runtime. To access the element of a rendered widget, see [element](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-element).
     */
    appendTo?: string | HTMLElement | undefined;
    /**
     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject
     * into an element which will be linked using the `aria-describedby` attribute.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-ariaDescription)
     */
    ariaDescription?: string | undefined;
    /**
     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject as
     * the `aria-label` attribute.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-ariaLabel)
     */
    ariaLabel?: string | undefined;
    /**
     * The `aria-live` value for this widget.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-ariaLive)
     * @deprecated Will be removed in 7.0
     */
    ariaLive?: string | undefined;
    /**
     * Update assigned [record](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#config-record) automatically on field changes
     */
    autoUpdateRecord?: Boolean | undefined;
    /**
     * An object where property names with a truthy value indicate which events should bubble up the ownership
     * hierarchy when triggered.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-bubbleEvents)
     */
    bubbleEvents?: object | undefined;
    /**
     * Set to `false` to not call onXXX method names (e.g. `onShow`, `onClick`), as an easy way to listen for events.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-callOnFunctions)
     */
    callOnFunctions?: Boolean | undefined;
    /**
     * Optional predicate that returns whether a given filter can be deleted. When `canDeleteFilter` is provided,
     * it will be called for each filter and will not show the delete button for those for which the
     * function returns `false`.
     * @param {any} filter filter for checking
     * @returns {boolean} truthy value if filter can be deleted
     */
    canDeleteFilter?: ((filter: any) => Boolean) | undefined;
    /**
     * Optional predicate that returns whether a given filter can be managed by this widget. When `canManageFilter`
     * is provided, it will be used to decide whether to display filters found in the configured
     * [store](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-store).
     * @param {any} filter filter for checking
     * @returns {boolean} truthy value if filter can be managed
     */
    canManageFilter?: ((filter: any) => Boolean) | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * Set to `true` to centre the Widget in browser viewport space.
     */
    centered?: Boolean | undefined;
    /**
     * Custom CSS classes to add to element.
     * May be specified as a space separated string, or as an object in which property names
     * with truthy values are used as the class names:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-cls)
     */
    cls?: string | object | undefined;
    config?: object | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating) or [positioned](#Core/widget/Widget#config-positioned).*
     * Element, Widget or Rectangle to which this Widget is constrained.
     */
    constrainTo?: Widget | HTMLElement | Rectangle | undefined;
    /**
     * The HTML content that coexists with sibling elements which may have been added to the
     * [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement) by plugins and features.
     * When specifying html, this widget's element will also have the [htmlCls](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-htmlCls)
     * class added to its classList, to allow targeted styling.
     */
    content?: string | undefined;
    /**
     * Custom CSS classes to add to the [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement).
     * May be specified as a space separated string, or as an object in which property names
     * with truthy values are used as the class names:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-contentElementCls)
     */
    contentElementCls?: string | object | undefined;
    /**
     * Object to apply to elements dataset (each key will be used as a data-attribute on the element)
     */
    dataset?: Record<string, string> | undefined;
    /**
     * The date format string used to display dates when using the 'is one of' / 'is not one of' operators with a date
     * field. Defaults to the current locale's `FieldFilterPicker.dateFormat` value.
     */
    dateFormat?: string | undefined;
    /**
     * The name of the property to set when a single value is to be applied to this Widget. Such as when used
     * in a grid WidgetColumn, this is the property to which the column's `field` is applied.
     */
    defaultBindProperty?: string | undefined;
    /**
     * A [query](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#function-query) selector function which can identify the descendant widget to which
     * focus should be directed by default.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-defaultFocus)
     * @param {Core.widget.Widget} widget Widget passed to method
     * @returns {boolean} truthy value if widget is the default one
     */
    defaultFocus?: string | ((widget: Widget) => Boolean) | undefined;
    /**
     * A config object containing default settings to apply to all child widgets.
     */
    defaults?: ContainerItemConfig | undefined;
    /**
     * Whether the picker group is disabled.
     */
    disabled?: Boolean | undefined;
    /**
     * Controls the placement of this widget when it is added to a [panel's ](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel)
     * [strips collection](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-strips). Typical values for this config are `'top'`,
     * `'bottom'`, `'left'`, or `'right'`, which cause the widget to be placed on that side of the panel's
     * body. Such widgets are called "edge strips".
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-dock)
     */
    dock?: object | "top" | "bottom" | "left" | "right" | "start" | "end" | "header" | "pre-header" | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * Set to `true` to be able to drag a widget freely on the page. Or set to an object with a ´handleSelector´
     * property which controls when a drag should start.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-draggable)
     */
    draggable?: Boolean | {
        handleSelector?: string | undefined;
    } | undefined;
    /**
     * An object specifying attributes to assign to the root element of this widget.
     * Set `null` value to attribute to remove it.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-elementAttributes)
     */
    elementAttributes?: Record<string, string | null> | undefined;
    extraData?: any;
    /**
     * Dictionary of [FieldOption](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPicker#typedef-FieldOption) representing the fields against which filters can be defined,
     * keyed by field name.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-fields)
     */
    fields?: Record<string, FieldOption> | undefined;
    /**
     * Array of [CollectionFilter](https://bryntum.com/products/calendar/docs/api/Core/util/CollectionFilter) configuration objects. One
     * [FieldFilterPicker](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPicker) will be created
     * for each object in the array.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-filters)
     */
    filters?: CollectionFilterConfig[] | undefined;
    /**
     * When this widget is a child of a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container), it will by default be participating in a
     * flexbox layout. This config allows you to set this widget's
     * [flex](https://developer.mozilla.org/en-US/docs/Web/CSS/flex) style.
     * This may be configured as a single number or a `&lt;flex-grow&gt; &lt;flex-shrink&gt; &lt;flex-basis&gt;` format string.
     * numeric-only values are interpreted as the `flex-grow` value.
     */
    flex?: string | number | undefined;
    /**
     * Set to `true` to move the widget out of the document flow and position it
     * absolutely in browser viewport space.
     */
    floating?: Boolean | undefined;
    /**
     * Optional function that returns [FieldFilterPicker](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPicker) configuration properties for
     * a given filter. When `getFieldFilterPickerConfig` is provided, it will be called for each filter and the returned
     * object will be merged with the configuration properties for the individual
     * [FieldFilterPicker](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPicker) representing that filter.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-getFieldFilterPickerConfig)
     * @param {CollectionFilterConfig} filter The filter to be displayed in the FieldFilterPicker being configured
     * @returns {FieldFilterPickerConfig}
     */
    getFieldFilterPickerConfig?: ((filter: CollectionFilterConfig) => FieldFilterPickerConfig) | undefined;
    /**
     * Widget's height, used to set element style.height. Either specify a valid height string or a number, which
     * will get 'px' appended. We recommend using CSS as the primary way to control height, but in some cases
     * this config is convenient.
     */
    height?: string | number | undefined;
    /**
     * Configure with true to make widget initially hidden.
     */
    hidden?: Boolean | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-hideAnimation)
     */
    hideAnimation?: object | Boolean | undefined;
    /**
     * Specify `true` to make this container hide when it has no visible children (Either empty
     * or all children hidden).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-hideWhenEmpty)
     */
    hideWhenEmpty?: Boolean | undefined;
    /**
     * The HTML to display initially or a function returning the markup (called at widget construction time).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-html)
     * @param {Core.widget.Widget} widget The calling Widget
     * @returns {string}
     */
    html?: string | VueConfig | DomConfig | DomConfig[] | ((widget: Widget) => string) | undefined;
    /**
     * The CSS class(es) to add when HTML content is being applied to this widget.
     */
    htmlCls?: string | object | undefined;
    /**
     * Widget id, if not specified one will be generated. Also used for lookups through Widget.getById
     */
    id?: string | undefined;
    /**
     * Determines if the widgets read-only state should be controlled by its parent.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-ignoreParentReadOnly)
     */
    ignoreParentReadOnly?: Boolean | undefined;
    /**
     * Element (or element id) to insert this widget before. If provided, [appendTo](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-appendTo) config is ignored.
     */
    insertBefore?: string | HTMLElement | undefined;
    /**
     * Element (or element id) to append this widget element to, as a first child. If provided, [appendTo](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-appendTo) config is ignored.
     */
    insertFirst?: string | HTMLElement | undefined;
    /**
     * An optional CSS class to add to child items of this container.
     */
    itemCls?: string | undefined;
    /**
     * An object containing typed child widget config objects or Widgets. May also be specified
     * as an array.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-items)
     */
    items?: (Widget | ContainerItemConfig | MenuItemConfig)[] | Record<string, Boolean | ContainerItemConfig | MenuItemConfig | null> | undefined;
    /**
     * An object whose keys are the [key](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key) name
     * and optional modifier prefixes: `'Ctrl+'`, `'Alt+'`, `'Meta+'`, and `'Shift+'` (case-insensitive). The values
     * are the name of the instance method to call when the keystroke is received.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-keyMap)
     */
    keyMap?: Record<string, KeyMapConfig> | undefined;
    /**
     * The short name of a helper class which manages rendering and styling of child items.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-layout)
     */
    layout?: string | ContainerLayoutConfig | undefined;
    /**
     * The CSS style properties to apply to the [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-layoutStyle)
     */
    layoutStyle?: object | undefined;
    /**
     * An array of [child item](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#config-items) *config objects* which is to be converted into
     * instances only when this Container is rendered, rather than eagerly at construct time.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-lazyItems)
     */
    lazyItems?: Record<string, ContainerItemConfig> | Widget[] | ContainerItemConfig[] | undefined;
    /**
     * When `limitToProperty` is set to the name of an available field (as specified either
     * explicitly in [fields](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-fields) or implicitly in the
     * [store](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-store)'s model), it has the following effects:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-limitToProperty)
     */
    limitToProperty?: string | undefined;
    /**
     * The listener set for this object.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-listeners)
     */
    listeners?: FieldFilterPickerGroupListeners | undefined;
    /**
     * A class translations of which are used for translating this entity.
     * This is often used when translations of an item are defined on its container class.
     * For example:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-localeClass)
     */
    localeClass?: typeof Base | undefined;
    /**
     * Set to `false` to disable localization of this object.
     */
    localizable?: Boolean | undefined;
    /**
     * List of properties which values should be translated automatically upon a locale applying.
     * In case there is a need to localize not typical value (not a String value or a field with re-defined setter/getter),
     * you could use 'localeKey' meta configuration.
     * Example:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-localizableProperties)
     */
    localizableProperties?: string[] | undefined;
    /**
     * Widget's margin. This may be configured as a single number or a `TRBL` format string.
     * numeric-only values are interpreted as pixels.
     */
    margin?: string | number | undefined;
    /**
     * This config object contains the defaults for the [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) created for the
     * [masked](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-masked) config. Any properties specified in the `masked` config will override these
     * values.
     */
    maskDefaults?: MaskConfig | undefined;
    /**
     * Set to `true` to apply the default mask to the widget. Alternatively, this can be the mask message or a
     * [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) config object.
     */
    masked?: string | Boolean | MaskConfig | undefined;
    /**
     * The element's maxHeight. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [height](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-height), *reading* the value will return the numeric value in pixels.
     */
    maxHeight?: string | number | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-maximizeOnMobile)
     */
    maximizeOnMobile?: string | number | undefined;
    /**
     * The elements maxWidth. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [width](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.
     */
    maxWidth?: string | number | undefined;
    /**
     * The element's minHeight. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [height](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-height), *reading* the value will return the numeric value in pixels.
     */
    minHeight?: string | number | undefined;
    /**
     * The elements minWidth. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [width](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.
     */
    minWidth?: string | number | undefined;
    /**
     * When this is configured as `true` a [ResizeObserver](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)
     * is used to monitor this element for size changes caused by either style manipulation, or by CSS
     * layout.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-monitorResize)
     */
    monitorResize?: Boolean | undefined;
    /**
     * An object containing default config objects which may be referenced by name in the [items](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#config-items)
     * config. For example, a specialized [Menu](https://bryntum.com/products/calendar/docs/api/Core/widget/Menu) subclass may have a `namedItems` default
     * value defined like this:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-namedItems)
     */
    namedItems?: Record<string, ContainerItemConfig> | undefined;
    /**
     * When specified, overrides the built-in list of available operators. See
     * [operators](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPicker#config-operators).
     */
    operators?: object | undefined;
    /**
     * The owning Widget of this Widget. If this Widget is directly contained (that is, it is one of the
     * [items](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#property-items) of a Container), this config will be ignored. In this case
     * the owner is <strong>always</strong> the encapsulating Container.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-owner)
     */
    owner?: Widget | undefined;
    /**
     * Set to `true` when a widget is rendered into another widget's [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement), but must
     * not participate in the standard layout of that widget, and must be positioned relatively to that
     * widget's [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-positioned)
     */
    positioned?: Boolean | undefined;
    /**
     * Prevent tooltip from being displayed on touch devices. Useful for example for buttons that display a
     * menu on click etc, since the tooltip would be displayed at the same time.
     */
    preventTooltipOnTouch?: Boolean | undefined;
    /**
     * Whether the picker group is read-only.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-readOnly)
     */
    readOnly?: Boolean | undefined;
    /**
     * [Record](https://bryntum.com/products/calendar/docs/api/Core/data/Model) whose values will be used to populate fields in the container.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-record)
     */
    record?: Model | undefined;
    relayStoreEvents?: Boolean | undefined;
    /**
     * Configure as `true` to have the component display a translucent ripple when its
     * [focusElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-focusElement), or [element](#Core/widget/Widget#property-element) is tapped <em>if the
     * current theme supports ripples</em>. Out of the box, only the Material theme supports ripples.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-ripple)
     */
    ripple?: Boolean | {
        delegate?: string | undefined;
        color?: string | undefined;
        radius?: number | undefined;
        clip?: string | undefined;
    } | undefined;
    /**
     * If you are rendering this widget to a shadow root inside a web component, set this config to the shadowRoot. If not inside a web component, set it to `document.body`
     */
    rootElement?: HTMLElement | ShadowRoot | undefined;
    /**
     * This may be configured as `true` to make the widget's element use the `direction:rtl` style.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-rtl)
     */
    rtl?: Boolean | undefined;
    /**
     * Specifies whether (and optionally in which axes) a Widget may scroll. `true` means this widget may scroll
     * in both axes. May be an object containing boolean `overflowX` and `overflowY` properties which are
     * applied to CSS style properties `overflowX` and `overflowY`. If they are boolean, they are translated to
     * CSS overflow properties thus:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-scrollable)
     */
    scrollable?: Boolean | ScrollerConfig | Scroller | undefined;
    /**
     * Defines what to do if document is scrolled while Widget is visible (only relevant when floating is set to `true`).
     * Valid values: ´null´: do nothing, ´hide´: hide the widget or ´realign´: realign to the target if possible.
     */
    scrollAction?: "hide" | "realign" | null | undefined;
    /**
     * Show a button at the bottom of the group that adds a new, blank filter to the group.
     */
    showAddFilterButton?: Boolean | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-showAnimation)
     */
    showAnimation?: object | Boolean | undefined;
    /**
     * Set to `false` to not show the tooltip when this widget is [disabled](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-disabled)
     */
    showTooltipWhenDisabled?: Boolean | undefined;
    /**
     * The [Store](https://bryntum.com/products/calendar/docs/api/Core/data/Store) whose records will be filtered. The store's [modelClass](#Core/data/Store#property-modelClass)
     * will be used to determine field types.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-store)
     */
    store?: Store | undefined;
    /**
     * Specify `true` to match fields by their `name` property only when assigning a [record](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#config-record),
     * without falling back to `ref`.
     */
    strictRecordMapping?: Boolean | undefined;
    /**
     * A configuration for the [tab](https://bryntum.com/products/calendar/docs/api/Core/widget/Tab) created for this widget when it is placed in a
     * [TabPanel](https://bryntum.com/products/calendar/docs/api/Core/widget/TabPanel). For example, this config can be used to control the icon of the `tab` for
     * this widget:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-tab)
     */
    tab?: Boolean | TabConfig | undefined;
    /**
     * When this container is used as a tab in a TabPanel, these items are added to the
     * [TabBar](https://bryntum.com/products/calendar/docs/api/Core/widget/TabBar) when this container is the active tab.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-tabBarItems)
     */
    tabBarItems?: ToolbarItems[] | Widget[] | undefined;
    /**
     * The tag name of this Widget's root element
     */
    tag?: string | undefined;
    /**
     * Text alignment: 'left', 'center' or 'right'. Also accepts direction neutral 'start' and 'end'.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-textAlign)
     */
    textAlign?: "left" | "right" | "start" | "end" | "center" | undefined;
    /**
     * Specify `true` for a container used to show text markup. It will apply the CSS class `b-text-content`
     * which specifies a default max-width that makes long text more readable.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-textContent)
     */
    textContent?: Boolean | undefined;
    /**
     * A title to display for the widget. Only in effect when inside a container that uses it (such as TabPanel)
     */
    title?: string | undefined;
    /**
     * Tooltip for the widget, either as a string or as a Tooltip config object.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-tooltip)
     */
    tooltip?: string | TooltipConfig | null | undefined;
    /**
     * Whether to raise [change](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#event-change) events as the user types into a value field. If `false`,
     * [change](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#event-change) events will be raised only when the value input field's own `change` event
     * occurs, for example on field blur.
     */
    triggerChangeOnInput?: Boolean | undefined;
    type?: "fieldfilterpickergroup" | undefined;
    /**
     * Custom CSS class name suffixes to apply to the elements rendered by this widget. This may be specified
     * as a space separated string, an array of strings, or as an object in which property names with truthy
     * values are used as the class names.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-ui)
     */
    ui?: string | object | undefined;
    /**
     * A widgets weight determines its position among siblings when added to a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container).
     * Higher weights go further down.
     */
    weight?: number | undefined;
    /**
     * Widget's width, used to set element style.width. Either specify a valid width string or a number, which
     * will get 'px' appended. We recommend using CSS as the primary way to control width, but in some cases
     * this config is convenient.
     */
    width?: string | number | undefined;
    /**
     * The x position for the widget.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-x)
     */
    x?: number | undefined;
    /**
     * The y position for the widget.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-y)
     */
    y?: number | undefined;
}>, {
    instance: {
        value?: FieldFilterPickerGroup | undefined;
    };
    refElement: import("vue").Ref<HTMLDivElement | undefined>;
    teleports: import("vue").Ref<Map<any, any>>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    beforeAddFilter: (params: string | ((event: {
        source: FieldFilterPicker;
        filter: CollectionFilterConfig;
    }) => boolean | void | Promise<boolean>)) => void;
    beforeDestroy: (params: string | ((event: {
        source: Base;
    }) => void)) => void;
    beforeHide: (params: string | ((event: {
        source: Widget;
    }) => boolean | void | Promise<boolean>)) => void;
    beforeSetRecord: (params: string | ((event: {
        source: Container;
        record: Model;
    }) => void)) => void;
    beforeShow: (params: string | ((event: {
        source: any;
    }) => boolean | void | Promise<boolean>)) => void;
    catchAll: (params: string | ((event: {
        [key: string]: any;
        type: string;
    }) => void)) => void;
    change: (params: string | ((event: {
        source: FieldFilterPickerGroup;
        filters: CollectionFilterConfig[];
        validFilters: CollectionFilterConfig[];
    }) => void)) => void;
    destroy: (params: string | ((event: {
        source: Base;
    }) => void)) => void;
    dirtyStateChange: (params: string | ((event: {
        source: Container;
        dirty: boolean;
    }) => void)) => void;
    focusIn: (params: string | ((event: {
        source: Widget;
        fromElement: HTMLElement;
        toElement: HTMLElement;
        fromWidget: Widget;
        toWidget: Widget;
        backwards: boolean;
    }) => void)) => void;
    focusOut: (params: string | ((event: {
        source: Widget;
        fromElement: HTMLElement;
        toElement: HTMLElement;
        fromWidget: Widget;
        toWidget: Widget;
        backwards: boolean;
    }) => void)) => void;
    hide: (params: string | ((event: {
        source: Widget;
    }) => void)) => void;
    paint: (params: string | ((event: {
        source: Widget;
        firstPaint: boolean;
    }) => void)) => void;
    readOnly: (params: string | ((event: {
        readOnly: boolean;
    }) => void)) => void;
    recompose: (params: string | (() => void)) => void;
    resize: (params: string | ((event: {
        source: Widget;
        width: number;
        height: number;
        oldWidth: number;
        oldHeight: number;
    }) => void)) => void;
    show: (params: string | ((event: {
        source: Widget;
    }) => void)) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_TypePropsToRuntimeProps<{
    /**
     * Sets the text displayed in the 'add filter' button if one is present.
     */
    addFilterButtonText?: string | undefined;
    /**
     * Element (or element id) to adopt as this Widget's encapsulating element. The widget's
     * content will be placed inside this element.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-adopt)
     */
    adopt?: string | HTMLElement | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-align)
     */
    align?: string | AlignSpec | undefined;
    /**
     * When this widget is a child of a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container), it will by default be participating in a
     * flexbox layout. This config allows you to set this widget's
     * [align-self](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self) style.
     */
    alignSelf?: string | undefined;
    /**
     * Optional array of field names that are allowed as selectable properties for filters.
     * This should be a subset of the field names found in the [store](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-store). When supplied,
     * only the named fields will be shown in the property selector combo.
     */
    allowedFieldNames?: string[] | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating) and being shown through [showBy](#Core/widget/Widget#function-showBy).*
     * `true` to show a connector arrow pointing to the align target.
     */
    anchor?: Boolean | undefined;
    /**
     * Element (or the id of an element) to append this widget's element to. Can be configured, or set once at
     * runtime. To access the element of a rendered widget, see [element](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-element).
     */
    appendTo?: string | HTMLElement | undefined;
    /**
     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject
     * into an element which will be linked using the `aria-describedby` attribute.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-ariaDescription)
     */
    ariaDescription?: string | undefined;
    /**
     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject as
     * the `aria-label` attribute.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-ariaLabel)
     */
    ariaLabel?: string | undefined;
    /**
     * The `aria-live` value for this widget.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-ariaLive)
     * @deprecated Will be removed in 7.0
     */
    ariaLive?: string | undefined;
    /**
     * Update assigned [record](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#config-record) automatically on field changes
     */
    autoUpdateRecord?: Boolean | undefined;
    /**
     * An object where property names with a truthy value indicate which events should bubble up the ownership
     * hierarchy when triggered.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-bubbleEvents)
     */
    bubbleEvents?: object | undefined;
    /**
     * Set to `false` to not call onXXX method names (e.g. `onShow`, `onClick`), as an easy way to listen for events.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-callOnFunctions)
     */
    callOnFunctions?: Boolean | undefined;
    /**
     * Optional predicate that returns whether a given filter can be deleted. When `canDeleteFilter` is provided,
     * it will be called for each filter and will not show the delete button for those for which the
     * function returns `false`.
     * @param {any} filter filter for checking
     * @returns {boolean} truthy value if filter can be deleted
     */
    canDeleteFilter?: ((filter: any) => Boolean) | undefined;
    /**
     * Optional predicate that returns whether a given filter can be managed by this widget. When `canManageFilter`
     * is provided, it will be used to decide whether to display filters found in the configured
     * [store](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-store).
     * @param {any} filter filter for checking
     * @returns {boolean} truthy value if filter can be managed
     */
    canManageFilter?: ((filter: any) => Boolean) | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * Set to `true` to centre the Widget in browser viewport space.
     */
    centered?: Boolean | undefined;
    /**
     * Custom CSS classes to add to element.
     * May be specified as a space separated string, or as an object in which property names
     * with truthy values are used as the class names:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-cls)
     */
    cls?: string | object | undefined;
    config?: object | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating) or [positioned](#Core/widget/Widget#config-positioned).*
     * Element, Widget or Rectangle to which this Widget is constrained.
     */
    constrainTo?: Widget | HTMLElement | Rectangle | undefined;
    /**
     * The HTML content that coexists with sibling elements which may have been added to the
     * [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement) by plugins and features.
     * When specifying html, this widget's element will also have the [htmlCls](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-htmlCls)
     * class added to its classList, to allow targeted styling.
     */
    content?: string | undefined;
    /**
     * Custom CSS classes to add to the [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement).
     * May be specified as a space separated string, or as an object in which property names
     * with truthy values are used as the class names:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-contentElementCls)
     */
    contentElementCls?: string | object | undefined;
    /**
     * Object to apply to elements dataset (each key will be used as a data-attribute on the element)
     */
    dataset?: Record<string, string> | undefined;
    /**
     * The date format string used to display dates when using the 'is one of' / 'is not one of' operators with a date
     * field. Defaults to the current locale's `FieldFilterPicker.dateFormat` value.
     */
    dateFormat?: string | undefined;
    /**
     * The name of the property to set when a single value is to be applied to this Widget. Such as when used
     * in a grid WidgetColumn, this is the property to which the column's `field` is applied.
     */
    defaultBindProperty?: string | undefined;
    /**
     * A [query](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#function-query) selector function which can identify the descendant widget to which
     * focus should be directed by default.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-defaultFocus)
     * @param {Core.widget.Widget} widget Widget passed to method
     * @returns {boolean} truthy value if widget is the default one
     */
    defaultFocus?: string | ((widget: Widget) => Boolean) | undefined;
    /**
     * A config object containing default settings to apply to all child widgets.
     */
    defaults?: ContainerItemConfig | undefined;
    /**
     * Whether the picker group is disabled.
     */
    disabled?: Boolean | undefined;
    /**
     * Controls the placement of this widget when it is added to a [panel's ](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel)
     * [strips collection](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-strips). Typical values for this config are `'top'`,
     * `'bottom'`, `'left'`, or `'right'`, which cause the widget to be placed on that side of the panel's
     * body. Such widgets are called "edge strips".
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-dock)
     */
    dock?: object | "top" | "bottom" | "left" | "right" | "start" | "end" | "header" | "pre-header" | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * Set to `true` to be able to drag a widget freely on the page. Or set to an object with a ´handleSelector´
     * property which controls when a drag should start.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-draggable)
     */
    draggable?: Boolean | {
        handleSelector?: string | undefined;
    } | undefined;
    /**
     * An object specifying attributes to assign to the root element of this widget.
     * Set `null` value to attribute to remove it.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-elementAttributes)
     */
    elementAttributes?: Record<string, string | null> | undefined;
    extraData?: any;
    /**
     * Dictionary of [FieldOption](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPicker#typedef-FieldOption) representing the fields against which filters can be defined,
     * keyed by field name.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-fields)
     */
    fields?: Record<string, FieldOption> | undefined;
    /**
     * Array of [CollectionFilter](https://bryntum.com/products/calendar/docs/api/Core/util/CollectionFilter) configuration objects. One
     * [FieldFilterPicker](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPicker) will be created
     * for each object in the array.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-filters)
     */
    filters?: CollectionFilterConfig[] | undefined;
    /**
     * When this widget is a child of a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container), it will by default be participating in a
     * flexbox layout. This config allows you to set this widget's
     * [flex](https://developer.mozilla.org/en-US/docs/Web/CSS/flex) style.
     * This may be configured as a single number or a `&lt;flex-grow&gt; &lt;flex-shrink&gt; &lt;flex-basis&gt;` format string.
     * numeric-only values are interpreted as the `flex-grow` value.
     */
    flex?: string | number | undefined;
    /**
     * Set to `true` to move the widget out of the document flow and position it
     * absolutely in browser viewport space.
     */
    floating?: Boolean | undefined;
    /**
     * Optional function that returns [FieldFilterPicker](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPicker) configuration properties for
     * a given filter. When `getFieldFilterPickerConfig` is provided, it will be called for each filter and the returned
     * object will be merged with the configuration properties for the individual
     * [FieldFilterPicker](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPicker) representing that filter.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-getFieldFilterPickerConfig)
     * @param {CollectionFilterConfig} filter The filter to be displayed in the FieldFilterPicker being configured
     * @returns {FieldFilterPickerConfig}
     */
    getFieldFilterPickerConfig?: ((filter: CollectionFilterConfig) => FieldFilterPickerConfig) | undefined;
    /**
     * Widget's height, used to set element style.height. Either specify a valid height string or a number, which
     * will get 'px' appended. We recommend using CSS as the primary way to control height, but in some cases
     * this config is convenient.
     */
    height?: string | number | undefined;
    /**
     * Configure with true to make widget initially hidden.
     */
    hidden?: Boolean | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-hideAnimation)
     */
    hideAnimation?: object | Boolean | undefined;
    /**
     * Specify `true` to make this container hide when it has no visible children (Either empty
     * or all children hidden).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-hideWhenEmpty)
     */
    hideWhenEmpty?: Boolean | undefined;
    /**
     * The HTML to display initially or a function returning the markup (called at widget construction time).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-html)
     * @param {Core.widget.Widget} widget The calling Widget
     * @returns {string}
     */
    html?: string | VueConfig | DomConfig | DomConfig[] | ((widget: Widget) => string) | undefined;
    /**
     * The CSS class(es) to add when HTML content is being applied to this widget.
     */
    htmlCls?: string | object | undefined;
    /**
     * Widget id, if not specified one will be generated. Also used for lookups through Widget.getById
     */
    id?: string | undefined;
    /**
     * Determines if the widgets read-only state should be controlled by its parent.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-ignoreParentReadOnly)
     */
    ignoreParentReadOnly?: Boolean | undefined;
    /**
     * Element (or element id) to insert this widget before. If provided, [appendTo](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-appendTo) config is ignored.
     */
    insertBefore?: string | HTMLElement | undefined;
    /**
     * Element (or element id) to append this widget element to, as a first child. If provided, [appendTo](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-appendTo) config is ignored.
     */
    insertFirst?: string | HTMLElement | undefined;
    /**
     * An optional CSS class to add to child items of this container.
     */
    itemCls?: string | undefined;
    /**
     * An object containing typed child widget config objects or Widgets. May also be specified
     * as an array.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-items)
     */
    items?: (Widget | ContainerItemConfig | MenuItemConfig)[] | Record<string, Boolean | ContainerItemConfig | MenuItemConfig | null> | undefined;
    /**
     * An object whose keys are the [key](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key) name
     * and optional modifier prefixes: `'Ctrl+'`, `'Alt+'`, `'Meta+'`, and `'Shift+'` (case-insensitive). The values
     * are the name of the instance method to call when the keystroke is received.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-keyMap)
     */
    keyMap?: Record<string, KeyMapConfig> | undefined;
    /**
     * The short name of a helper class which manages rendering and styling of child items.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-layout)
     */
    layout?: string | ContainerLayoutConfig | undefined;
    /**
     * The CSS style properties to apply to the [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-layoutStyle)
     */
    layoutStyle?: object | undefined;
    /**
     * An array of [child item](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#config-items) *config objects* which is to be converted into
     * instances only when this Container is rendered, rather than eagerly at construct time.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-lazyItems)
     */
    lazyItems?: Record<string, ContainerItemConfig> | Widget[] | ContainerItemConfig[] | undefined;
    /**
     * When `limitToProperty` is set to the name of an available field (as specified either
     * explicitly in [fields](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-fields) or implicitly in the
     * [store](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-store)'s model), it has the following effects:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-limitToProperty)
     */
    limitToProperty?: string | undefined;
    /**
     * The listener set for this object.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-listeners)
     */
    listeners?: FieldFilterPickerGroupListeners | undefined;
    /**
     * A class translations of which are used for translating this entity.
     * This is often used when translations of an item are defined on its container class.
     * For example:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-localeClass)
     */
    localeClass?: typeof Base | undefined;
    /**
     * Set to `false` to disable localization of this object.
     */
    localizable?: Boolean | undefined;
    /**
     * List of properties which values should be translated automatically upon a locale applying.
     * In case there is a need to localize not typical value (not a String value or a field with re-defined setter/getter),
     * you could use 'localeKey' meta configuration.
     * Example:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-localizableProperties)
     */
    localizableProperties?: string[] | undefined;
    /**
     * Widget's margin. This may be configured as a single number or a `TRBL` format string.
     * numeric-only values are interpreted as pixels.
     */
    margin?: string | number | undefined;
    /**
     * This config object contains the defaults for the [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) created for the
     * [masked](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-masked) config. Any properties specified in the `masked` config will override these
     * values.
     */
    maskDefaults?: MaskConfig | undefined;
    /**
     * Set to `true` to apply the default mask to the widget. Alternatively, this can be the mask message or a
     * [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) config object.
     */
    masked?: string | Boolean | MaskConfig | undefined;
    /**
     * The element's maxHeight. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [height](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-height), *reading* the value will return the numeric value in pixels.
     */
    maxHeight?: string | number | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-maximizeOnMobile)
     */
    maximizeOnMobile?: string | number | undefined;
    /**
     * The elements maxWidth. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [width](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.
     */
    maxWidth?: string | number | undefined;
    /**
     * The element's minHeight. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [height](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-height), *reading* the value will return the numeric value in pixels.
     */
    minHeight?: string | number | undefined;
    /**
     * The elements minWidth. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [width](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.
     */
    minWidth?: string | number | undefined;
    /**
     * When this is configured as `true` a [ResizeObserver](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)
     * is used to monitor this element for size changes caused by either style manipulation, or by CSS
     * layout.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-monitorResize)
     */
    monitorResize?: Boolean | undefined;
    /**
     * An object containing default config objects which may be referenced by name in the [items](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#config-items)
     * config. For example, a specialized [Menu](https://bryntum.com/products/calendar/docs/api/Core/widget/Menu) subclass may have a `namedItems` default
     * value defined like this:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-namedItems)
     */
    namedItems?: Record<string, ContainerItemConfig> | undefined;
    /**
     * When specified, overrides the built-in list of available operators. See
     * [operators](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPicker#config-operators).
     */
    operators?: object | undefined;
    /**
     * The owning Widget of this Widget. If this Widget is directly contained (that is, it is one of the
     * [items](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#property-items) of a Container), this config will be ignored. In this case
     * the owner is <strong>always</strong> the encapsulating Container.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-owner)
     */
    owner?: Widget | undefined;
    /**
     * Set to `true` when a widget is rendered into another widget's [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement), but must
     * not participate in the standard layout of that widget, and must be positioned relatively to that
     * widget's [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-positioned)
     */
    positioned?: Boolean | undefined;
    /**
     * Prevent tooltip from being displayed on touch devices. Useful for example for buttons that display a
     * menu on click etc, since the tooltip would be displayed at the same time.
     */
    preventTooltipOnTouch?: Boolean | undefined;
    /**
     * Whether the picker group is read-only.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-readOnly)
     */
    readOnly?: Boolean | undefined;
    /**
     * [Record](https://bryntum.com/products/calendar/docs/api/Core/data/Model) whose values will be used to populate fields in the container.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-record)
     */
    record?: Model | undefined;
    relayStoreEvents?: Boolean | undefined;
    /**
     * Configure as `true` to have the component display a translucent ripple when its
     * [focusElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-focusElement), or [element](#Core/widget/Widget#property-element) is tapped <em>if the
     * current theme supports ripples</em>. Out of the box, only the Material theme supports ripples.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-ripple)
     */
    ripple?: Boolean | {
        delegate?: string | undefined;
        color?: string | undefined;
        radius?: number | undefined;
        clip?: string | undefined;
    } | undefined;
    /**
     * If you are rendering this widget to a shadow root inside a web component, set this config to the shadowRoot. If not inside a web component, set it to `document.body`
     */
    rootElement?: HTMLElement | ShadowRoot | undefined;
    /**
     * This may be configured as `true` to make the widget's element use the `direction:rtl` style.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-rtl)
     */
    rtl?: Boolean | undefined;
    /**
     * Specifies whether (and optionally in which axes) a Widget may scroll. `true` means this widget may scroll
     * in both axes. May be an object containing boolean `overflowX` and `overflowY` properties which are
     * applied to CSS style properties `overflowX` and `overflowY`. If they are boolean, they are translated to
     * CSS overflow properties thus:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-scrollable)
     */
    scrollable?: Boolean | ScrollerConfig | Scroller | undefined;
    /**
     * Defines what to do if document is scrolled while Widget is visible (only relevant when floating is set to `true`).
     * Valid values: ´null´: do nothing, ´hide´: hide the widget or ´realign´: realign to the target if possible.
     */
    scrollAction?: "hide" | "realign" | null | undefined;
    /**
     * Show a button at the bottom of the group that adds a new, blank filter to the group.
     */
    showAddFilterButton?: Boolean | undefined;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-showAnimation)
     */
    showAnimation?: object | Boolean | undefined;
    /**
     * Set to `false` to not show the tooltip when this widget is [disabled](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-disabled)
     */
    showTooltipWhenDisabled?: Boolean | undefined;
    /**
     * The [Store](https://bryntum.com/products/calendar/docs/api/Core/data/Store) whose records will be filtered. The store's [modelClass](#Core/data/Store#property-modelClass)
     * will be used to determine field types.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-store)
     */
    store?: Store | undefined;
    /**
     * Specify `true` to match fields by their `name` property only when assigning a [record](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#config-record),
     * without falling back to `ref`.
     */
    strictRecordMapping?: Boolean | undefined;
    /**
     * A configuration for the [tab](https://bryntum.com/products/calendar/docs/api/Core/widget/Tab) created for this widget when it is placed in a
     * [TabPanel](https://bryntum.com/products/calendar/docs/api/Core/widget/TabPanel). For example, this config can be used to control the icon of the `tab` for
     * this widget:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-tab)
     */
    tab?: Boolean | TabConfig | undefined;
    /**
     * When this container is used as a tab in a TabPanel, these items are added to the
     * [TabBar](https://bryntum.com/products/calendar/docs/api/Core/widget/TabBar) when this container is the active tab.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-tabBarItems)
     */
    tabBarItems?: ToolbarItems[] | Widget[] | undefined;
    /**
     * The tag name of this Widget's root element
     */
    tag?: string | undefined;
    /**
     * Text alignment: 'left', 'center' or 'right'. Also accepts direction neutral 'start' and 'end'.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-textAlign)
     */
    textAlign?: "left" | "right" | "start" | "end" | "center" | undefined;
    /**
     * Specify `true` for a container used to show text markup. It will apply the CSS class `b-text-content`
     * which specifies a default max-width that makes long text more readable.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-textContent)
     */
    textContent?: Boolean | undefined;
    /**
     * A title to display for the widget. Only in effect when inside a container that uses it (such as TabPanel)
     */
    title?: string | undefined;
    /**
     * Tooltip for the widget, either as a string or as a Tooltip config object.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-tooltip)
     */
    tooltip?: string | TooltipConfig | null | undefined;
    /**
     * Whether to raise [change](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#event-change) events as the user types into a value field. If `false`,
     * [change](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#event-change) events will be raised only when the value input field's own `change` event
     * occurs, for example on field blur.
     */
    triggerChangeOnInput?: Boolean | undefined;
    type?: "fieldfilterpickergroup" | undefined;
    /**
     * Custom CSS class name suffixes to apply to the elements rendered by this widget. This may be specified
     * as a space separated string, an array of strings, or as an object in which property names with truthy
     * values are used as the class names.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-ui)
     */
    ui?: string | object | undefined;
    /**
     * A widgets weight determines its position among siblings when added to a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container).
     * Higher weights go further down.
     */
    weight?: number | undefined;
    /**
     * Widget's width, used to set element style.width. Either specify a valid width string or a number, which
     * will get 'px' appended. We recommend using CSS as the primary way to control width, but in some cases
     * this config is convenient.
     */
    width?: string | number | undefined;
    /**
     * The x position for the widget.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-x)
     */
    x?: number | undefined;
    /**
     * The y position for the widget.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Core/widget/FieldFilterPickerGroup#config-y)
     */
    y?: number | undefined;
}>>> & {
    onBeforeDestroy?: ((params: string | ((event: {
        source: Base;
    }) => void)) => any) | undefined;
    onBeforeHide?: ((params: string | ((event: {
        source: Widget;
    }) => boolean | void | Promise<boolean>)) => any) | undefined;
    onBeforeSetRecord?: ((params: string | ((event: {
        source: Container;
        record: Model;
    }) => void)) => any) | undefined;
    onBeforeShow?: ((params: string | ((event: {
        source: any;
    }) => boolean | void | Promise<boolean>)) => any) | undefined;
    onCatchAll?: ((params: string | ((event: {
        [key: string]: any;
        type: string;
    }) => void)) => any) | undefined;
    onDestroy?: ((params: string | ((event: {
        source: Base;
    }) => void)) => any) | undefined;
    onDirtyStateChange?: ((params: string | ((event: {
        source: Container;
        dirty: boolean;
    }) => void)) => any) | undefined;
    onFocusIn?: ((params: string | ((event: {
        source: Widget;
        fromElement: HTMLElement;
        toElement: HTMLElement;
        fromWidget: Widget;
        toWidget: Widget;
        backwards: boolean;
    }) => void)) => any) | undefined;
    onFocusOut?: ((params: string | ((event: {
        source: Widget;
        fromElement: HTMLElement;
        toElement: HTMLElement;
        fromWidget: Widget;
        toWidget: Widget;
        backwards: boolean;
    }) => void)) => any) | undefined;
    onHide?: ((params: string | ((event: {
        source: Widget;
    }) => void)) => any) | undefined;
    onPaint?: ((params: string | ((event: {
        source: Widget;
        firstPaint: boolean;
    }) => void)) => any) | undefined;
    onReadOnly?: ((params: string | ((event: {
        readOnly: boolean;
    }) => void)) => any) | undefined;
    onRecompose?: ((params: string | (() => void)) => any) | undefined;
    onResize?: ((params: string | ((event: {
        source: Widget;
        width: number;
        height: number;
        oldWidth: number;
        oldHeight: number;
    }) => void)) => any) | undefined;
    onShow?: ((params: string | ((event: {
        source: Widget;
    }) => void)) => any) | undefined;
    onChange?: ((params: string | ((event: {
        source: FieldFilterPickerGroup;
        filters: CollectionFilterConfig[];
        validFilters: CollectionFilterConfig[];
    }) => void)) => any) | undefined;
    onBeforeAddFilter?: ((params: string | ((event: {
        source: FieldFilterPicker;
        filter: CollectionFilterConfig;
    }) => boolean | void | Promise<boolean>)) => any) | undefined;
}, {}, {}>;
export default _default;
declare type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
declare type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
