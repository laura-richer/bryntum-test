import type { AlignSpec, Base, ComboModel, DataField, Field, KeyMapConfig, MaskConfig, Model, Rectangle, TabConfig, TimelineBase, ViewPresetComboListeners, Widget } from '@bryntum/calendar';
export declare type BryntumViewPresetComboProps = {
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-align)
     */
    align?: AlignSpec | string;
    /**
     * When this widget is a child of a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container), it will by default be participating in a
     * flexbox layout. This config allows you to set this widget's
     * [align-self](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self) style.
     */
    alignSelf?: string;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating) and being shown through [showBy](#Core/widget/Widget#function-showBy).*
     * `true` to show a connector arrow pointing to the align target.
     */
    anchor?: Boolean;
    /**
     * Element (or the id of an element) to append this widget's element to. Can be configured, or set once at
     * runtime. To access the element of a rendered widget, see [element](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-element).
     */
    appendTo?: HTMLElement | string;
    /**
     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject
     * into an element which will be linked using the `aria-describedby` attribute.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-ariaDescription)
     */
    ariaDescription?: string;
    /**
     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject as
     * the `aria-label` attribute.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-ariaLabel)
     */
    ariaLabel?: string;
    /**
     * The `aria-live` value for this widget.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-ariaLive)
     * @deprecated Will be removed in 7.0
     */
    ariaLive?: string;
    /**
     * Initial text to show in badge.
     */
    badge?: string;
    /**
     * An object where property names with a truthy value indicate which events should bubble up the ownership
     * hierarchy when triggered.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-bubbleEvents)
     */
    bubbleEvents?: object;
    /**
     * Set to `false` to not call onXXX method names (e.g. `onShow`, `onClick`), as an easy way to listen for events.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-callOnFunctions)
     */
    callOnFunctions?: Boolean;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * Set to `true` to centre the Widget in browser viewport space.
     */
    centered?: Boolean;
    /**
     * Specify `false` to not clear value typed to a multiselect combo when an item is selected.
     */
    clearTextOnSelection?: Boolean;
    /**
     * Set to `true` to clear this field when user empties the input element
     */
    clearWhenInputEmpty?: Boolean;
    /**
     * If not added to a toolbar, provide a Scheduler, SchedulerPro or Gantt component instance to which the
     * ViewPresetCombo should be connected.
     */
    client?: TimelineBase;
    /**
     * Custom CSS classes to add to element.
     * May be specified as a space separated string, or as an object in which property names
     * with truthy values are used as the class names:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-cls)
     */
    cls?: string | object;
    config?: object;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating) or [positioned](#Core/widget/Widget#config-positioned).*
     * Element, Widget or Rectangle to which this Widget is constrained.
     */
    constrainTo?: HTMLElement | Widget | Rectangle;
    /**
     * Custom CSS classes to add to the [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement).
     * May be specified as a space separated string, or as an object in which property names
     * with truthy values are used as the class names:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-contentElementCls)
     */
    contentElementCls?: string | object;
    /**
     * A [DataField](https://bryntum.com/products/calendar/docs/api/Core/data/field/DataField) which describes a field of a [Model](#Core/data/Model)
     * that we are editing.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-dataField)
     */
    dataField?: DataField;
    /**
     * The name of the property to set when a single value is to be applied to this Widget. Such as when used
     * in a grid WidgetColumn, this is the property to which the column's `field` is applied.
     */
    defaultBindProperty?: string;
    /**
     * Disable or enable the widget. It is similar to [readOnly](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-readOnly) except a disabled widget
     * cannot be focused, uses a different rendition (usually greyish) and does not allow selecting its value.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-disabled)
     */
    disabled?: Boolean | 'inert';
    /**
     * Controls the placement of this widget when it is added to a [panel's ](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel)
     * [strips collection](https://bryntum.com/products/calendar/docs/api/Core/widget/Panel#config-strips). Typical values for this config are `'top'`,
     * `'bottom'`, `'left'`, or `'right'`, which cause the widget to be placed on that side of the panel's
     * body. Such widgets are called "edge strips".
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-dock)
     */
    dock?: 'top' | 'bottom' | 'left' | 'right' | 'start' | 'end' | 'header' | 'pre-header' | object;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * Set to `true` to be able to drag a widget freely on the page. Or set to an object with a ´handleSelector´
     * property which controls when a drag should start.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-draggable)
     */
    draggable?: Boolean | {
        handleSelector?: string;
    };
    /**
     * User can edit text in text field (otherwise only pick from attached picker)
     */
    editable?: Boolean;
    /**
     * An object specifying attributes to assign to the root element of this widget.
     * Set `null` value to attribute to remove it.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-elementAttributes)
     */
    elementAttributes?: Record<string, string | null>;
    extraData?: any;
    /**
     * When this widget is a child of a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container), it will by default be participating in a
     * flexbox layout. This config allows you to set this widget's
     * [flex](https://developer.mozilla.org/en-US/docs/Web/CSS/flex) style.
     * This may be configured as a single number or a `&lt;flex-grow&gt; &lt;flex-shrink&gt; &lt;flex-basis&gt;` format string.
     * numeric-only values are interpreted as the `flex-grow` value.
     */
    flex?: number | string;
    /**
     * Set to `true` to move the widget out of the document flow and position it
     * absolutely in browser viewport space.
     */
    floating?: Boolean;
    /**
     * Widget's height, used to set element style.height. Either specify a valid height string or a number, which
     * will get 'px' appended. We recommend using CSS as the primary way to control height, but in some cases
     * this config is convenient.
     */
    height?: string | number;
    /**
     * Configure with true to make widget initially hidden.
     */
    hidden?: Boolean;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-hideAnimation)
     */
    hideAnimation?: Boolean | object;
    /**
     * By default, the picker is hidden on selection in single select mode, and
     * remains to allow more selections when [multiSelect](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-multiSelect) is `true`.
     * Setting this to a `Boolean` value can override that default.
     */
    hidePickerOnSelect?: Boolean;
    /**
     * An optional string to display inside the input field as an overlay. This can be useful for displaying
     * a field's units.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-hint)
     * @param {object} data A data object
     * @param {Core.widget.Field} data.source A reference to the field instance
     * @param {any} data.value The current value of the field
     * @returns {string}
     */
    hint?: string | ((data: {
        source: Field;
        value: any;
    }) => string);
    /**
     * This config is similar to [hint](https://bryntum.com/products/calendar/docs/api/Core/widget/Field#config-hint) except that this config is used to display HTML content.
     * Since this can allow malicious content to be executed, be sure not to include user-entered data or to
     * encode such data (see [encodeHtml](https://bryntum.com/products/calendar/docs/api/Core/helper/StringHelper#function-encodeHtml-static)).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-hintHtml)
     * @param {object} data A data object
     * @param {Core.widget.Field} data.source A reference to the field instance
     * @param {any} data.value The current value of the field
     * @returns {string}
     */
    hintHtml?: string | ((data: {
        source: Field;
        value: any;
    }) => string);
    /**
     * Widget id, if not specified one will be generated. Also used for lookups through Widget.getById
     */
    id?: string;
    /**
     * Determines if the widgets read-only state should be controlled by its parent.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-ignoreParentReadOnly)
     */
    ignoreParentReadOnly?: Boolean;
    /**
     * Text alignment for the input field.
     */
    inputAlign?: string;
    /**
     * Sets custom attributes of the underlying input element. For more information, please refer to
     * [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes)
     */
    inputAttributes?: Record<string, string>;
    /**
     * If you need to use something else than a default `input` element, as the input element, provide the tag
     * name here. Please note that this is used for advanced usage only, for example when using WebComponents
     * (custom elements), and that the configured element must fulfil the same contract as a regular input
     * element.
     */
    inputTag?: string;
    /**
     * The width to apply to the `&lt;input&gt;` element. If a number is specified, `px` will be used.
     */
    inputWidth?: string | number;
    /**
     * Element (or element id) to insert this widget before. If provided, [appendTo](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-appendTo) config is ignored.
     */
    insertBefore?: HTMLElement | string;
    /**
     * Element (or element id) to append this widget element to, as a first child. If provided, [appendTo](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-appendTo) config is ignored.
     */
    insertFirst?: HTMLElement | string;
    /**
     * An object whose keys are the [key](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key) name
     * and optional modifier prefixes: `'Ctrl+'`, `'Alt+'`, `'Meta+'`, and `'Shift+'` (case-insensitive). The values
     * are the name of the instance method to call when the keystroke is received.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-keyMap)
     */
    keyMap?: Record<string, KeyMapConfig>;
    /**
     * Label, prepended to field
     */
    label?: string;
    /**
     * CSS class name or class names to add to any configured [label](https://bryntum.com/products/calendar/docs/api/Core/widget/mixin/Labelable#config-label)
     */
    labelCls?: string | object;
    /**
     * Label position, either 'before' the field or 'above' the field
     */
    labelPosition?: 'before' | 'above';
    /**
     * The labels to add either before or after the input field.
     * Each label may have the following properties:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-labels)
     */
    labels?: object[];
    /**
     * The width to apply to the `&lt;label&gt;` element. If a number is specified, `px` will be used.
     */
    labelWidth?: string | number;
    /**
     * CSS class to add to picker
     */
    listCls?: string;
    /**
     * The listener set for this object.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-listeners)
     */
    listeners?: ViewPresetComboListeners;
    /**
     * Template string used to render the list items in the dropdown list
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-listItemTpl)
     * @param {Core.data.Model} record The record representing the item being rendered
     * @returns {string,void}
     */
    listItemTpl?: (record: Model | ComboModel) => string | void;
    /**
     * A class translations of which are used for translating this entity.
     * This is often used when translations of an item are defined on its container class.
     * For example:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-localeClass)
     */
    localeClass?: typeof Base;
    /**
     * Set to `false` to disable localization of this object.
     */
    localizable?: Boolean;
    /**
     * List of properties which values should be translated automatically upon a locale applying.
     * In case there is a need to localize not typical value (not a String value or a field with re-defined setter/getter),
     * you could use 'localeKey' meta configuration.
     * Example:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-localizableProperties)
     */
    localizableProperties?: string[];
    /**
     * Widget's margin. This may be configured as a single number or a `TRBL` format string.
     * numeric-only values are interpreted as pixels.
     */
    margin?: number | string;
    /**
     * This config object contains the defaults for the [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) created for the
     * [masked](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-masked) config. Any properties specified in the `masked` config will override these
     * values.
     */
    maskDefaults?: MaskConfig;
    /**
     * Set to `true` to apply the default mask to the widget. Alternatively, this can be the mask message or a
     * [Mask](https://bryntum.com/products/calendar/docs/api/Core/widget/Mask) config object.
     */
    masked?: Boolean | string | MaskConfig;
    /**
     * The element's maxHeight. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [height](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-height), *reading* the value will return the numeric value in pixels.
     */
    maxHeight?: string | number;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-maximizeOnMobile)
     */
    maximizeOnMobile?: number | string;
    /**
     * The elements maxWidth. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [width](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.
     */
    maxWidth?: string | number;
    /**
     * The element's minHeight. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [height](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-height), *reading* the value will return the numeric value in pixels.
     */
    minHeight?: string | number;
    /**
     * The elements minWidth. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [width](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.
     */
    minWidth?: string | number;
    /**
     * When this is configured as `true` a [ResizeObserver](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)
     * is used to monitor this element for size changes caused by either style manipulation, or by CSS
     * layout.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-monitorResize)
     */
    monitorResize?: Boolean;
    /**
     * Name of the field which is used as a key to get/set values from/to the field.
     * Used prior to [ref](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-ref) and [id](#Core/widget/Widget#config-id) in
     * [Container.values](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#property-values).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-name)
     */
    name?: string;
    /**
     * This implies that the picker will display an anchor pointer, but also means that the picker will align closer
     * to the input field so that the pointer pierces the [pickerAlignElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-pickerAlignElement)
     */
    overlayAnchor?: Boolean;
    /**
     * The owning Widget of this Widget. If this Widget is directly contained (that is, it is one of the
     * [items](https://bryntum.com/products/calendar/docs/api/Core/widget/Container#property-items) of a Container), this config will be ignored. In this case
     * the owner is <strong>always</strong> the encapsulating Container.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-owner)
     */
    owner?: Widget;
    /**
     * Width of picker, defaults to this combo's [pickerAlignElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Combo#config-pickerAlignElement) width
     */
    pickerWidth?: number | string;
    /**
     * Set to `true` when a widget is rendered into another widget's [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement), but must
     * not participate in the standard layout of that widget, and must be positioned relatively to that
     * widget's [contentElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-contentElement).
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-positioned)
     */
    positioned?: Boolean;
    /**
     * An array containing string [ViewPreset](https://bryntum.com/products/calendar/docs/api/Scheduler/preset/ViewPreset) ids available for selection. The specified
     * presets must be [available](https://bryntum.com/products/calendar/docs/api/Scheduler/view/mixin/TimelineViewPresets#config-presets) for the
     * [client](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-client) (Scheduler, SchedulerPro or Gantt) for it to work properly. The selectable presets
     * will be arranged in the order provided here.
     */
    presets?: any[];
    /**
     * Prevent tooltip from being displayed on touch devices. Useful for example for buttons that display a
     * menu on click etc, since the tooltip would be displayed at the same time.
     */
    preventTooltipOnTouch?: Boolean;
    /**
     * Makes the field unmodifiable by user action. The input area is not editable, and triggers
     * are unresponsive.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-readOnly)
     */
    readOnly?: Boolean;
    relayStoreEvents?: Boolean;
    /**
     * Configure as `true` to have the component display a translucent ripple when its
     * [focusElement](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-focusElement), or [element](#Core/widget/Widget#property-element) is tapped <em>if the
     * current theme supports ripples</em>. Out of the box, only the Material theme supports ripples.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-ripple)
     */
    ripple?: Boolean | {
        delegate?: string;
        color?: string;
        radius?: number;
        clip?: string;
    };
    /**
     * If you are rendering this widget to a shadow root inside a web component, set this config to the shadowRoot. If not inside a web component, set it to `document.body`
     */
    rootElement?: ShadowRoot | HTMLElement;
    /**
     * This may be configured as `true` to make the widget's element use the `direction:rtl` style.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-rtl)
     */
    rtl?: Boolean;
    /**
     * Defines what to do if document is scrolled while Widget is visible (only relevant when floating is set to `true`).
     * Valid values: ´null´: do nothing, ´hide´: hide the widget or ´realign´: realign to the target if possible.
     */
    scrollAction?: 'hide' | 'realign' | null;
    /**
     * *Only valid if this Widget is [floating](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#config-floating).*
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-showAnimation)
     */
    showAnimation?: Boolean | object;
    /**
     * `true` to automatically display a * after the label for this field when it is [required](https://bryntum.com/products/calendar/docs/api/Core/widget/Field#property-required).
     */
    showRequiredIndicator?: string;
    /**
     * Set to `false` to not show the tooltip when this widget is [disabled](https://bryntum.com/products/calendar/docs/api/Core/widget/Widget#property-disabled)
     */
    showTooltipWhenDisabled?: Boolean;
    /**
     * Set to `true`, completely bypasses validation logic (could be userful if your field is not `editable`
     * to the user).
     */
    skipValidation?: Boolean;
    /**
     * A configuration for the [tab](https://bryntum.com/products/calendar/docs/api/Core/widget/Tab) created for this widget when it is placed in a
     * [TabPanel](https://bryntum.com/products/calendar/docs/api/Core/widget/TabPanel). For example, this config can be used to control the icon of the `tab` for
     * this widget:
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-tab)
     */
    tab?: Boolean | TabConfig;
    /**
     * The tab index of the input field or fields, or `null` for natural tab order (recommended). Setting to `0`
     * is equivalent to natural tab order, but is unnecessary for fields since they are naturally tabbable
     * (i.e., accessible via the TAB key). Setting to `-1` disables tabbability but allows for focus to be set
     * to the element programmatically.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-tabIndex)
     */
    tabIndex?: number;
    /**
     * Text alignment: 'left', 'center' or 'right'. Also accepts direction neutral 'start' and 'end'.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-textAlign)
     */
    textAlign?: 'left' | 'center' | 'right' | 'start' | 'end';
    type?: 'viewpresetcombo';
    /**
     * Custom CSS class name suffixes to apply to the elements rendered by this widget. This may be specified
     * as a space separated string, an array of strings, or as an object in which property names with truthy
     * values are used as the class names.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-ui)
     */
    ui?: string | object;
    /**
     * As default, a preset change by the ViewPresetCombo will result in that the `startDate` will be calculated to
     * the beginning of the [mainUnit](https://bryntum.com/products/calendar/docs/api/Scheduler/preset/ViewPreset#field-mainUnit) of the
     * [viewportCenterDate](https://bryntum.com/products/calendar/docs/api/Scheduler/view/mixin/TimelineDateMapper#property-viewportCenterDate). If the ViewPreset has a
     * [start](https://bryntum.com/products/calendar/docs/api/Scheduler/preset/ViewPreset#field-start) configured, this will be added to the calculation. The
     * `endDate` will then be calculated by adding the ViewPreset's
     * [defaultSpan](https://bryntum.com/products/calendar/docs/api/Scheduler/preset/ViewPreset#field-defaultSpan) to the `startDate`.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-useFixedDuration)
     */
    useFixedDuration?: Boolean;
    /**
     * A widgets weight determines its position among siblings when added to a [Container](https://bryntum.com/products/calendar/docs/api/Core/widget/Container).
     * Higher weights go further down.
     */
    weight?: number;
    /**
     * Widget's width, used to set element style.width. Either specify a valid width string or a number, which
     * will get 'px' appended. We recommend using CSS as the primary way to control width, but in some cases
     * this config is convenient.
     */
    width?: string | number;
    /**
     * The x position for the widget.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-x)
     */
    x?: number;
    /**
     * The y position for the widget.
     * ...
     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Scheduler/widget/ViewPresetCombo#config-y)
     */
    y?: number;
};
