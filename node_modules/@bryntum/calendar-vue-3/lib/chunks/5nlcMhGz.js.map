{"version":3,"file":"5nlcMhGz.js","sources":["../../src/components/BryntumCalendarProjectModel.vue"],"sourcesContent":["<!-- Vue 3 wrapper for Bryntum ProjectModel -->\n\n<template>\n    <div ref=\"refElement\">\n\n    </div>\n</template>\n\n<script setup lang=\"ts\">\n/* eslint-disable no-undef */\n\nimport { getCurrentInstance, onBeforeUnmount, onMounted, provide, ref, watch, toRaw } from 'vue';\n\nimport type { AssignmentModel, AssignmentModelConfig, AssignmentStore, AssignmentStoreConfig, DependencyModel, DependencyModelConfig, DependencyStore, DependencyStoreConfig, EventModel, EventModelConfig, EventStore, EventStoreConfig, Model, ModelConfig, ResourceModel, ResourceModelConfig, ResourceStore, ResourceStoreConfig, ResourceTimeRangeModel, ResourceTimeRangeModelConfig, ResourceTimeRangeStore, ResourceTimeRangeStoreConfig, SchedulerProjectModel, SchedulerTimeRangeModel, StateTrackingManager, StateTrackingManagerConfig, Store, StoreConfig, TimeRangeModel, TimeRangeModelConfig, TimeSpan } from '@bryntum/calendar';\nimport { ProjectModel } from '@bryntum/calendar';\n\nimport { WrapperHelper } from '../helper/WrapperHelper';\n\ndefineProps<{\n    // Configs\n    /**\n     * A flag, indicating whether the dates and duration calculations should adjust the result to DST time shift.\n     */\n    adjustDurationToDST ? : Boolean\n    /**\n     * The constructor of the assignment model class, to be used in the project. Will be set as the\n     * [modelClass](https://bryntum.com/products/calendar/docs/api/Core/data/Store#config-modelClass) property of the [assignmentStore](#Scheduler/model/ProjectModel#property-assignmentStore)\n     */\n    assignmentModelClass ? : typeof AssignmentModel\n    /**\n     * Data use to fill the [assignmentStore](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ProjectModel#property-assignmentStore). Should be an array of\n     * [AssignmentModels](https://bryntum.com/products/calendar/docs/api/Scheduler/model/AssignmentModel) or its configuration objects.\n     */\n    assignments ? : AssignmentModel[]|AssignmentModelConfig[]\n    /**\n     * The initial data, to fill the [assignmentStore](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ProjectModel#property-assignmentStore) with.\n     * Should be an array of [AssignmentModels](https://bryntum.com/products/calendar/docs/api/Scheduler/model/AssignmentModel) or its configuration\n     * objects.\n     */\n    assignmentsData ? : AssignmentModel[]|AssignmentModelConfig[]\n    /**\n     * An [AssignmentStore](https://bryntum.com/products/calendar/docs/api/Scheduler/data/AssignmentStore) instance or a config object.\n     */\n    assignmentStore ? : AssignmentStore|AssignmentStoreConfig\n    /**\n     * The constructor to create an assignment store instance with. Should be a class, subclassing the\n     * [AssignmentStore](https://bryntum.com/products/calendar/docs/api/Scheduler/data/AssignmentStore)\n     */\n    assignmentStoreClass ? : typeof AssignmentStore|object\n    /**\n     * Child nodes. To allow loading children on demand, specify `children : true` in your data. Omit the field for leaf\n     * tasks.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/model/ProjectModel#config-children)\n     */\n    children ? : Boolean|object[]|Model[]|ModelConfig[]\n    /**\n     * Data use to fill the [dependencyStore](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ProjectModel#property-dependencyStore). Should be an array of\n     * [DependencyModels](https://bryntum.com/products/calendar/docs/api/Scheduler/model/DependencyModel) or its configuration objects.\n     */\n    dependencies ? : DependencyModel[]|DependencyModelConfig[]\n    /**\n     * The initial data, to fill the [dependencyStore](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ProjectModel#property-dependencyStore) with.\n     * Should be an array of [DependencyModels](https://bryntum.com/products/calendar/docs/api/Scheduler/model/DependencyModel) or its configuration\n     * objects.\n     */\n    dependenciesData ? : DependencyModel[]|DependencyModelConfig[]\n    /**\n     * The constructor of the dependency model class, to be used in the project. Will be set as the\n     * [modelClass](https://bryntum.com/products/calendar/docs/api/Core/data/Store#config-modelClass) property of the [dependencyStore](#Scheduler/model/ProjectModel#property-dependencyStore)\n     */\n    dependencyModelClass ? : typeof DependencyModel\n    /**\n     * A [DependencyStore](https://bryntum.com/products/calendar/docs/api/Scheduler/data/DependencyStore) instance or a config object.\n     */\n    dependencyStore ? : DependencyStore|DependencyStoreConfig\n    /**\n     * The constructor to create a dependency store instance with. Should be a class, subclassing the\n     * [DependencyStore](https://bryntum.com/products/calendar/docs/api/Scheduler/data/DependencyStore)\n     */\n    dependencyStoreClass ? : typeof DependencyStore|object\n    /**\n     * The constructor of the event model class, to be used in the project. Will be set as the\n     * [modelClass](https://bryntum.com/products/calendar/docs/api/Core/data/Store#config-modelClass) property of the [eventStore](#Scheduler/model/ProjectModel#property-eventStore)\n     */\n    eventModelClass ? : typeof EventModel\n    /**\n     * Data use to fill the [eventStore](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ProjectModel#property-eventStore). Should be an array of\n     * [EventModels](https://bryntum.com/products/calendar/docs/api/Scheduler/model/EventModel) or its configuration objects.\n     */\n    events ? : EventModel[]|EventModelConfig[]\n    /**\n     * The initial data, to fill the [eventStore](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ProjectModel#property-eventStore) with.\n     * Should be an array of [EventModels](https://bryntum.com/products/calendar/docs/api/Scheduler/model/EventModel) or its configuration objects.\n     */\n    eventsData ? : EventModel[]|EventModelConfig[]\n    /**\n     * An [EventStore](https://bryntum.com/products/calendar/docs/api/Scheduler/data/EventStore) instance or a config object.\n     */\n    eventStore ? : EventStore|EventStoreConfig\n    /**\n     * The constructor to create an event store instance with. Should be a class, subclassing the\n     * [EventStore](https://bryntum.com/products/calendar/docs/api/Scheduler/data/EventStore)\n     */\n    eventStoreClass ? : typeof EventStore|object\n    /**\n     * Start expanded or not (only valid for tree data)\n     */\n    expanded ? : Boolean\n    /**\n     * Unique identifier for the record. Might be mapped to another dataSource using idField, but always exposed as\n     * record.id. Will get a generated value if none is specified in records data.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/model/ProjectModel#config-id)\n     */\n    id ? : string|number\n    /**\n     * Project data as a JSON string, used to populate its stores.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/model/ProjectModel#config-json)\n     */\n    json ? : string\n    /**\n     * This is a read-only field provided in server synchronization packets to specify\n     * which position the node takes in the parent's ordered children array.\n     * This index is set on load and gets updated on reordering nodes in tree. Sorting and filtering\n     * have no effect on it.\n     */\n    orderedParentIndex ? : number\n    /**\n     * This is a read-only field provided in server synchronization packets to specify\n     * which record id is the parent of the record.\n     */\n    parentId ? : string|number|null\n    /**\n     * This is a read-only field provided in server synchronization packets to specify\n     * which position the node takes in the parent's children array.\n     * This index is set on load and gets updated automatically after row reordering, sorting, etc.\n     * To save the order, need to persist the field on the server and when data is fetched to be loaded,\n     * need to sort by this field.\n     */\n    parentIndex ? : number\n    /**\n     * Flag the record as read-only on the UI level, preventing the end user from manipulating it using editing\n     * features such as cell editing and event dragging.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/model/ProjectModel#config-readOnly)\n     */\n    readOnly ? : Boolean\n    /**\n     * This field is added to the class at runtime when the Store is configured with\n     * [lazyLoad](https://bryntum.com/products/calendar/docs/api/Core/data/Store#config-lazyLoad). It is also required for lazy load functionality in a Tree store. The\n     * number specified should reflect the <strong>total</strong> amount of children of a parent node, including nested descendants.\n     */\n    remoteChildCount ? : number\n    /**\n     * The constructor of the resource model class, to be used in the project. Will be set as the\n     * [modelClass](https://bryntum.com/products/calendar/docs/api/Core/data/Store#config-modelClass) property of the [resourceStore](#Scheduler/model/ProjectModel#property-resourceStore)\n     */\n    resourceModelClass ? : typeof ResourceModel\n    /**\n     * Data use to fill the [resourceStore](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ProjectModel#property-resourceStore). Should be an array of\n     * [ResourceModels](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ResourceModel) or its configuration objects.\n     */\n    resources ? : ResourceModel[]|ResourceModelConfig[]\n    /**\n     * The initial data, to fill the [resourceStore](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ProjectModel#property-resourceStore) with.\n     * Should be an array of [ResourceModels](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ResourceModel) or its configuration objects.\n     */\n    resourcesData ? : ResourceModel[]|ResourceModelConfig[]\n    /**\n     * A [ResourceStore](https://bryntum.com/products/calendar/docs/api/Scheduler/data/ResourceStore) instance or a config object.\n     */\n    resourceStore ? : ResourceStore|ResourceStoreConfig\n    /**\n     * The constructor to create a resource store instance with. Should be a class, subclassing the\n     * [ResourceStore](https://bryntum.com/products/calendar/docs/api/Scheduler/data/ResourceStore)\n     */\n    resourceStoreClass ? : typeof ResourceStore|object\n    /**\n     * Data use to fill the [resourceTimeRangeStore](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ProjectModel#property-resourceTimeRangeStore). Should be an array\n     * of [ResourceTimeRangeModels](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ResourceTimeRangeModel) or its configuration objects.\n     */\n    resourceTimeRanges ? : ResourceTimeRangeModel[]|ResourceTimeRangeModelConfig[]\n    /**\n     * The initial data, to fill the [resourceTimeRangeStore](https://bryntum.com/products/calendar/docs/api/Scheduler/model/mixin/ProjectModelMixin#property-resourceTimeRangeStore) with.\n     * Should be an array of [ResourceTimeRangeModel](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ResourceTimeRangeModel) or it's\n     * configuration objects.\n     */\n    resourceTimeRangesData ? : ResourceTimeRangeModel[]\n    /**\n     * A [ResourceTimeRangeStore](https://bryntum.com/products/calendar/docs/api/Scheduler/data/ResourceTimeRangeStore) instance or a config object.\n     */\n    resourceTimeRangeStore ? : ResourceTimeRangeStore|ResourceTimeRangeStoreConfig\n    /**\n     * The constructor to create a resource time range store instance with. Should be a class subclassing the\n     * [ResourceTimeRangeStore](https://bryntum.com/products/calendar/docs/api/Scheduler/data/ResourceTimeRangeStore)\n     */\n    resourceTimeRangeStoreClass ? : typeof ResourceTimeRangeStore|object\n    /**\n     * Experimental hook that lets the app determine if a bound dataset needs syncing with the store or not, and\n     * if it does - which records that should be processed. Only called for stores that are configured with\n     * `syncDataOnLoad: true` (which is the default in the React, Angular and Vue wrappers).\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/model/ProjectModel#config-shouldSyncDataOnLoad)\n     * @param {object} options Options passed by the store to this hook\n     * @param {Core.data.Store} options.store Store about to be synced\n     * @param {Core.data.Model} options.records Records currently in the store\n     * @param {object[]} options.data Incoming data\n     * @returns {Set<any>,boolean} Return `false` to prevent the store from syncing, or a set of record ids that need further processing (for records that has some kind of change, eg. an update, removal or addition)\n     */\n    shouldSyncDataOnLoad ? : (options: { store: Store, records: Model, data: object[] }) => Set<any>|Boolean\n    /**\n     * Silences propagations caused by the project loading.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/model/ProjectModel#config-silenceInitialCommit)\n     */\n    silenceInitialCommit ? : Boolean\n    /**\n     * Configuration options to provide to the STM manager\n     */\n    stm ? : StateTrackingManagerConfig|StateTrackingManager\n    /**\n     * The constructor of the time range model class, to be used in the project. Will be set as the\n     * [modelClass](https://bryntum.com/products/calendar/docs/api/Core/data/Store#config-modelClass) property of the [timeRangeStore](#Calendar/model/ProjectModel#property-timeRangeStore)\n     */\n    timeRangeModelClass ? : typeof TimeRangeModel\n    /**\n     * Data use to fill the [timeRangeStore](https://bryntum.com/products/calendar/docs/api/Scheduler/model/ProjectModel#property-timeRangeStore). Should be an array of\n     * [TimeRangeModels](https://bryntum.com/products/calendar/docs/api/Scheduler/model/TimeRangeModel) or its configuration objects.\n     */\n    timeRanges ? : SchedulerTimeRangeModel[]|TimeRangeModelConfig[]\n    /**\n     * The initial data, to fill the [timeRangeStore](https://bryntum.com/products/calendar/docs/api/Scheduler/model/mixin/ProjectModelMixin#property-timeRangeStore) with.\n     * Should be an array of [TimeSpan](https://bryntum.com/products/calendar/docs/api/Scheduler/model/TimeSpan) or its configuration objects.\n     */\n    timeRangesData ? : TimeSpan[]\n    /**\n     * A [Store](https://bryntum.com/products/calendar/docs/api/Core/data/Store) instance or a config object.\n     */\n    timeRangeStore ? : Store|StoreConfig\n    /**\n     * The constructor to create an timeRange store instance with. Should be a class, subclassing the\n     * [Store](https://bryntum.com/products/calendar/docs/api/Core/data/Store)\n     */\n    timeRangeStoreClass ? : typeof Store|object\n    /**\n     * Set to a IANA time zone (i.e. `Europe/Stockholm`) or a UTC offset in minutes (i.e. `-120`). This will\n     * convert all events, tasks and time ranges to the specified time zone or offset. It will also affect the\n     * displayed timeline's headers as well at the start and end date of it.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/model/ProjectModel#config-timeZone)\n     */\n    timeZone ? : string|number\n    /**\n     * Specifies the output format of [toJSON](https://bryntum.com/products/calendar/docs/api/Scheduler/model/mixin/ProjectModelCommon#function-toJSON).\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/model/ProjectModel#config-toJSONResultFormat)\n     */\n    toJSONResultFormat ? : 'inlineData'|'model'\n    /**\n     * By default, the stores of a project use the raw data objects passed to them as the data source for their\n     * records if data is loaded remotely (using an `AjaxStore` or a `CrudManager`). For data supplied inline,\n     * the data objects are instead by default cloned to avoid the original data object being modified by the\n     * store.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/model/ProjectModel#config-useRawData)\n     */\n    useRawData ? : Boolean\n\n}>();\n\nconst emit = defineEmits<{\n    /**\n     * Fired when data in any of the projects stores changes.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/model/ProjectModel#event-change)\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Scheduler.model.SchedulerProjectModel,any} params.event.source This project\n     * @param {Core.data.Store} params.event.store Affected store\n     * @param {'remove','removeAll','add','clearchanges','filter','update','dataset','replace'} params.event.action Name of action which triggered the change. May be one of:  * `'remove'` * `'removeAll'` * `'add'` * `'clearchanges'` * `'filter'` * `'update'` * `'dataset'` * `'replace'`\n     * @param {Core.data.Model} params.event.record Changed record, for actions that affects exactly one record (`'update'`)\n     * @param {Core.data.Model[]} params.event.records Changed records, passed for all actions except `'removeAll'`\n     * @param {object} params.event.changes Passed for the `'update'` action, info on which record fields changed\n     */\n    (e: 'change', params: ((event: { source: SchedulerProjectModel|any, store: Store, action: 'remove'|'removeAll'|'add'|'clearchanges'|'filter'|'update'|'dataset'|'replace', record: Model, records: Model[], changes: object }) => void)|string): void\n    /**\n     * Fired when the engine has finished its calculations and the results has been written back to the records.\n     * ...\n     * [View online docs...](https://bryntum.com/products/calendar/docs/api/Calendar/model/ProjectModel#event-dataReady)\n     * @param {string} e Event name\n     * @param {object} params Event parameters\n     * @param {object} params.event Event object\n     * @param {Scheduler.model.SchedulerProjectModel,any} params.event.source The project\n     * @param {boolean} params.event.isInitialCommit Flag that shows if this commit is initial\n     * @param {Set<any>} params.event.records Set of all [Model](https://bryntum.com/products/calendar/docs/api/Core/data/Model)s that were modified in the completed transaction. Use the [modifications](https://bryntum.com/products/calendar/docs/api/Core/data/Model#property-modifications) property of each Model to identify modified fields.\n     */\n    (e: 'dataReady', params: ((event: { source: SchedulerProjectModel|any, isInitialCommit: boolean, records: Set<any> }) => void)|string): void\n}>();\n\nconst widgetData = {\n    instanceClass : ProjectModel,\n    instanceName  : 'ProjectModel',\n\n    configNames   : [\n        'adjustDurationToDST',\n        'assignmentModelClass',\n        'assignmentsData',\n        'assignmentStoreClass',\n        'children',\n        'dependenciesData',\n        'dependencyModelClass',\n        'dependencyStoreClass',\n        'eventModelClass',\n        'eventsData',\n        'eventStoreClass',\n        'expanded',\n        'orderedParentIndex',\n        'parentId',\n        'parentIndex',\n        'resourceModelClass',\n        'resourcesData',\n        'resourceStoreClass',\n        'resourceTimeRangesData',\n        'resourceTimeRangeStoreClass',\n        'silenceInitialCommit',\n        'timeRangeModelClass',\n        'timeRangesData',\n        'timeRangeStoreClass',\n        'toJSONResultFormat',\n        'useRawData'\n    ],\n    propertyConfigNames : [\n        'assignments',\n        'assignmentStore',\n        'dependencies',\n        'dependencyStore',\n        'events',\n        'eventStore',\n        'id',\n        'json',\n        'onChange',\n        'onDataReady',\n        'readOnly',\n        'remoteChildCount',\n        'resources',\n        'resourceStore',\n        'resourceTimeRanges',\n        'resourceTimeRangeStore',\n        'shouldSyncDataOnLoad',\n        'stm',\n        'timeRanges',\n        'timeRangeStore',\n        'timeZone'\n    ],\n    propertyNames : [\n        'allChildren',\n        'allUnfilteredChildren',\n        'descendantCount',\n        'hasGeneratedId',\n        'inlineData',\n        'internalId',\n        'isCommitting',\n        'isCreating',\n        'isValid',\n        'previousSiblingsTotalCount',\n        'visibleDescendantCount'\n    ],\n    eventNames : [\n        'change',\n        'dataReady'\n    ]\n};\n\nconst instance: {\n    value?: ProjectModel\n} = {};\n\nconst refElement = ref<HTMLDivElement>()!;\n// Storage for teleports (in-cell Vue component instances) automatically renderer by template\nconst teleports = ref(new Map());\n\n// Provide teleports for processCellContent\nprovide('teleports', teleports);\n\nonMounted(() => {\n\n    const me = getCurrentInstance()!;\n\n    instance.value = WrapperHelper.createWidget<typeof ProjectModel>({\n        me,\n        widgetData,\n        emit,\n        element : refElement.value!,\n        toRaw\n    });\n\n    const watcher = (prop: string, callback: any) => watch(() => me.props[prop], callback);\n    WrapperHelper.watchProps(instance.value, widgetData, watcher);\n});\n\nonBeforeUnmount(() => {\n    // @ts-ignore\n    instance.value?.destroy?.();\n});\n\ndefineExpose({\n    instance,\n    refElement,\n    teleports\n});\n\n</script>\n"],"names":["emit","__emit","widgetData","ProjectModel","instance","refElement","ref","teleports","provide","onMounted","me","getCurrentInstance","WrapperHelper","toRaw","watcher","prop","callback","watch","onBeforeUnmount","_b","_a","__expose"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgRA,UAAMA,IAAOC,GA8BPC,IAAa;AAAA,MACf,eAAgBC;AAAA,MAChB,cAAgB;AAAA,MAEhB,aAAgB;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,qBAAsB;AAAA,QAClB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,eAAgB;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,YAAa;AAAA,QACT;AAAA,QACA;AAAA,MAAA;AAAA,IAER,GAEMC,IAEF,CAAC,GAECC,IAAaC,EAAoB,GAEjCC,IAAYD,EAAQ,oBAAA,KAAK;AAG/B,WAAAE,EAAQ,aAAaD,CAAS,GAE9BE,EAAU,MAAM;AAEZ,YAAMC,IAAKC,EAAmB;AAErB,MAAAP,EAAA,QAAQQ,EAAc,aAAkC;AAAA,QAC7D,IAAAF;AAAA,QACA,YAAAR;AAAA,QACA,MAAAF;AAAA,QACA,SAAUK,EAAW;AAAA,QACrB,OAAAQ;AAAA,MAAA,CACH;AAEK,YAAAC,IAAU,CAACC,GAAcC,MAAkBC,EAAM,MAAMP,EAAG,MAAMK,CAAI,GAAGC,CAAQ;AACrF,MAAAJ,EAAc,WAAWR,EAAS,OAAOF,GAAYY,CAAO;AAAA,IAAA,CAC/D,GAEDI,EAAgB,MAAM;;AAElB,OAAAC,KAAAC,IAAAhB,EAAS,UAAT,gBAAAgB,EAAgB,YAAhB,QAAAD,EAAA,KAAAC;AAAA,IAA0B,CAC7B,GAEYC,EAAA;AAAA,MACT,UAAAjB;AAAA,MACA,YAAAC;AAAA,MACA,WAAAE;AAAA,IAAA,CACH;;;;;;"}