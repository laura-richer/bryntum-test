import { defineComponent as k, ref as _, computed as v, onMounted as C, createElementBlock as B, openBlock as $, createElementVNode as o, renderSlot as y, toDisplayString as E, unref as R, createVNode as t } from "vue";
import { _ as D } from "./05YhxvzA.js";
import { _ as d } from "./DzgX-pfP.js";
import { DemoCodeEditor as w, CSSHelper as i, AjaxHelper as S } from "@bryntum/calendar";
const j = { class: "demo-header" }, z = { id: "title-container" }, H = ["href"], P = { id: "tools" }, a = "../", F = /* @__PURE__ */ k({
  __name: "BryntumDemoHeader",
  props: {
    title: {}
  },
  setup(T, { expose: b }) {
    var h;
    const l = _(null), c = _(null), s = document.title.split(" - ")[1] || document.title, x = document.location.search.includes("test"), p = `https://bryntum.com/download/?product=${((h = document.location.href.match(/\/(\w+)(-trial)?\/[-\w]*examples\//)) == null ? void 0 : h[1].toLowerCase()) || "calendar"}`, n = !w.monacoCodePath;
    let m;
    const u = v(() => {
      const e = /(.*?\/)(examples.*?\/frameworks\/.*?)\/dist/.exec(document.location.href);
      return e ? `${e[1]}examples/#example-${e[2].replace(/\//gm, "-").replace("examples-frameworks", "frameworks")}` : "#";
    }), f = async () => {
      m = await w.toggleCodeEditor(
        m,
        l.value.instance.value,
        {
          appFolder: a,
          preferredSources: [
            /App\.vue/,
            /\w+Config\.[tj]s/
          ]
        }
      );
    }, g = async () => {
      const e = (await S.get(`${a}app.config.json`, { parseJson: !0 })).parsedJson;
      if (e.zip || x) {
        const r = c.value.instance.value;
        r.hidden = !1, r.href = `${a}${e.zip}`;
      }
    };
    return C(() => {
      n || (i.insertRule("body { flex-direction : row !important }"), i.insertRule("#__nuxt, #container, #app { flex : 1 !important; overflow : hidden !important }"), i.insertRule(".b-codeeditor-header { padding : 0.5em !important }"), g());
    }), b({
      link: u,
      headerTitle: s,
      hiddenEditor: n,
      downloadLink: p,
      toggleCodeEditor: f
    }), (e, r) => ($(), B("header", j, [
      o("div", z, [
        o("a", {
          id: "title",
          href: u.value
        }, [
          o("h1", null, E(R(s)), 1)
        ], 8, H)
      ]),
      y(e.$slots, "default"),
      o("div", P, [
        t(d, {
          text: "Download Trial",
          href: p,
          cls: "b-green b-raised"
        }),
        t(d, {
          ref_key: "codeButtonRef",
          ref: l,
          icon: "b-icon-code",
          tooltip: "Click to show the code viewer",
          cls: "b-raised b-blue b-code-button",
          hidden: n,
          onClick: f
        }, null, 512),
        t(d, {
          ref_key: "downloadButtonRef",
          ref: c,
          icon: "b-icon-download",
          tooltip: "Download this demo zip archive",
          cls: "b-raised b-blue",
          href: "#",
          hidden: !0
        }, null, 512),
        t(D)
      ])
    ]));
  }
});
export {
  F as _
};
//# sourceMappingURL=6ta0Ddnm.js.map
