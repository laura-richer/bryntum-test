import SchedulerExcelExporter from '../../../Scheduler/feature/experimental/ExcelExporter.js';
import CalendarFeature from '../CalendarFeature.js';

/**
 * @module Calendar/feature/experimental/ExcelExporter
 */

/**
 * **NOTE**: This class requires a 3rd party library to operate.
 *
 * A plugin that allows exporting Calendar data to Excel without involving the server. It uses {@link Scheduler.util.ScheduleTableExporter}
 * class as data provider, [zipcelx library](https://www.npmjs.com/package/zipcelx)
 * forked and adjusted to support [column width config](https://github.com/bryntum/zipcelx/tree/column-width-build)
 * and [Microsoft XML specification](https://msdn.microsoft.com/en-us/library/office/documentformat.openxml.spreadsheet.aspx).
 * Zipcelx should be either in global scope (window) or can be provided with {@link #config-zipcelx} config.
 *
 * ```html
 * // Global scope
 * <script src="zipcelx.js"></script>
 * ```
 *
 * ```javascript
 * // importing from package
 * import zipcelx from 'zipcelx';
 *
 * const grid = new Grid({
 *     features : {
 *         excelExporter : {
 *             zipcelx
 *         }
 *     }
 * })
 * ```
 *
 * Here is an example of how to add the feature:
 *
 * ```javascript
 * const calendar = new Calendar({
 *     features : {
 *         excelExporter : {
 *             // Choose the date format for date fields
 *             dateFormat : 'YYYY-MM-DD HH:mm',
 *             exporterConfig : {
 *                 // Choose the Resource fields to include in the exported file
 *                 resourceColumns : [{ text : 'Calendar', field : 'calendar' }],
 *
 *                 // Choose the Event fields to include in the exported file
 *                 eventColumns    : [
 *                     { text : 'Task', field : 'name' },
 *                     { text : 'Starts', field : 'startDate', width : 140 },
 *                     { text : 'Ends', field : 'endDate', width : 140 }
 *                 ]
 *             }
 *         }
 *     }
 * });
 * ```
 *
 * And how to call it:
 *
 * ```javascript
 * calendar.features.excelExporter.export({
 *     filename : 'Export',
 *     exporterConfig : {
 *         columns : [{ text : 'Staff', field : 'name' }]
 *     }
 * })
 * ```
 *
 * This feature is **disabled** by default.
 *
 * @extends Scheduler/feature/experimental/ExcelExporter
 * @classtype excelExporter
 * @feature
 * @demo Calendar/exporttoexcel
 *
 * @typings Scheduler.feature.experimental.ExcelExporter -> Scheduler.feature.experimental.SchedulerExcelExporter
 */
export default class ExcelExporter extends SchedulerExcelExporter {
    static $name =  'ExcelExporter';
    static type =  'excelExporter';

    constructor(config) {
        super(config.client, config);
    }

    get exporter() {
        const me = this;
        return me._exporter || (me._exporter = me.exporterClass.new({ target : me.client }, me.exporterConfig));
    }
}

// Register this feature type with its Factory
CalendarFeature.register(ExcelExporter.type, ExcelExporter);
