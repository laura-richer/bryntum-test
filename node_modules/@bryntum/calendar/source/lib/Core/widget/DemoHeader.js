import AjaxHelper from '../helper/AjaxHelper.js';
import CSSHelper from '../helper/CSSHelper.js';
import Fullscreen from '../helper/util/Fullscreen.js';
import Container from './Container.js';
import DemoCodeEditor from './DemoCodeEditor.js';
import Toolbar from './Toolbar.js';

/**
 * @module Core/widget/DemoHeader
 */

/**
 * This is an internal class used to create a demo header for Bryntum framework apps.
 * Not required for end-user application.
 *
 * @extends Core/widget/Container
 * @typingsclass
 * @internal
 */
export default class DemoHeader extends Container {

    static $name = 'DemoHeader';

    static type = 'demoheader';

    static configurable = {
        /**
         * The ID of the owner div element, which will have a header as first child
         * @config {String}
         */
        insertFirst : 'container',

        /**
         * The path to the application folder to show code viewer
         * @config {String}
         */
        appFolder : '../',

        cls : 'demo-header',

        items : [
            {
                type  : 'container',
                id    : 'title-container', 
                items : [{
                    type              : 'container',
                    tag               : 'a',
                    id                : 'title', 
                    elementAttributes : {
                        href : this.titleLink
                    },
                    items : [{
                        html    : (document.title ?? 'Demo').split('-').pop().trim(),
                        tag     : 'h1',
                        tooltip : document.querySelector('meta[name="description"]')?.content ?? ''
                    }]
                }]
            },
            {
                type  : Toolbar.type,
                id    : 'tools', 
                style : {
                    border : 'none',
                    height : '2.8em'
                },
                defaults : {
                    style : {
                        margin : 0
                    },
                    cls : 'b-raised b-blue'
                },
                items : [
                    '->',
                    {
                        ref    : 'trialButton',
                        type   : 'button',
                        text   : 'Download Trial',
                        cls    : 'b-green b-raised',
                        href   : '#',
                        hidden : true
                    },
                    {
                        ref     : 'codeButton',
                        type    : 'button',
                        tooltip : 'Click to show the code viewer',
                        icon    : 'b-icon-code',
                        onClick : 'up.toggleCodeEditor',
                        hidden  : true
                    },
                    {
                        ref     : 'downloadButton',
                        type    : 'button',
                        tooltip : 'Download this demo zip archive',
                        icon    : 'b-icon-download',
                        href    : '#',
                        hidden  : true
                    },
                    {
                        ref     : 'fullscreenButton',
                        type    : 'button',
                        tooltip : 'Full screen',
                        icon    : 'b-icon-fullscreen',
                        onClick() {
                            if (Fullscreen.enabled) {
                                if (!Fullscreen.isFullscreen) {
                                    Fullscreen.request(document.body);
                                }
                                else {
                                    Fullscreen.exit();
                                }
                            }
                        }
                    }
                ]
            }
        ]
    };

    construct(...args) {
        super.construct(...args);
        this.setupToolbar();
    }

    static get titleLink() {
        // Convert:
        // https://bryntum.com/products/schedulerpro/examples-scheduler/frameworks/react/javascript/basic/build/
        // https://bryntum.com/products/schedulerpro/examples/frameworks/react/javascript/basic/build/
        // To:
        // https://bryntum.com/products/schedulerpro/examples/#example-examples-scheduler-frameworks-react-basic
        // https://bryntum.com/products/schedulerpro/examples/#example-frameworks-react-basic
        const match = /(.*?\/)(examples.*?\/frameworks\/.*?)\/(build|out|dist)/.exec(document.location.href);
        return match ? `${match[1]}examples/#example-${match[2].replace(/\//gm, '-').replace('examples-frameworks', 'frameworks')}` : '#';
    }

    async toggleCodeEditor() {
        this.codeEditor = await DemoCodeEditor.toggleCodeEditor(
            this.codeEditor,
            this.widgetMap.tools.widgetMap.codeButton,
            {
                appFolder        : this.appFolder,
                preferredSources : [
                    /App\.[jt]sx?/,
                    /\w+Config\.[jt]sx?/,
                    /index\.[jt]sx?/
                ]
            }
        );
    }

    async setupToolbar() {
        const
            { location }  = document,
            isTest        = location.search.includes('test'),
            isDemoBrowser = location.href.match(/examples\/frameworks/);

        if (isDemoBrowser || isTest) {
            const
                demoProduct   = location.href.match(/\/(\w+)(-trial)?\/[-\w]*examples\//)?.[1].toLowerCase() || 'grid',
                { widgetMap } = this.widgetMap.tools,
                {
                    downloadButton,
                    trialButton
                }             = widgetMap;

            Object.values(widgetMap).forEach(widget => widget.hidden = false);

            trialButton.href = `https://bryntum.com/download/?product=${demoProduct}`;

            const appConfig = (
                await AjaxHelper.get(`${this.appFolder}/app.config.json`, { parseJson : true }).catch(() => {})
            )?.parsedJson;
            if (appConfig?.zip || isTest) {
                downloadButton.href = `${this.appFolder}${appConfig.zip}`;
            }
            else {
                downloadButton.hidden = true;
            }

            // Code editor styling
            CSSHelper.insertRule('body { flex-direction : row !important }');
            CSSHelper.insertRule('#container { flex: 1 !important; overflow : hidden !important }');
        }
    }

}
