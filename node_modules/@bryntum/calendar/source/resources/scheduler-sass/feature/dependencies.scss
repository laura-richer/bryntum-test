@import '../../grid-sass/variables';
@import '../variables';

.b-sch-foreground-canvas {
    --scheduler-dependency-terminal-offset : 0px;
    --scheduler-dependency-terminal-size   : #{$terminal-size};
}

svg.b-sch-dependencies-canvas {
    --scheduler-dependency-marker : url('#arrowEnd');

    contain                       : unset;
    overflow                      : visible;
    z-index                       : $dependency-zindex;
}

.b-sch-dependency-arrow path {
    /* Fallback for Safari */
    fill : $dependency-color;
    /* Supported by Chrome & FF */
    fill : context-stroke;
}

.b-sch-dependency {
    pointer-events : visibleStroke;
    fill           : transparent;
    stroke         : $dependency-color;
    stroke-width   : 1;
    transition     : stroke-width .2s linear, stroke .2s linear;

    &.b-sch-dependency-over {
        stroke-width     : 2;
        stroke-dasharray : 0;
    }

    &.b-sch-released {
        display : none;
    }

    &.b-click-area {
        stroke           : transparent;

        // Active area has no gaps in it. Needs !important to override other, high specificity rules
        stroke-dasharray : none !important;
        marker-end       : none;
    }
}

//region Markers

.b-sch-dependency {
    marker-end : var(--scheduler-dependency-marker);

    &.b-sch-bidirectional-line {
        marker-start : var(--scheduler-dependency-marker);
    }

    &.b-sch-dependency-markerless {
        marker-end : none;
    }
}

//endregion

//region Terminals

.b-dependencies {

    .b-sch-event-hover {
        z-index : $event-zindex + 101; // Beat focused event
    }

    .b-sch-event.b-sch-terminals-visible,
    .b-gantt-task.b-sch-terminals-visible {
        overflow : visible;
    }

    // highlight linked events
    &.b-highlighting {
        .b-sch-event-wrap .b-sch-event,
        .b-sch-dependency {
            opacity : .3;

            &.b-highlight {
                opacity : 1;
            }
        }

        .b-sch-resourcetimerange {
            opacity : .3;
        }
    }
}

.b-sch-terminal {
    width                       : var(--scheduler-dependency-terminal-size);
    height                      : var(--scheduler-dependency-terminal-size);
    background-color            : $dependency-terminal-color;
    border-width                : 1px;
    border-style                : solid;
    border-color                : inherit;
    border-radius               : 50%;
    position                    : absolute;
    z-index                     : $dependency-terminal-z-index;
    cursor                      : pointer;

    // push the terminals outside the event bar a little.
    --terminal-start-end-offset : 80%;

    @media (pointer : coarse) {
        // There has to be more separation for touch so that the terminal's
        // extended touchable zone doesn't collide with the event's resizer handle.
        --terminal-start-end-offset : 115%;

        &::after {
            content       : "";
            height        : calc(var(--scheduler-dependency-terminal-size) * 2);
            width         : calc(var(--scheduler-dependency-terminal-size) * 2);
            border-radius : 50%;
            position      : absolute;
            transform     : translate(calc(var(--scheduler-dependency-terminal-size) * -0.5 - 1), calc(var(--scheduler-dependency-terminal-size) * -0.5 - 1));
        }
    }

    &.b-sch-terminal:hover {
        background-color : $dependency-terminal-hover-color;
    }

    // Not visible when the scheduler is dragging or resizing an event
    .b-dragging &,
    .b-sch-event-resizing & {
        display : none;
    }
}

.b-creating-dependency {
    .b-sch-terminal:hover,
    .b-sch-terminal-active {
        background-color : $dependency-terminal-hover-color;

        &.b-valid {
            border-color     : $dependency-valid-color;
            background-color : $dependency-terminal-valid-color;
        }

        &.b-invalid {
            border-color     : $dependency-invalid-color;
            background-color : $dependency-terminal-invalid-color;
        }
    }

    * {
        touch-action : none;
    }
}

.b-sch-terminal-top {
    top       : var(--scheduler-dependency-terminal-offset);
    left      : 50%; // RTL OK
    transform : translateX(-50%) translateY(-80%);
}

.b-sch-terminal-bottom {
    bottom    : var(--scheduler-dependency-terminal-offset);
    left      : 50%; // RTL OK
    transform : translateX(-50%) translateY(80%);
}

.b-sch-terminal-start {
    left      : var(--scheduler-dependency-terminal-offset);
    top       : 50%;
    transform : translateX(calc((var(--terminal-start-end-offset) * -1) * var(--rtl-negate))) translateY(-50%);

    .b-rtl & {
        left  : auto;
        right : 0;
    }
}

.b-sch-terminal-end {
    right     : var(--scheduler-dependency-terminal-offset);
    top       : 50%;
    transform : translateX(calc(var(--terminal-start-end-offset) * var(--rtl-negate))) translateY(-50%);

    .b-rtl & {
        right : auto;
        left  : 0;
    }
}

.b-sch-terminal-hover-area {
    grid-area    : body;
    width        : calc(100% + var(--scheduler-dependency-terminal-offset) * -2 + var(--scheduler-dependency-terminal-size) * 0.8);
    height       : calc(100% + var(--scheduler-dependency-terminal-offset) * -2 + var(--scheduler-dependency-terminal-size) * 0.8);
    justify-self : center;
}

// Position left & right terminals differently for milestones, unless using milestone layout mode in which case they
// are handled as normal events
.b-schedulerbase:not(.b-sch-layout-milestones) .b-milestone:not(.b-sch-event-withicon),
.b-gantt:not(.b-sch-layout-milestones) .b-milestone:not(.b-gantt-task-withicon) {
    .b-sch-terminal-start {
        .b-labels-topbottom & {
            transform : translate(calc(-0.35em * var(--rtl-negate)), -50%);
        }
    }

    .b-sch-terminal-end {
        .b-labels-topbottom & {
            transform : translate(calc(0.35em * var(--rtl-negate)), -50%);
        }
    }
}

//endregion

//region Proxy

.b-sch-dependency-connector {
    position         : absolute;
    contain          : strict;
    border-top       : 2px dashed $dependency-color;
    z-index          : 10;
    transform-origin : 0 0;
    pointer-events   : none;

    &.b-removing {
        transition : width 0.2s ease-out;
    }

    &.b-valid {
        border-color     : $dependency-valid-color;
        border-top-style : solid;
    }
}

//endregion

//region Tooltip

.b-sch-dependency-creation-tooltip {
    &.b-popup {
        max-width : none;
    }

    .b-popup-header {
        padding          : 0.5em 0.075em;
        background-color : $dependency-valid-color;

        // https://github.com/bryntum/support/issues/1388
        .b-safari &,
        .b-firefox & {
            width : 1.5em;
        }

        i {
            margin-bottom : .5em;
        }
    }

    &.b-rtl .b-popup-header i {
        margin-bottom : 0;
        margin-top    : .5em;
    }

    &.b-invalid .b-popup-header {
        background-color : $dependency-invalid-color;
    }

    &.b-checking .b-popup-header {
        background-color : $gray;
    }
}

:is(.b-sch-dependency-creation-tooltip,.b-sch-dependency-tooltip) {
    .b-panel-header {
        color : #fff;
    }

    .b-tooltip-content {
        display               : grid;
        grid-template-columns : auto auto auto;
        grid-column-gap       : .5em;
        align-items           : center;

        label {
            font-size : .8em;
        }

        .b-sch-box {
            width    : 12px;
            height   : 8px;
            border   : 1px solid $dependency-color;
            display  : none;
            position : relative;

            &.b-start,
            &.b-end,
            &.b-right,
            &.b-left,
            &.b-top,
            &.b-bottom {
                display : block;
            }

            &:after {
                content          : '';
                width            : 3px;
                height           : 3px;
                border-radius    : 50%;
                background-color : $dependency-tooltip-terminal-color;
                position         : absolute;
            }

            &.b-end:after,
            &.b-right:after {
                right     : -2px;
                top       : 50%;
                transform : translateY(-50%);
            }

            .b-rtl &.b-end:after {
                right : auto;
                left  : -2px;
            }

            &.b-start:after,
            &.b-left:after {
                left      : -2px;
                top       : 50%;
                transform : translateY(-50%);
            }

            .b-rtl &.b-start:after {
                left  : auto;
                right : -2px;
            }

            &.b-top:after {
                top       : -2px;
                left      : 50%; // RTL OK
                transform : translateX(-50%);
            }

            &.b-bottom:after {
                bottom    : -2px;
                left      : 50%; // RTL OK
                transform : translateX(-50%);
            }

        }
    }
}

// Predecessor picker list
.b-predecessor-list {
    display        : flex;
    flex-direction : column;

    > * {
        flex       : 0 0 auto;
        align-self : stretch;
        width      : auto;
    }

    // Predecessor picker item
    > .b-list-item {
        .b-predecessor-item-text {
            flex : 1;
        }

        .b-sch-box {
            width               : 1.2em;
            height              : .9em;
            border              : 1px solid $list-dependency-color;
            margin-inline-start : .5em;
            position            : relative;

            &:after {
                content          : '';
                width            : .5em;
                height           : .5em;
                border-radius    : 50%;
                background-color : $list-dependency-terminal-color;
                position         : absolute;
                border           : 1px solid $list-dependency-color;
                display          : none;
            }
        }

        &.b-selected {
            .b-sch-box {
                background-color : $list-dependency-background-color;
            }

            // Finish to Start
            &.b-fs {
                .b-sch-box {
                    &.b-from::after {
                        right     : -.25em;
                        top       : 50%;
                        transform : translateY(-50%);
                        display   : block;

                        // TODO RTL
                    }

                    &.b-to::after {
                        left      : -.25em;
                        top       : 50%;
                        transform : translateY(-50%);
                        display   : block;

                        // TODO RTL
                    }
                }
            }

            // Start to Finish
            &.b-sf {
                .b-sch-box {
                    &.b-from::after {
                        left      : -.25em;
                        top       : 50%;
                        transform : translateY(-50%);
                        display   : block;

                        // TODO RTL
                    }

                    &.b-to::after {
                        right     : -.25em;
                        top       : 50%;
                        transform : translateY(-50%);
                        display   : block;

                        // TODO RTL
                    }
                }
            }

            // Start to Start
            &.b-ss {
                .b-sch-box {
                    &.b-from::after {
                        left      : -.25em;
                        top       : 50%;
                        transform : translateY(-50%);
                        display   : block;

                        // TODO RTL
                    }

                    &.b-to::after {
                        left      : -.25em;
                        top       : 50%;
                        transform : translateY(-50%);
                        display   : block;

                        // TODO RTL
                    }
                }
            }

            // Finish to Finish
            &.b-ff {
                .b-sch-box {
                    &.b-from::after {
                        right     : -.25em;
                        top       : 50%;
                        transform : translateY(-50%);
                        display   : block;

                        // TODO RTL
                    }

                    &.b-to::after {
                        right     : -.25em;
                        top       : 50%;
                        transform : translateY(-50%);
                        display   : block;

                        // TODO RTL
                    }
                }
            }
        }
    }
}

//endregion

.b-sch-dependency-selected {
    stroke       : $red;
    stroke-width : 2;
}

.b-sch-dependency-remove-icon {
    position       : absolute;
    height         : 1em;
    width          : 1em;
    display        : flex;
    translate      : -50% -50%;
    pointer-events : all;
    color          : $dependency-invalid-color;
    cursor         : pointer;
    z-index        : 1000;
    animation      : b-anim-show-dependency-remove-icon .2s ease-in-out 1;

    &:before {
        border-radius    : 50%;
        background-color : #fff;
    }

    &.b-removing {
        animation : b-anim-hide-dependency-remove-icon .15s linear 1;
    }
}

@keyframes b-anim-show-dependency-remove-icon {
    0% {
        scale   : 0;
        opacity : 0;
    }
    100% {
        scale   : 1;
        opacity : 1;
    }
}

@keyframes b-anim-hide-dependency-remove-icon {
    0% {
        scale   : 1;
        opacity : 1;
    }
    100% {
        scale   : 0;
        opacity : 0;
    }
}
