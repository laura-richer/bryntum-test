import Editor from '../../Core/widget/Editor.js';

/**
 * @module Scheduler/widget/TickEditor
 */

/**
 * A simple input editor for {@link Scheduler.feature.TickCells} feature.
 *
 * @extends Core/widget/Editor
 * @classtype tickeditor
 * @internal
 */
export default class TickEditor extends Editor {

    static $name = 'TickEditor';

    // Factoryable type name
    static type = 'tickeditor';

    static configurable = {
        appendToTargetParent : true,
        cls                  : 'b-tick-editor',
        inputField           : {
            type       : 'numberfield',
            autoSelect : true
        }
    };

    async onEditorKeyDown(event) {
        if (event.key === 'Tab' || event.key === 'Enter') {
            const
                me                = this,
                { record, owner } = me;

            event.preventDefault();
            event.stopImmediatePropagation();

            if (event.key === 'Tab') {
                const adjacentDate = owner.getAdjacentDate(record.startDate, !event.shiftKey);

                if (adjacentDate) {
                    await me.completeEdit();

                    owner.editTickCell({ id : record.resourceId }, adjacentDate);
                }
            }
            else if (event.key === 'Enter') {
                const adjacentResource = owner.getAdjacentResource(record.resourceId, !event.shiftKey);

                if (adjacentResource) {
                    await me.completeEdit();

                    owner.editTickCell(adjacentResource, record.startDate);
                }
            }
        }
        else {
            super.onEditorKeyDown(event);
        }
    }
};

// Register this widget type with its Factory
TickEditor.initClass();
